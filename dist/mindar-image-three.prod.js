/*! For license information please see mindar-image-three.prod.js.LICENSE.txt */
(()=>{var t={19:(t,e,n)=>{"use strict";n.d(e,{A:()=>o});var r=n(601),i=n.n(r),s=n(314),a=n.n(s)()(i());a.push([t.id,".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:rgba(0,0,0,0)}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid #fff;opacity:.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:#000;color:#fff;opacity:.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media(min-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media(max-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:.8;background:linear-gradient(to right, white 10px, transparent 10px) 0 0,linear-gradient(to right, white 10px, transparent 10px) 0 100%,linear-gradient(to left, white 10px, transparent 10px) 100% 0,linear-gradient(to left, white 10px, transparent 10px) 100% 100%,linear-gradient(to bottom, white 10px, transparent 10px) 0 0,linear-gradient(to bottom, white 10px, transparent 10px) 100% 0,linear-gradient(to top, white 10px, transparent 10px) 0 100%,linear-gradient(to top, white 10px, transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:#fff;animation:move 2s linear infinite}@keyframes move{0%,100%{top:0%}50%{top:calc(100% - 10px)}}",""]);const o=a},31:function(t,e,n){var r;!function(t,i){function s(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function a(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function o(t,e){var n=new s(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&a(r,n),i.state=function(){return a(n,{})}),i}i&&i.exports?i.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(e,n,e,i))||(i.exports=r):this.xorwow=o}(0,t=n.nmd(t),n.amdD)},56:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},67:function(t,e,n){var r;!function(t,i){function s(t){var e=this;e.next=function(){var t,n,r=e.x,i=e.i;return t=r[i],n=(t^=t>>>7)^t<<24,n^=(t=r[i+1&7])^t>>>10,n^=(t=r[i+3&7])^t>>>3,n^=(t=r[i+4&7])^t<<7,t=r[i+7&7],n^=(t^=t<<13)^t<<9,r[i]=n,e.i=i+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function a(t,e){return e.x=t.x.slice(),e.i=t.i,e}function o(t,e){null==t&&(t=+new Date);var n=new s(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&(r.x&&a(r,n),i.state=function(){return a(n,{})}),i}i&&i.exports?i.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(e,n,e,i))||(i.exports=r):this.xorshift7=o}(0,t=n.nmd(t),n.amdD)},72:t=>{"use strict";var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var s={},a=[],o=0;o<t.length;o++){var l=t[o],u=r.base?l[0]+r.base:l[0],c=s[u]||0,h="".concat(u," ").concat(c);s[u]=c+1;var d=n(h),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==d)e[d].references++,e[d].updater(p);else{var f=i(p,r);r.byIndex=o,e.splice(o,0,{identifier:h,updater:f,references:1})}a.push(h)}return a}function i(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,i){var s=r(t=t||[],i=i||{});return function(t){t=t||[];for(var a=0;a<s.length;a++){var o=n(s[a]);e[o].references--}for(var l=r(t,i),u=0;u<s.length;u++){var c=n(s[u]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}s=l}}},108:()=>{},113:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},180:function(t,e,n){var r;!function(t,i){function s(t){var e,n=this,r=(e=4022871197,function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function a(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function o(t,e){var n=new s(t),r=e&&e.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,r&&("object"==typeof r&&a(r,n),i.state=function(){return a(n,{})}),i}i&&i.exports?i.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(e,n,e,i))||(i.exports=r):this.alea=o}(0,t=n.nmd(t),n.amdD)},181:function(t,e,n){var r;!function(t,i){function s(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function a(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function o(t,e){var n=new s(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&a(r,n),i.state=function(){return a(n,{})}),i}i&&i.exports?i.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(e,n,e,i))||(i.exports=r):this.xor128=o}(0,t=n.nmd(t),n.amdD)},234:()=>{},314:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n}).join("")},e.i=function(t,n,r,i,s){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(r)for(var o=0;o<this.length;o++){var l=this[o][0];null!=l&&(a[l]=!0)}for(var u=0;u<t.length;u++){var c=[].concat(t[u]);r&&a[c[0]]||(void 0!==s&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=s),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),e.push(c))}},e}},391:(t,e,n)=>{var r=n(180),i=n(181),s=n(31),a=n(67),o=n(833),l=n(717),u=n(801);u.alea=r,u.xor128=i,u.xorwow=s,u.xorshift7=a,u.xor4096=o,u.tychei=l,t.exports=u},512:t=>{"use strict";t.exports=function(t,e,n,r){var i=self||window;try{try{var s;try{s=new i.Blob([t])}catch(e){(s=new(i.BlobBuilder||i.WebKitBlobBuilder||i.MozBlobBuilder||i.MSBlobBuilder)).append(t),s=s.getBlob()}var a=i.URL||i.webkitURL,o=a.createObjectURL(s),l=new i[e](o,n);return a.revokeObjectURL(o),l}catch(r){return new i[e]("data:application/javascript,".concat(encodeURIComponent(t)),n)}}catch(t){if(!r)throw Error("Inline worker is not supported");return new i[e](r,n)}}},530:()=>{},540:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},551:()=>{},570:t=>{t.exports=n;var e=null;try{e=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(t){}function n(t,e,n){this.low=0|t,this.high=0|e,this.unsigned=!!n}function r(t){return!0===(t&&t.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var i={},s={};function a(t,e){var n,r,a;return e?(a=0<=(t>>>=0)&&t<256)&&(r=s[t])?r:(n=l(t,(0|t)<0?-1:0,!0),a&&(s[t]=n),n):(a=-128<=(t|=0)&&t<128)&&(r=i[t])?r:(n=l(t,t<0?-1:0,!1),a&&(i[t]=n),n)}function o(t,e){if(isNaN(t))return e?x:g;if(e){if(t<0)return x;if(t>=p)return _}else{if(t<=-f)return S;if(t+1>=f)return w}return t<0?o(-t,e).neg():l(t%d|0,t/d|0,e)}function l(t,e,r){return new n(t,e,r)}n.fromInt=a,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(t,e,n){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return g;if("number"==typeof e?(n=e,e=!1):e=!!e,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(t.substring(1),e,n).neg();for(var i=o(u(n,8)),s=g,a=0;a<t.length;a+=8){var l=Math.min(8,t.length-a),h=parseInt(t.substring(a,a+l),n);if(l<8){var d=o(u(n,l));s=s.mul(d).add(o(h))}else s=(s=s.mul(i)).add(o(h))}return s.unsigned=e,s}function h(t,e){return"number"==typeof t?o(t,e):"string"==typeof t?c(t,e):l(t.low,t.high,"boolean"==typeof e?e:t.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=a(1<<24),g=a(0);n.ZERO=g;var x=a(0,!0);n.UZERO=x;var y=a(1);n.ONE=y;var v=a(1,!0);n.UONE=v;var b=a(-1);n.NEG_ONE=b;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var _=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=_;var S=l(0,-2147483648,!1);n.MIN_VALUE=S;var T=n.prototype;T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},T.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var e=o(t),n=this.div(e),r=n.mul(e).sub(this);return n.toString(t)+r.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var i=o(u(t,6),this.unsigned),s=this,a="";;){var l=s.div(i),c=(s.sub(l.mul(i)).toInt()>>>0).toString(t);if((s=l).isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&!(t&1<<e);e--);return 0!=this.high?e+33:e+1},T.isZero=function(){return 0===this.high&&0===this.low},T.eqz=T.isZero,T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return!(1&~this.low)},T.isEven=function(){return!(1&this.low)},T.equals=function(t){return r(t)||(t=h(t)),(this.unsigned===t.unsigned||this.high>>>31!=1||t.high>>>31!=1)&&this.high===t.high&&this.low===t.low},T.eq=T.equals,T.notEquals=function(t){return!this.eq(t)},T.neq=T.notEquals,T.ne=T.notEquals,T.lessThan=function(t){return this.comp(t)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(t){return this.comp(t)<=0},T.lte=T.lessThanOrEqual,T.le=T.lessThanOrEqual,T.greaterThan=function(t){return this.comp(t)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(t){return this.comp(t)>=0},T.gte=T.greaterThanOrEqual,T.ge=T.greaterThanOrEqual,T.compare=function(t){if(r(t)||(t=h(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(y)},T.neg=T.negate,T.add=function(t){r(t)||(t=h(t));var e=this.high>>>16,n=65535&this.high,i=this.low>>>16,s=65535&this.low,a=t.high>>>16,o=65535&t.high,u=t.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=s+(65535&t.low))>>>16,d+=(p+=i+u)>>>16,c+=(d+=n+o)>>>16,c+=e+a,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},T.subtract=function(t){return r(t)||(t=h(t)),this.add(t.neg())},T.sub=T.subtract,T.multiply=function(t){if(this.isZero())return g;if(r(t)||(t=h(t)),e)return l(e.mul(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned);if(t.isZero())return g;if(this.eq(S))return t.isOdd()?S:g;if(t.eq(S))return this.isOdd()?S:g;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(m)&&t.lt(m))return o(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,i=65535&this.high,s=this.low>>>16,a=65535&this.low,u=t.high>>>16,c=65535&t.high,d=t.low>>>16,p=65535&t.low,f=0,x=0,y=0,v=0;return y+=(v+=a*p)>>>16,x+=(y+=s*p)>>>16,y&=65535,x+=(y+=a*d)>>>16,f+=(x+=i*p)>>>16,x&=65535,f+=(x+=s*d)>>>16,x&=65535,f+=(x+=a*c)>>>16,f+=n*p+i*d+s*c+a*u,l((y&=65535)<<16|(v&=65535),(f&=65535)<<16|(x&=65535),this.unsigned)},T.mul=T.multiply,T.divide=function(t){if(r(t)||(t=h(t)),t.isZero())throw Error("division by zero");var n,i,s;if(e)return this.unsigned||-2147483648!==this.high||-1!==t.low||-1!==t.high?l((this.unsigned?e.div_u:e.div_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?x:g;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return x;if(t.gt(this.shru(1)))return v;s=x}else{if(this.eq(S))return t.eq(y)||t.eq(b)?S:t.eq(S)?y:(n=this.shr(1).div(t).shl(1)).eq(g)?t.isNegative()?y:b:(i=this.sub(t.mul(n)),s=n.add(i.div(t)));if(t.eq(S))return this.unsigned?x:g;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();s=g}for(i=this;i.gte(t);){n=Math.max(1,Math.floor(i.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),c=a<=48?1:u(2,a-48),d=o(n),p=d.mul(t);p.isNegative()||p.gt(i);)p=(d=o(n-=c,this.unsigned)).mul(t);d.isZero()&&(d=y),s=s.add(d),i=i.sub(p)}return s},T.div=T.divide,T.modulo=function(t){return r(t)||(t=h(t)),e?l((this.unsigned?e.rem_u:e.rem_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this.sub(this.div(t).mul(t))},T.mod=T.modulo,T.rem=T.modulo,T.not=function(){return l(~this.low,~this.high,this.unsigned)},T.and=function(t){return r(t)||(t=h(t)),l(this.low&t.low,this.high&t.high,this.unsigned)},T.or=function(t){return r(t)||(t=h(t)),l(this.low|t.low,this.high|t.high,this.unsigned)},T.xor=function(t){return r(t)||(t=h(t)),l(this.low^t.low,this.high^t.high,this.unsigned)},T.shiftLeft=function(t){return r(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?l(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):l(0,this.low<<t-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(t){return r(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?l(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):l(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(t){if(r(t)&&(t=t.toInt()),0==(t&=63))return this;var e=this.high;return t<32?l(this.low>>>t|e<<32-t,e>>>t,this.unsigned):l(32===t?e:e>>>t-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.shr_u=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},T.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},T.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,e>>>24,e>>>16&255,e>>>8&255,255&e]},n.fromBytes=function(t,e,r){return r?n.fromBytesLE(t,e):n.fromBytesBE(t,e)},n.fromBytesLE=function(t,e){return new n(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)},n.fromBytesBE=function(t,e){return new n(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}},590:()=>{},601:t=>{"use strict";t.exports=function(t){return t[1]}},659:t=>{"use strict";var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},717:function(t,e,n){var r;!function(t,i){function s(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,i=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^i,i=i-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^i,e.a=i-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function a(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function o(t,e){var n=new s(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&a(r,n),i.state=function(){return a(n,{})}),i}i&&i.exports?i.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(e,n,e,i))||(i.exports=r):this.tychei=o}(0,t=n.nmd(t),n.amdD)},801:function(t,e,n){var r;!function(i,s,a){var o,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(t,e,n){var r=[],d=x(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,y(s)]:null==t?function(){try{var t;return o&&(t=o.randomBytes)?t=t(l):(t=new Uint8Array(l),(i.crypto||i.msCrypto).getRandomValues(t)),y(t)}catch(t){var e=i.navigator,n=e&&e.plugins;return[+new Date,i,n,i.screen,y(s)]}}():t,3),r),p=new f(r),v=function(){for(var t=p.g(6),e=u,n=0;t<c;)t=(t+n)*l,e*=l,n=p.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return v.int32=function(){return 0|p.g(4)},v.quick=function(){return p.g(4)/4294967296},v.double=v,x(y(p.S),s),(e.pass||n||function(t,e,n,r){return r&&(r.S&&m(r,p),t.state=function(){return m(p,{})}),n?(a.random=t,e):t})(v,d,"global"in e?e.global:this==a,e.state)}function f(t){var e,n=t.length,r=this,i=0,s=r.i=r.j=0,a=r.S=[];for(n||(t=[n++]);i<l;)a[i]=i++;for(i=0;i<l;i++)a[i]=a[s=d&s+t[i%n]+(e=a[i])],a[s]=e;(r.g=function(t){for(var e,n=0,i=r.i,s=r.j,a=r.S;t--;)e=a[i=d&i+1],n=n*l+a[d&(a[i]=a[s=d&s+e])+(a[s]=e)];return r.i=i,r.j=s,n})(l)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,r=[],i=typeof t;if(e&&"object"==i)for(n in t)try{r.push(g(t[n],e-1))}catch(t){}return r.length?r:"string"==i?t:t+"\0"}function x(t,e){for(var n,r=t+"",i=0;i<r.length;)e[d&i]=d&(n^=19*e[d&i])+r.charCodeAt(i++);return y(e)}function y(t){return String.fromCharCode.apply(0,t)}if(x(a.random(),s),t.exports){t.exports=p;try{o=n(234)}catch(t){}}else void 0===(r=function(){return p}.call(e,n,e,t))||(t.exports=r)}("undefined"!=typeof self?self:this,[],Math)},817:()=>{},825:t=>{"use strict";t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,i&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var s=n.sourceMap;s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},833:function(t,e,n){var r;!function(t,i){function s(t){var e=this;e.next=function(){var t,n,r=e.w,i=e.X,s=e.i;return e.w=r=r+1640531527|0,n=i[s+34&127],t=i[s=s+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=i[s]=n^t,e.i=s,n+(r^r>>>16)|0},function(t,e){var n,r,i,s,a,o=[],l=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,l=Math.max(l,e.length)),i=0,s=-32;s<l;++s)e&&(r^=e.charCodeAt((s+32)%e.length)),0===s&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(a=a+1640531527|0,i=0==(n=o[127&s]^=r+a)?i+1:0);for(i>=128&&(o[127&(e&&e.length||0)]=-1),i=127,s=512;s>0;--s)r=o[i+34&127],n=o[i=i+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[i]=r^n;t.w=a,t.X=o,t.i=i}(e,t)}function a(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function o(t,e){null==t&&(t=+new Date);var n=new s(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&(r.X&&a(r,n),i.state=function(){return a(n,{})}),i}i&&i.exports?i.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(e,n,e,i))||(i.exports=r):this.xor4096=o}(0,t=n.nmd(t),n.amdD)}},e={};function n(r){var i=e[r];if(void 0!==i)return i.exports;var s=e[r]={id:r,loaded:!1,exports:{}};return t[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),n.nc=void 0,(()=>{"use strict";var t={};n.r(t),n.d(t,{ACESFilmicToneMapping:()=>ot,AddEquation:()=>E,AddOperation:()=>nt,AdditiveAnimationBlendMode:()=>We,AdditiveBlending:()=>_,AgXToneMapping:()=>ut,AlphaFormat:()=>Gt,AlwaysCompare:()=>Cn,AlwaysDepth:()=>q,AlwaysStencilFunc:()=>bn,AmbientLight:()=>Wc,AnimationAction:()=>Fh,AnimationClip:()=>dc,AnimationLoader:()=>wc,AnimationMixer:()=>Oh,AnimationObjectGroup:()=>Lh,AnimationUtils:()=>Qu,ArcCurve:()=>Tl,ArrayCamera:()=>ch,ArrowHelper:()=>Rd,AttachedBindMode:()=>ht,Audio:()=>vh,AudioAnalyser:()=>Mh,AudioContext:()=>ih,AudioListener:()=>yh,AudioLoader:()=>sh,AxesHelper:()=>Nd,BackSide:()=>y,BasicDepthPacking:()=>qe,BasicShadowMap:()=>p,BatchedMesh:()=>Fo,Bone:()=>ja,BooleanKeyframeTrack:()=>sc,Box2:()=>Jh,Box3:()=>$r,Box3Helper:()=>Ed,BoxGeometry:()=>qs,BoxHelper:()=>Md,BufferAttribute:()=>gs,BufferGeometry:()=>Ds,BufferGeometryLoader:()=>Yc,ByteType:()=>Dt,Cache:()=>fc,Camera:()=>Qs,CameraHelper:()=>_d,CanvasTexture:()=>ul,CapsuleGeometry:()=>hl,CatmullRomCurve3:()=>Al,CineonToneMapping:()=>at,CircleGeometry:()=>dl,ClampToEdgeWrapping:()=>bt,Clock:()=>hh,Color:()=>rs,ColorKeyframeTrack:()=>ac,ColorManagement:()=>br,CompressedArrayTexture:()=>ol,CompressedCubeTexture:()=>ll,CompressedTexture:()=>al,CompressedTextureLoader:()=>_c,ConeGeometry:()=>fl,ConstantAlphaFactor:()=>G,ConstantColorFactor:()=>V,Controls:()=>Ld,CubeCamera:()=>sa,CubeReflectionMapping:()=>ft,CubeRefractionMapping:()=>mt,CubeTexture:()=>aa,CubeTextureLoader:()=>Tc,CubeUVReflectionMapping:()=>yt,CubicBezierCurve:()=>Ll,CubicBezierCurve3:()=>Fl,CubicInterpolant:()=>ec,CullFaceBack:()=>c,CullFaceFront:()=>h,CullFaceFrontBack:()=>d,CullFaceNone:()=>u,Curve:()=>_l,CurvePath:()=>Vl,CustomBlending:()=>M,CustomToneMapping:()=>lt,CylinderGeometry:()=>pl,Cylindrical:()=>Kh,Data3DTexture:()=>Pr,DataArrayTexture:()=>Lr,DataTexture:()=>qa,DataTextureLoader:()=>Mc,DataUtils:()=>ds,DecrementStencilOp:()=>un,DecrementWrapStencilOp:()=>hn,DefaultLoadingManager:()=>gc,DepthFormat:()=>qt,DepthStencilFormat:()=>Xt,DepthTexture:()=>cl,DetachedBindMode:()=>dt,DirectionalLight:()=>Vc,DirectionalLightHelper:()=>vd,DiscreteInterpolant:()=>rc,DodecahedronGeometry:()=>gl,DoubleSide:()=>v,DstAlphaFactor:()=>O,DstColorFactor:()=>U,DynamicCopyUsage:()=>Pn,DynamicDrawUsage:()=>An,DynamicReadUsage:()=>Dn,EdgesGeometry:()=>wl,EllipseCurve:()=>Sl,EqualCompare:()=>Sn,EqualDepth:()=>Y,EqualStencilFunc:()=>mn,EquirectangularReflectionMapping:()=>gt,EquirectangularRefractionMapping:()=>xt,Euler:()=>wi,EventDispatcher:()=>Hn,ExtrudeGeometry:()=>bu,FileLoader:()=>bc,Float16BufferAttribute:()=>Ts,Float32BufferAttribute:()=>Ms,FloatType:()=>$t,Fog:()=>da,FogExp2:()=>ha,FramebufferTexture:()=>sl,FrontSide:()=>x,Frustum:()=>po,FrustumArray:()=>go,GLBufferAttribute:()=>Wh,GLSL1:()=>$n,GLSL3:()=>Un,GreaterCompare:()=>Mn,GreaterDepth:()=>J,GreaterEqualCompare:()=>In,GreaterEqualDepth:()=>Z,GreaterEqualStencilFunc:()=>vn,GreaterStencilFunc:()=>xn,GridHelper:()=>fd,Group:()=>la,HalfFloatType:()=>Ut,HemisphereLight:()=>Cc,HemisphereLightHelper:()=>pd,IcosahedronGeometry:()=>_u,ImageBitmapLoader:()=>nh,ImageLoader:()=>Sc,ImageUtils:()=>Tr,IncrementStencilOp:()=>ln,IncrementWrapStencilOp:()=>cn,InstancedBufferAttribute:()=>Za,InstancedBufferGeometry:()=>Kc,InstancedInterleavedBuffer:()=>Vh,InstancedMesh:()=>so,Int16BufferAttribute:()=>bs,Int32BufferAttribute:()=>_s,Int8BufferAttribute:()=>xs,IntType:()=>Pt,InterleavedBuffer:()=>fa,InterleavedBufferAttribute:()=>ga,Interpolant:()=>tc,InterpolateDiscrete:()=>Pe,InterpolateLinear:()=>Oe,InterpolateSmooth:()=>$e,InterpolationSamplingMode:()=>Gn,InterpolationSamplingType:()=>Wn,InvertStencilOp:()=>dn,KeepStencilOp:()=>an,KeyframeTrack:()=>ic,LOD:()=>Fa,LatheGeometry:()=>Su,Layers:()=>_i,LessCompare:()=>_n,LessDepth:()=>X,LessEqualCompare:()=>Tn,LessEqualDepth:()=>K,LessEqualStencilFunc:()=>gn,LessStencilFunc:()=>fn,Light:()=>Ic,LightProbe:()=>jc,Line:()=>Go,Line3:()=>ed,LineBasicMaterial:()=>Po,LineCurve:()=>Pl,LineCurve3:()=>Ol,LineDashedMaterial:()=>qu,LineLoop:()=>Ko,LineSegments:()=>Xo,LinearFilter:()=>It,LinearInterpolant:()=>nc,LinearMipMapLinearFilter:()=>Rt,LinearMipMapNearestFilter:()=>kt,LinearMipmapLinearFilter:()=>At,LinearMipmapNearestFilter:()=>Ct,LinearSRGBColorSpace:()=>en,LinearToneMapping:()=>it,LinearTransfer:()=>nn,Loader:()=>xc,LoaderUtils:()=>Xc,LoadingManager:()=>mc,LoopOnce:()=>De,LoopPingPong:()=>Fe,LoopRepeat:()=>Le,MOUSE:()=>o,Material:()=>as,MaterialLoader:()=>qc,MathUtils:()=>nr,Matrix2:()=>Yh,Matrix3:()=>lr,Matrix4:()=>hi,MaxEquation:()=>A,Mesh:()=>Hs,MeshBasicMaterial:()=>os,MeshDepthMaterial:()=>Gu,MeshDistanceMaterial:()=>Hu,MeshLambertMaterial:()=>Wu,MeshMatcapMaterial:()=>ju,MeshNormalMaterial:()=>Vu,MeshPhongMaterial:()=>zu,MeshPhysicalMaterial:()=>Uu,MeshStandardMaterial:()=>$u,MeshToonMaterial:()=>Bu,MinEquation:()=>k,MirroredRepeatWrapping:()=>wt,MixOperation:()=>et,MultiplyBlending:()=>T,MultiplyOperation:()=>tt,NearestFilter:()=>_t,NearestMipMapLinearFilter:()=>Et,NearestMipMapNearestFilter:()=>Tt,NearestMipmapLinearFilter:()=>Mt,NearestMipmapNearestFilter:()=>St,NeutralToneMapping:()=>ct,NeverCompare:()=>wn,NeverDepth:()=>j,NeverStencilFunc:()=>pn,NoBlending:()=>b,NoColorSpace:()=>Qe,NoToneMapping:()=>rt,NormalAnimationBlendMode:()=>Ve,NormalBlending:()=>w,NotEqualCompare:()=>En,NotEqualDepth:()=>Q,NotEqualStencilFunc:()=>yn,NumberKeyframeTrack:()=>oc,Object3D:()=>$i,ObjectLoader:()=>Zc,ObjectSpaceNormalMap:()=>Je,OctahedronGeometry:()=>Tu,OneFactor:()=>N,OneMinusConstantAlphaFactor:()=>H,OneMinusConstantColorFactor:()=>W,OneMinusDstAlphaFactor:()=>$,OneMinusDstColorFactor:()=>z,OneMinusSrcAlphaFactor:()=>P,OneMinusSrcColorFactor:()=>L,OrthographicCamera:()=>zc,PCFShadowMap:()=>f,PCFSoftShadowMap:()=>m,PMREMGenerator:()=>lp,Path:()=>Wl,PerspectiveCamera:()=>ra,Plane:()=>uo,PlaneGeometry:()=>Mu,PlaneHelper:()=>Id,PointLight:()=>Uc,PointLightHelper:()=>ud,Points:()=>el,PointsMaterial:()=>Yo,PolarGridHelper:()=>md,PolyhedronGeometry:()=>ml,PositionalAudio:()=>Th,PropertyBinding:()=>Dh,PropertyMixer:()=>Eh,QuadraticBezierCurve:()=>$l,QuadraticBezierCurve3:()=>Ul,Quaternion:()=>ir,QuaternionKeyframeTrack:()=>uc,QuaternionLinearInterpolant:()=>lc,RED_GREEN_RGTC2_Format:()=>Re,RED_RGTC1_Format:()=>ke,REVISION:()=>a,RGBADepthPacking:()=>Xe,RGBAFormat:()=>jt,RGBAIntegerFormat:()=>te,RGBA_ASTC_10x10_Format:()=>Se,RGBA_ASTC_10x5_Format:()=>be,RGBA_ASTC_10x6_Format:()=>we,RGBA_ASTC_10x8_Format:()=>_e,RGBA_ASTC_12x10_Format:()=>Te,RGBA_ASTC_12x12_Format:()=>Me,RGBA_ASTC_4x4_Format:()=>de,RGBA_ASTC_5x4_Format:()=>pe,RGBA_ASTC_5x5_Format:()=>fe,RGBA_ASTC_6x5_Format:()=>me,RGBA_ASTC_6x6_Format:()=>ge,RGBA_ASTC_8x5_Format:()=>xe,RGBA_ASTC_8x6_Format:()=>ye,RGBA_ASTC_8x8_Format:()=>ve,RGBA_BPTC_Format:()=>Ee,RGBA_ETC2_EAC_Format:()=>he,RGBA_PVRTC_2BPPV1_Format:()=>le,RGBA_PVRTC_4BPPV1_Format:()=>oe,RGBA_S3TC_DXT1_Format:()=>ne,RGBA_S3TC_DXT3_Format:()=>re,RGBA_S3TC_DXT5_Format:()=>ie,RGBDepthPacking:()=>Ke,RGBFormat:()=>Ht,RGBIntegerFormat:()=>Qt,RGB_BPTC_SIGNED_Format:()=>Ie,RGB_BPTC_UNSIGNED_Format:()=>Ce,RGB_ETC1_Format:()=>ue,RGB_ETC2_Format:()=>ce,RGB_PVRTC_2BPPV1_Format:()=>ae,RGB_PVRTC_4BPPV1_Format:()=>se,RGB_S3TC_DXT1_Format:()=>ee,RGDepthPacking:()=>Ye,RGFormat:()=>Zt,RGIntegerFormat:()=>Jt,RawShaderMaterial:()=>Ou,Ray:()=>ci,Raycaster:()=>Hh,RectAreaLight:()=>Gc,RedFormat:()=>Kt,RedIntegerFormat:()=>Yt,ReinhardToneMapping:()=>st,RenderTarget:()=>Nr,RenderTarget3D:()=>$h,RepeatWrapping:()=>vt,ReplaceStencilOp:()=>on,ReverseSubtractEquation:()=>C,RingGeometry:()=>Eu,SIGNED_RED_GREEN_RGTC2_Format:()=>Ne,SIGNED_RED_RGTC1_Format:()=>Ae,SRGBColorSpace:()=>tn,SRGBTransfer:()=>rn,Scene:()=>pa,ShaderChunk:()=>Ud,ShaderLib:()=>Bd,ShaderMaterial:()=>Js,ShadowMaterial:()=>Pu,Shape:()=>Gl,ShapeGeometry:()=>Iu,ShapePath:()=>Dd,ShapeUtils:()=>xu,ShortType:()=>Lt,Skeleton:()=>Ya,SkeletonHelper:()=>od,SkinnedMesh:()=>Ha,Source:()=>Er,Sphere:()=>ni,SphereGeometry:()=>Cu,Spherical:()=>Xh,SphericalHarmonics3:()=>Hc,SplineCurve:()=>zl,SpotLight:()=>Lc,SpotLightHelper:()=>rd,Sprite:()=>Ra,SpriteMaterial:()=>xa,SrcAlphaFactor:()=>F,SrcAlphaSaturateFactor:()=>B,SrcColorFactor:()=>D,StaticCopyUsage:()=>Fn,StaticDrawUsage:()=>kn,StaticReadUsage:()=>Nn,StereoCamera:()=>uh,StreamCopyUsage:()=>On,StreamDrawUsage:()=>Rn,StreamReadUsage:()=>Ln,StringKeyframeTrack:()=>cc,SubtractEquation:()=>I,SubtractiveBlending:()=>S,TOUCH:()=>l,TangentSpaceNormalMap:()=>Ze,TetrahedronGeometry:()=>ku,Texture:()=>Ar,TextureLoader:()=>Ec,TextureUtils:()=>Pd,TimestampQuery:()=>Vn,TorusGeometry:()=>Au,TorusKnotGeometry:()=>Ru,Triangle:()=>Ji,TriangleFanDrawMode:()=>je,TriangleStripDrawMode:()=>He,TrianglesDrawMode:()=>Ge,TubeGeometry:()=>Nu,UVMapping:()=>pt,Uint16BufferAttribute:()=>ws,Uint32BufferAttribute:()=>Ss,Uint8BufferAttribute:()=>ys,Uint8ClampedBufferAttribute:()=>vs,Uniform:()=>Uh,UniformsGroup:()=>Bh,UniformsLib:()=>zd,UniformsUtils:()=>Zs,UnsignedByteType:()=>Nt,UnsignedInt248Type:()=>Vt,UnsignedInt5999Type:()=>Wt,UnsignedIntType:()=>Ot,UnsignedShort4444Type:()=>zt,UnsignedShort5551Type:()=>Bt,UnsignedShortType:()=>Ft,VSMShadowMap:()=>g,Vector2:()=>rr,Vector3:()=>sr,Vector4:()=>Rr,VectorKeyframeTrack:()=>hc,VideoFrameTexture:()=>il,VideoTexture:()=>rl,WebGL3DRenderTarget:()=>Or,WebGLArrayRenderTarget:()=>Fr,WebGLCoordinateSystem:()=>zn,WebGLCubeRenderTarget:()=>oa,WebGLRenderTarget:()=>Dr,WebGLRenderer:()=>xm,WebGLUtils:()=>cm,WebGPUCoordinateSystem:()=>Bn,WebXRController:()=>ca,WireframeGeometry:()=>Du,WrapAroundEnding:()=>Be,ZeroCurvatureEnding:()=>Ue,ZeroFactor:()=>R,ZeroSlopeEnding:()=>ze,ZeroStencilOp:()=>sn,createCanvasElement:()=>fr});var e={};n.r(e),n.d(e,{assertParamsValid:()=>M_,computeFlatOffset:()=>$_,computeOutShape:()=>I_,getNormalizedAxes:()=>R_,isSliceContinous:()=>O_,maskToAxes:()=>E_,parseSliceParams:()=>U_,sliceInfo:()=>z_,startForAxis:()=>F_,startIndicesWithElidedDims:()=>N_,stopForAxis:()=>P_,stopIndicesWithElidedDims:()=>D_,stridesForAxis:()=>L_,stridesWithElidedDims:()=>C_});var r={};n.r(r),n.d(r,{collectGatherOpShapeInfo:()=>eI,computeOutShape:()=>tI,segOpComputeOptimalWindowSize:()=>QE});var i={};n.r(i),n.d(i,{ERF_A1:()=>xE,ERF_A2:()=>yE,ERF_A3:()=>vE,ERF_A4:()=>bE,ERF_A5:()=>wE,ERF_P:()=>gE,PARALLELIZE_THRESHOLD:()=>nE,RowPartitionType:()=>ZM,SELU_SCALE:()=>mE,SELU_SCALEALPHA:()=>fE,applyActivation:()=>rM,assertAndGetBroadcastShape:()=>u_,assertAxesAreInnerMostDims:()=>YS,assertParamsConsistent:()=>KM,assignToTypedArray:()=>IE,axesAreInnerMostDims:()=>jS,calculateShapes:()=>pE,checkEinsumDimSizes:()=>PE,checkPadOnDimRoundingMode:()=>sS,combineLocations:()=>qS,combineRaggedTensorToTensorShapes:()=>JM,complexWithEvenIndex:()=>TE,complexWithOddIndex:()=>ME,computeConv2DInfo:()=>X_,computeConv3DInfo:()=>K_,computeDefaultPad:()=>Y_,computeDilation2DInfo:()=>H_,computeOptimalWindowSize:()=>rE,computeOutAndReduceShapes:()=>XS,computeOutShape:()=>YM,computePool2DInfo:()=>j_,computePool3DInfo:()=>q_,convertConv2DDataFormat:()=>iS,decodeEinsumEquation:()=>LE,eitherStridesOrDilationsAreOne:()=>nS,expandShapeToKeepDim:()=>KS,exponent:()=>kE,exponents:()=>CE,fromStringArrayToUint8:()=>rI,fromUint8ToStringArray:()=>nI,getAxesPermutation:()=>ZS,getBroadcastDims:()=>o_,getComplexWithIndex:()=>EE,getEinsumComputePath:()=>OE,getEinsumPermutation:()=>FE,getFusedBiasGradient:()=>nM,getFusedDyActivation:()=>eM,getImageCenter:()=>iE,getInnerMostAxes:()=>QS,getPermuted:()=>aE,getRaggedRank:()=>tE,getReductionAxes:()=>l_,getReshaped:()=>sE,getReshapedPermuted:()=>oE,getRowPartitionTypesHelper:()=>QM,getSliceBeginCoords:()=>lE,getSliceSize:()=>uE,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>BE,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>VE,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>WE,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>jE,getSparseReshapeInputOutputMismatchErrorMessage:()=>XE,getSparseReshapeInputOutputMultipleErrorMessage:()=>qE,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>GE,getSparseReshapeNegativeOutputDimErrorMessage:()=>HE,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>JE,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>KE,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>YE,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>ZE,getUndoAxesPermutation:()=>JS,isIdentityPermutation:()=>$E,log:()=>Ev,mergeRealAndImagArrays:()=>_E,prepareAndValidate:()=>cE,prepareSplitSize:()=>zE,segment_util:()=>r,shouldFuse:()=>iM,slice_util:()=>e,splitRealAndImagArrays:()=>SE,stridesOrDilationsArePositive:()=>rS,tupleValuesAreOne:()=>eS,upcastType:()=>Tb,validateDefaultValueShape:()=>eE,validateInput:()=>dE,validateUpdateShape:()=>hE,warn:()=>Mv});var s={};n.r(s),n.d(s,{mx:()=>RP,XI:()=>SO,Nk:()=>TO,f6:()=>EO,ct:()=>EP,YG:()=>kO,hH:()=>FO,z3:()=>v$,sG:()=>A$,uM:()=>F$,vS:()=>J$,qB:()=>aU,GG:()=>lU,lg:()=>pU,rq:()=>cU,cu:()=>EU,WR:()=>SU,GE:()=>kU,px:()=>RU,jC:()=>jU,He:()=>KU,hE:()=>sz,BF:()=>h$,Dk:()=>mz,cl:()=>Sz,_B:()=>Pz,ub:()=>Uz,_f:()=>Vz,Ku:()=>Xz,qy:()=>Yz,Zy:()=>lB,bu:()=>hB,zv:()=>xP,dH:()=>zP,HS:()=>vO,yH:()=>RB,l3:()=>DB,z9:()=>FB,x6:()=>zB,_m:()=>qB,eW:()=>ZB,GK:()=>tV,SP:()=>rV,yr:()=>sV,dl:()=>B$,Dw:()=>cV,xT:()=>pV,_X:()=>qP,wz:()=>vV});const a="177",o={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},l={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},u=0,c=1,h=2,d=3,p=0,f=1,m=2,g=3,x=0,y=1,v=2,b=0,w=1,_=2,S=3,T=4,M=5,E=100,I=101,C=102,k=103,A=104,R=200,N=201,D=202,L=203,F=204,P=205,O=206,$=207,U=208,z=209,B=210,V=211,W=212,G=213,H=214,j=0,q=1,X=2,K=3,Y=4,Z=5,J=6,Q=7,tt=0,et=1,nt=2,rt=0,it=1,st=2,at=3,ot=4,lt=5,ut=6,ct=7,ht="attached",dt="detached",pt=300,ft=301,mt=302,gt=303,xt=304,yt=306,vt=1e3,bt=1001,wt=1002,_t=1003,St=1004,Tt=1004,Mt=1005,Et=1005,It=1006,Ct=1007,kt=1007,At=1008,Rt=1008,Nt=1009,Dt=1010,Lt=1011,Ft=1012,Pt=1013,Ot=1014,$t=1015,Ut=1016,zt=1017,Bt=1018,Vt=1020,Wt=35902,Gt=1021,Ht=1022,jt=1023,qt=1026,Xt=1027,Kt=1028,Yt=1029,Zt=1030,Jt=1031,Qt=1032,te=1033,ee=33776,ne=33777,re=33778,ie=33779,se=35840,ae=35841,oe=35842,le=35843,ue=36196,ce=37492,he=37496,de=37808,pe=37809,fe=37810,me=37811,ge=37812,xe=37813,ye=37814,ve=37815,be=37816,we=37817,_e=37818,Se=37819,Te=37820,Me=37821,Ee=36492,Ie=36494,Ce=36495,ke=36283,Ae=36284,Re=36285,Ne=36286,De=2200,Le=2201,Fe=2202,Pe=2300,Oe=2301,$e=2302,Ue=2400,ze=2401,Be=2402,Ve=2500,We=2501,Ge=0,He=1,je=2,qe=3200,Xe=3201,Ke=3202,Ye=3203,Ze=0,Je=1,Qe="",tn="srgb",en="srgb-linear",nn="linear",rn="srgb",sn=0,an=7680,on=7681,ln=7682,un=7683,cn=34055,hn=34056,dn=5386,pn=512,fn=513,mn=514,gn=515,xn=516,yn=517,vn=518,bn=519,wn=512,_n=513,Sn=514,Tn=515,Mn=516,En=517,In=518,Cn=519,kn=35044,An=35048,Rn=35040,Nn=35045,Dn=35049,Ln=35041,Fn=35046,Pn=35050,On=35042,$n="100",Un="300 es",zn=2e3,Bn=2001,Vn={COMPUTE:"compute",RENDER:"render"},Wn={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},Gn={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FLAT_FIRST:"flat first",FLAT_EITHER:"flat either"};class Hn{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){const n=this._listeners;return void 0!==n&&void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){const n=this._listeners;if(void 0===n)return;const r=n[t];if(void 0!==r){const t=r.indexOf(e);-1!==t&&r.splice(t,1)}}dispatchEvent(t){const e=this._listeners;if(void 0===e)return;const n=e[t.type];if(void 0!==n){t.target=this;const e=n.slice(0);for(let n=0,r=e.length;n<r;n++)e[n].call(this,t);t.target=null}}}const jn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let qn=1234567;const Xn=Math.PI/180,Kn=180/Math.PI;function Yn(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(jn[255&t]+jn[t>>8&255]+jn[t>>16&255]+jn[t>>24&255]+"-"+jn[255&e]+jn[e>>8&255]+"-"+jn[e>>16&15|64]+jn[e>>24&255]+"-"+jn[63&n|128]+jn[n>>8&255]+"-"+jn[n>>16&255]+jn[n>>24&255]+jn[255&r]+jn[r>>8&255]+jn[r>>16&255]+jn[r>>24&255]).toLowerCase()}function Zn(t,e,n){return Math.max(e,Math.min(n,t))}function Jn(t,e){return(t%e+e)%e}function Qn(t,e,n){return(1-n)*t+n*e}function tr(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return t/4294967295;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int32Array:return Math.max(t/2147483647,-1);case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function er(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return Math.round(4294967295*t);case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int32Array:return Math.round(2147483647*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}}const nr={DEG2RAD:Xn,RAD2DEG:Kn,generateUUID:Yn,clamp:Zn,euclideanModulo:Jn,mapLinear:function(t,e,n,r,i){return r+(t-e)*(i-r)/(n-e)},inverseLerp:function(t,e,n){return t!==e?(n-t)/(e-t):0},lerp:Qn,damp:function(t,e,n,r){return Qn(t,e,1-Math.exp(-n*r))},pingpong:function(t,e=1){return e-Math.abs(Jn(t,2*e)-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){void 0!==t&&(qn=t);let e=qn+=1831565813;return e=Math.imul(e^e>>>15,1|e),e^=e+Math.imul(e^e>>>7,61|e),((e^e>>>14)>>>0)/4294967296},degToRad:function(t){return t*Xn},radToDeg:function(t){return t*Kn},isPowerOfTwo:function(t){return!(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,r,i){const s=Math.cos,a=Math.sin,o=s(n/2),l=a(n/2),u=s((e+r)/2),c=a((e+r)/2),h=s((e-r)/2),d=a((e-r)/2),p=s((r-e)/2),f=a((r-e)/2);switch(i){case"XYX":t.set(o*c,l*h,l*d,o*u);break;case"YZY":t.set(l*d,o*c,l*h,o*u);break;case"ZXZ":t.set(l*h,l*d,o*c,o*u);break;case"XZX":t.set(o*c,l*f,l*p,o*u);break;case"YXY":t.set(l*p,o*c,l*f,o*u);break;case"ZYZ":t.set(l*f,l*p,o*c,o*u);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}},normalize:er,denormalize:tr};class rr{constructor(t=0,e=0){rr.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6],this.y=r[1]*e+r[4]*n+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Zn(this.x,t.x,e.x),this.y=Zn(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=Zn(this.x,t,e),this.y=Zn(this.y,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Zn(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Zn(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),r=Math.sin(e),i=this.x-t.x,s=this.y-t.y;return this.x=i*n-s*r+t.x,this.y=i*r+s*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ir{constructor(t=0,e=0,n=0,r=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=r}static slerpFlat(t,e,n,r,i,s,a){let o=n[r+0],l=n[r+1],u=n[r+2],c=n[r+3];const h=i[s+0],d=i[s+1],p=i[s+2],f=i[s+3];if(0===a)return t[e+0]=o,t[e+1]=l,t[e+2]=u,void(t[e+3]=c);if(1===a)return t[e+0]=h,t[e+1]=d,t[e+2]=p,void(t[e+3]=f);if(c!==f||o!==h||l!==d||u!==p){let t=1-a;const e=o*h+l*d+u*p+c*f,n=e>=0?1:-1,r=1-e*e;if(r>Number.EPSILON){const i=Math.sqrt(r),s=Math.atan2(i,e*n);t=Math.sin(t*s)/i,a=Math.sin(a*s)/i}const i=a*n;if(o=o*t+h*i,l=l*t+d*i,u=u*t+p*i,c=c*t+f*i,t===1-a){const t=1/Math.sqrt(o*o+l*l+u*u+c*c);o*=t,l*=t,u*=t,c*=t}}t[e]=o,t[e+1]=l,t[e+2]=u,t[e+3]=c}static multiplyQuaternionsFlat(t,e,n,r,i,s){const a=n[r],o=n[r+1],l=n[r+2],u=n[r+3],c=i[s],h=i[s+1],d=i[s+2],p=i[s+3];return t[e]=a*p+u*c+o*d-l*h,t[e+1]=o*p+u*h+l*c-a*d,t[e+2]=l*p+u*d+a*h-o*c,t[e+3]=u*p-a*c-o*h-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,r=t._y,i=t._z,s=t._order,a=Math.cos,o=Math.sin,l=a(n/2),u=a(r/2),c=a(i/2),h=o(n/2),d=o(r/2),p=o(i/2);switch(s){case"XYZ":this._x=h*u*c+l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c-h*d*p;break;case"YXZ":this._x=h*u*c+l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c+h*d*p;break;case"ZXY":this._x=h*u*c-l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c-h*d*p;break;case"ZYX":this._x=h*u*c-l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c+h*d*p;break;case"YZX":this._x=h*u*c+l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c-h*d*p;break;case"XZY":this._x=h*u*c-l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c+h*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!0===e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,r=Math.sin(n);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],r=e[4],i=e[8],s=e[1],a=e[5],o=e[9],l=e[2],u=e[6],c=e[10],h=n+a+c;if(h>0){const t=.5/Math.sqrt(h+1);this._w=.25/t,this._x=(u-o)*t,this._y=(i-l)*t,this._z=(s-r)*t}else if(n>a&&n>c){const t=2*Math.sqrt(1+n-a-c);this._w=(u-o)/t,this._x=.25*t,this._y=(r+s)/t,this._z=(i+l)/t}else if(a>c){const t=2*Math.sqrt(1+a-n-c);this._w=(i-l)/t,this._x=(r+s)/t,this._y=.25*t,this._z=(o+u)/t}else{const t=2*Math.sqrt(1+c-n-a);this._w=(s-r)/t,this._x=(i+l)/t,this._y=(o+u)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Zn(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const r=Math.min(1,e/n);return this.slerp(t,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,r=t._y,i=t._z,s=t._w,a=e._x,o=e._y,l=e._z,u=e._w;return this._x=n*u+s*a+r*l-i*o,this._y=r*u+s*o+i*a-n*l,this._z=i*u+s*l+n*o-r*a,this._w=s*u-n*a-r*o-i*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,r=this._y,i=this._z,s=this._w;let a=s*t._w+n*t._x+r*t._y+i*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=s,this._x=n,this._y=r,this._z=i,this;const o=1-a*a;if(o<=Number.EPSILON){const t=1-e;return this._w=t*s+e*this._w,this._x=t*n+e*this._x,this._y=t*r+e*this._y,this._z=t*i+e*this._z,this.normalize(),this}const l=Math.sqrt(o),u=Math.atan2(l,a),c=Math.sin((1-e)*u)/l,h=Math.sin(e*u)/l;return this._w=s*c+this._w*h,this._x=n*c+this._x*h,this._y=r*c+this._y*h,this._z=i*c+this._z*h,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),r=Math.sqrt(1-n),i=Math.sqrt(n);return this.set(r*Math.sin(t),r*Math.cos(t),i*Math.sin(e),i*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class sr{constructor(t=0,e=0,n=0){sr.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(or.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(or.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6]*r,this.y=i[1]*e+i[4]*n+i[7]*r,this.z=i[2]*e+i[5]*n+i[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,i=t.elements,s=1/(i[3]*e+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*e+i[4]*n+i[8]*r+i[12])*s,this.y=(i[1]*e+i[5]*n+i[9]*r+i[13])*s,this.z=(i[2]*e+i[6]*n+i[10]*r+i[14])*s,this}applyQuaternion(t){const e=this.x,n=this.y,r=this.z,i=t.x,s=t.y,a=t.z,o=t.w,l=2*(s*r-a*n),u=2*(a*e-i*r),c=2*(i*n-s*e);return this.x=e+o*l+s*c-a*u,this.y=n+o*u+a*l-i*c,this.z=r+o*c+i*u-s*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[4]*n+i[8]*r,this.y=i[1]*e+i[5]*n+i[9]*r,this.z=i[2]*e+i[6]*n+i[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Zn(this.x,t.x,e.x),this.y=Zn(this.y,t.y,e.y),this.z=Zn(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=Zn(this.x,t,e),this.y=Zn(this.y,t,e),this.z=Zn(this.z,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Zn(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,r=t.y,i=t.z,s=e.x,a=e.y,o=e.z;return this.x=r*o-i*a,this.y=i*s-n*o,this.z=n*a-r*s,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return ar.copy(this).projectOnVector(t),this.sub(ar)}reflect(t){return this.sub(ar.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Zn(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return e*e+n*n+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const r=Math.sin(e)*t;return this.x=r*Math.sin(n),this.y=Math.cos(e)*t,this.z=r*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=r,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=2*Math.random()-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const ar=new sr,or=new ir;class lr{constructor(t,e,n,r,i,s,a,o,l){lr.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==t&&this.set(t,e,n,r,i,s,a,o,l)}set(t,e,n,r,i,s,a,o,l){const u=this.elements;return u[0]=t,u[1]=r,u[2]=a,u[3]=e,u[4]=i,u[5]=o,u[6]=n,u[7]=s,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,i=this.elements,s=n[0],a=n[3],o=n[6],l=n[1],u=n[4],c=n[7],h=n[2],d=n[5],p=n[8],f=r[0],m=r[3],g=r[6],x=r[1],y=r[4],v=r[7],b=r[2],w=r[5],_=r[8];return i[0]=s*f+a*x+o*b,i[3]=s*m+a*y+o*w,i[6]=s*g+a*v+o*_,i[1]=l*f+u*x+c*b,i[4]=l*m+u*y+c*w,i[7]=l*g+u*v+c*_,i[2]=h*f+d*x+p*b,i[5]=h*m+d*y+p*w,i[8]=h*g+d*v+p*_,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],s=t[4],a=t[5],o=t[6],l=t[7],u=t[8];return e*s*u-e*a*l-n*i*u+n*a*o+r*i*l-r*s*o}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],s=t[4],a=t[5],o=t[6],l=t[7],u=t[8],c=u*s-a*l,h=a*o-u*i,d=l*i-s*o,p=e*c+n*h+r*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=c*f,t[1]=(r*l-u*n)*f,t[2]=(a*n-r*s)*f,t[3]=h*f,t[4]=(u*e-r*o)*f,t[5]=(r*i-a*e)*f,t[6]=d*f,t[7]=(n*o-l*e)*f,t[8]=(s*e-n*i)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,r,i,s,a){const o=Math.cos(i),l=Math.sin(i);return this.set(n*o,n*l,-n*(o*s+l*a)+s+t,-r*l,r*o,-r*(-l*s+o*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(ur.makeScale(t,e)),this}rotate(t){return this.premultiply(ur.makeRotation(-t)),this}translate(t,e){return this.premultiply(ur.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}const ur=new lr;function cr(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}const hr={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function dr(t,e){return new hr[t](e)}function pr(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function fr(){const t=pr("canvas");return t.style.display="block",t}const mr={};function gr(t){t in mr||(mr[t]=!0,console.warn(t))}const xr=(new lr).set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),yr=(new lr).set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function vr(){const t={enabled:!0,workingColorSpace:en,spaces:{},convert:function(t,e,n){return!1!==this.enabled&&e!==n&&e&&n?(this.spaces[e].transfer===rn&&(t.r=wr(t.r),t.g=wr(t.g),t.b=wr(t.b)),this.spaces[e].primaries!==this.spaces[n].primaries&&(t.applyMatrix3(this.spaces[e].toXYZ),t.applyMatrix3(this.spaces[n].fromXYZ)),this.spaces[n].transfer===rn&&(t.r=_r(t.r),t.g=_r(t.g),t.b=_r(t.b)),t):t},workingToColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},colorSpaceToWorking:function(t,e){return this.convert(t,e,this.workingColorSpace)},getPrimaries:function(t){return this.spaces[t].primaries},getTransfer:function(t){return t===Qe?nn:this.spaces[t].transfer},getLuminanceCoefficients:function(t,e=this.workingColorSpace){return t.fromArray(this.spaces[e].luminanceCoefficients)},define:function(t){Object.assign(this.spaces,t)},_getMatrix:function(t,e,n){return t.copy(this.spaces[e].toXYZ).multiply(this.spaces[n].fromXYZ)},_getDrawingBufferColorSpace:function(t){return this.spaces[t].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(t=this.workingColorSpace){return this.spaces[t].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(e,n){return gr("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),t.workingToColorSpace(e,n)},toWorkingColorSpace:function(e,n){return gr("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),t.colorSpaceToWorking(e,n)}},e=[.64,.33,.3,.6,.15,.06],n=[.2126,.7152,.0722],r=[.3127,.329];return t.define({[en]:{primaries:e,whitePoint:r,transfer:nn,toXYZ:xr,fromXYZ:yr,luminanceCoefficients:n,workingColorSpaceConfig:{unpackColorSpace:tn},outputColorSpaceConfig:{drawingBufferColorSpace:tn}},[tn]:{primaries:e,whitePoint:r,transfer:rn,toXYZ:xr,fromXYZ:yr,luminanceCoefficients:n,outputColorSpaceConfig:{drawingBufferColorSpace:tn}}}),t}const br=vr();function wr(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function _r(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}let Sr;class Tr{static getDataURL(t,e="image/png"){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let n;if(t instanceof HTMLCanvasElement)n=t;else{void 0===Sr&&(Sr=pr("canvas")),Sr.width=t.width,Sr.height=t.height;const e=Sr.getContext("2d");t instanceof ImageData?e.putImageData(t,0,0):e.drawImage(t,0,0,t.width,t.height),n=Sr}return n.toDataURL(e)}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const e=pr("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const r=n.getImageData(0,0,t.width,t.height),i=r.data;for(let t=0;t<i.length;t++)i[t]=255*wr(i[t]/255);return n.putImageData(r,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*wr(e[t]/255)):e[t]=wr(e[t]);return{data:e,width:t.width,height:t.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let Mr=0;class Er{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Mr++}),this.uuid=Yn(),this.data=t,this.dataReady=!0,this.version=0}getSize(t){const e=this.data;return e instanceof HTMLVideoElement?t.set(e.videoWidth,e.videoHeight):null!==e?t.set(e.width,e.height,e.depth||0):t.set(0,0,0),t}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const n={uuid:this.uuid,url:""},r=this.data;if(null!==r){let t;if(Array.isArray(r)){t=[];for(let e=0,n=r.length;e<n;e++)r[e].isDataTexture?t.push(Ir(r[e].image)):t.push(Ir(r[e]))}else t=Ir(r);n.url=t}return e||(t.images[this.uuid]=n),n}}function Ir(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?Tr.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Cr=0;const kr=new sr;class Ar extends Hn{constructor(t=Ar.DEFAULT_IMAGE,e=Ar.DEFAULT_MAPPING,n=bt,r=bt,i=It,s=At,a=jt,o=Nt,l=Ar.DEFAULT_ANISOTROPY,u=Qe){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Cr++}),this.uuid=Yn(),this.name="",this.source=new Er(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=r,this.magFilter=i,this.minFilter=s,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new rr(0,0),this.repeat=new rr(1,1),this.center=new rr(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new lr,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(t&&t.depth&&t.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(kr).x}get height(){return this.source.getSize(kr).y}get depth(){return this.source.getSize(kr).z}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.isArrayTexture=t.isArrayTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}setValues(t){for(const e in t){const n=t[e];if(void 0===n){console.warn(`THREE.Texture.setValues(): parameter '${e}' has value of undefined.`);continue}const r=this[e];void 0!==r?r&&n&&r.isVector2&&n.isVector2||r&&n&&r.isVector3&&n.isVector3||r&&n&&r.isMatrix3&&n.isMatrix3?r.copy(n):this[e]=n:console.warn(`THREE.Texture.setValues(): property '${e}' does not exist.`)}}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==pt)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case vt:t.x=t.x-Math.floor(t.x);break;case bt:t.x=t.x<0?0:1;break;case wt:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case vt:t.y=t.y-Math.floor(t.y);break;case bt:t.y=t.y<0?0:1;break;case wt:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){!0===t&&this.pmremVersion++}}Ar.DEFAULT_IMAGE=null,Ar.DEFAULT_MAPPING=pt,Ar.DEFAULT_ANISOTROPY=1;class Rr{constructor(t=0,e=0,n=0,r=1){Rr.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,r){return this.x=t,this.y=e,this.z=n,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,i=this.w,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*r+s[12]*i,this.y=s[1]*e+s[5]*n+s[9]*r+s[13]*i,this.z=s[2]*e+s[6]*n+s[10]*r+s[14]*i,this.w=s[3]*e+s[7]*n+s[11]*r+s[15]*i,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,r,i;const s=.01,a=.1,o=t.elements,l=o[0],u=o[4],c=o[8],h=o[1],d=o[5],p=o[9],f=o[2],m=o[6],g=o[10];if(Math.abs(u-h)<s&&Math.abs(c-f)<s&&Math.abs(p-m)<s){if(Math.abs(u+h)<a&&Math.abs(c+f)<a&&Math.abs(p+m)<a&&Math.abs(l+d+g-3)<a)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,o=(d+1)/2,x=(g+1)/2,y=(u+h)/4,v=(c+f)/4,b=(p+m)/4;return t>o&&t>x?t<s?(n=0,r=.707106781,i=.707106781):(n=Math.sqrt(t),r=y/n,i=v/n):o>x?o<s?(n=.707106781,r=0,i=.707106781):(r=Math.sqrt(o),n=y/r,i=b/r):x<s?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(x),n=v/i,r=b/i),this.set(n,r,i,e),this}let x=Math.sqrt((m-p)*(m-p)+(c-f)*(c-f)+(h-u)*(h-u));return Math.abs(x)<.001&&(x=1),this.x=(m-p)/x,this.y=(c-f)/x,this.z=(h-u)/x,this.w=Math.acos((l+d+g-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Zn(this.x,t.x,e.x),this.y=Zn(this.y,t.y,e.y),this.z=Zn(this.z,t.z,e.z),this.w=Zn(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=Zn(this.x,t,e),this.y=Zn(this.y,t,e),this.z=Zn(this.z,t,e),this.w=Zn(this.w,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Zn(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Nr extends Hn{constructor(t=1,e=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:It,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=n.depth,this.scissor=new Rr(0,0,t,e),this.scissorTest=!1,this.viewport=new Rr(0,0,t,e);const r={width:t,height:e,depth:n.depth},i=new Ar(r);this.textures=[];const s=n.count;for(let t=0;t<s;t++)this.textures[t]=i.clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(t={}){const e={minFilter:It,generateMipmaps:!1,flipY:!1,internalFormat:null};void 0!==t.mapping&&(e.mapping=t.mapping),void 0!==t.wrapS&&(e.wrapS=t.wrapS),void 0!==t.wrapT&&(e.wrapT=t.wrapT),void 0!==t.wrapR&&(e.wrapR=t.wrapR),void 0!==t.magFilter&&(e.magFilter=t.magFilter),void 0!==t.minFilter&&(e.minFilter=t.minFilter),void 0!==t.format&&(e.format=t.format),void 0!==t.type&&(e.type=t.type),void 0!==t.anisotropy&&(e.anisotropy=t.anisotropy),void 0!==t.colorSpace&&(e.colorSpace=t.colorSpace),void 0!==t.flipY&&(e.flipY=t.flipY),void 0!==t.generateMipmaps&&(e.generateMipmaps=t.generateMipmaps),void 0!==t.internalFormat&&(e.internalFormat=t.internalFormat);for(let t=0;t<this.textures.length;t++)this.textures[t].setValues(e)}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){null!==this._depthTexture&&(this._depthTexture.renderTarget=null),null!==t&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let r=0,i=this.textures.length;r<i;r++)this.textures[r].image.width=t,this.textures[r].image.height=e,this.textures[r].image.depth=n,this.textures[r].isArrayTexture=this.textures[r].image.depth>1;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,n=t.textures.length;e<n;e++){this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const n=Object.assign({},t.textures[e].image);this.textures[e].source=new Er(n)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Dr extends Nr{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class Lr extends Ar{constructor(t=null,e=1,n=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:r},this.magFilter=_t,this.minFilter=_t,this.wrapR=bt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class Fr extends Dr{constructor(t=1,e=1,n=1,r={}){super(t,e,r),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Lr(null,t,e,n),this._setTextureOptions(r),this.texture.isRenderTargetTexture=!0}}class Pr extends Ar{constructor(t=null,e=1,n=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:r},this.magFilter=_t,this.minFilter=_t,this.wrapR=bt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Or extends Dr{constructor(t=1,e=1,n=1,r={}){super(t,e,r),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Pr(null,t,e,n),this._setTextureOptions(r),this.texture.isRenderTargetTexture=!0}}class $r{constructor(t=new sr(1/0,1/0,1/0),e=new sr(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(zr.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(zr.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=zr.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(void 0!==n){const r=n.getAttribute("position");if(!0===e&&void 0!==r&&!0!==t.isInstancedMesh)for(let e=0,n=r.count;e<n;e++)!0===t.isMesh?t.getVertexPosition(e,zr):zr.fromBufferAttribute(r,e),zr.applyMatrix4(t.matrixWorld),this.expandByPoint(zr);else void 0!==t.boundingBox?(null===t.boundingBox&&t.computeBoundingBox(),Br.copy(t.boundingBox)):(null===n.boundingBox&&n.computeBoundingBox(),Br.copy(n.boundingBox)),Br.applyMatrix4(t.matrixWorld),this.union(Br)}const r=t.children;for(let t=0,n=r.length;t<n;t++)this.expandByObject(r[t],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,zr),zr.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Xr),Kr.subVectors(this.max,Xr),Vr.subVectors(t.a,Xr),Wr.subVectors(t.b,Xr),Gr.subVectors(t.c,Xr),Hr.subVectors(Wr,Vr),jr.subVectors(Gr,Wr),qr.subVectors(Vr,Gr);let e=[0,-Hr.z,Hr.y,0,-jr.z,jr.y,0,-qr.z,qr.y,Hr.z,0,-Hr.x,jr.z,0,-jr.x,qr.z,0,-qr.x,-Hr.y,Hr.x,0,-jr.y,jr.x,0,-qr.y,qr.x,0];return!!Jr(e,Vr,Wr,Gr,Kr)&&(e=[1,0,0,0,1,0,0,0,1],!!Jr(e,Vr,Wr,Gr,Kr)&&(Yr.crossVectors(Hr,jr),e=[Yr.x,Yr.y,Yr.z],Jr(e,Vr,Wr,Gr,Kr)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,zr).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=.5*this.getSize(zr).length()),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(Ur[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Ur[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Ur[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Ur[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Ur[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Ur[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Ur[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Ur[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Ur)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(t){return this.min.fromArray(t.min),this.max.fromArray(t.max),this}}const Ur=[new sr,new sr,new sr,new sr,new sr,new sr,new sr,new sr],zr=new sr,Br=new $r,Vr=new sr,Wr=new sr,Gr=new sr,Hr=new sr,jr=new sr,qr=new sr,Xr=new sr,Kr=new sr,Yr=new sr,Zr=new sr;function Jr(t,e,n,r,i){for(let s=0,a=t.length-3;s<=a;s+=3){Zr.fromArray(t,s);const a=i.x*Math.abs(Zr.x)+i.y*Math.abs(Zr.y)+i.z*Math.abs(Zr.z),o=e.dot(Zr),l=n.dot(Zr),u=r.dot(Zr);if(Math.max(-Math.max(o,l,u),Math.min(o,l,u))>a)return!1}return!0}const Qr=new $r,ti=new sr,ei=new sr;class ni{constructor(t=new sr,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):Qr.setFromPoints(t).getCenter(n);let r=0;for(let e=0,i=t.length;e<i;e++)r=Math.max(r,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(r),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;ti.subVectors(t,this.center);const e=ti.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.addScaledVector(ti,n/t),this.radius+=n}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(!0===this.center.equals(t.center)?this.radius=Math.max(this.radius,t.radius):(ei.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(ti.copy(t.center).add(ei)),this.expandByPoint(ti.copy(t.center).sub(ei))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(t){return this.radius=t.radius,this.center.fromArray(t.center),this}}const ri=new sr,ii=new sr,si=new sr,ai=new sr,oi=new sr,li=new sr,ui=new sr;class ci{constructor(t=new sr,e=new sr(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,ri)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=ri.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(ri.copy(this.origin).addScaledVector(this.direction,e),ri.distanceToSquared(t))}distanceSqToSegment(t,e,n,r){ii.copy(t).add(e).multiplyScalar(.5),si.copy(e).sub(t).normalize(),ai.copy(this.origin).sub(ii);const i=.5*t.distanceTo(e),s=-this.direction.dot(si),a=ai.dot(this.direction),o=-ai.dot(si),l=ai.lengthSq(),u=Math.abs(1-s*s);let c,h,d,p;if(u>0)if(c=s*o-a,h=s*a-o,p=i*u,c>=0)if(h>=-p)if(h<=p){const t=1/u;c*=t,h*=t,d=c*(c+s*h+2*a)+h*(s*c+h+2*o)+l}else h=i,c=Math.max(0,-(s*h+a)),d=-c*c+h*(h+2*o)+l;else h=-i,c=Math.max(0,-(s*h+a)),d=-c*c+h*(h+2*o)+l;else h<=-p?(c=Math.max(0,-(-s*i+a)),h=c>0?-i:Math.min(Math.max(-i,-o),i),d=-c*c+h*(h+2*o)+l):h<=p?(c=0,h=Math.min(Math.max(-i,-o),i),d=h*(h+2*o)+l):(c=Math.max(0,-(s*i+a)),h=c>0?i:Math.min(Math.max(-i,-o),i),d=-c*c+h*(h+2*o)+l);else h=s>0?-i:i,c=Math.max(0,-(s*h+a)),d=-c*c+h*(h+2*o)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,c),r&&r.copy(ii).addScaledVector(si,h),d}intersectSphere(t,e){ri.subVectors(t.center,this.origin);const n=ri.dot(this.direction),r=ri.dot(ri)-n*n,i=t.radius*t.radius;if(r>i)return null;const s=Math.sqrt(i-r),a=n-s,o=n+s;return o<0?null:a<0?this.at(o,e):this.at(a,e)}intersectsSphere(t){return!(t.radius<0)&&this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,r,i,s,a,o;const l=1/this.direction.x,u=1/this.direction.y,c=1/this.direction.z,h=this.origin;return l>=0?(n=(t.min.x-h.x)*l,r=(t.max.x-h.x)*l):(n=(t.max.x-h.x)*l,r=(t.min.x-h.x)*l),u>=0?(i=(t.min.y-h.y)*u,s=(t.max.y-h.y)*u):(i=(t.max.y-h.y)*u,s=(t.min.y-h.y)*u),n>s||i>r?null:((i>n||isNaN(n))&&(n=i),(s<r||isNaN(r))&&(r=s),c>=0?(a=(t.min.z-h.z)*c,o=(t.max.z-h.z)*c):(a=(t.max.z-h.z)*c,o=(t.min.z-h.z)*c),n>o||a>r?null:((a>n||n!=n)&&(n=a),(o<r||r!=r)&&(r=o),r<0?null:this.at(n>=0?n:r,e)))}intersectsBox(t){return null!==this.intersectBox(t,ri)}intersectTriangle(t,e,n,r,i){oi.subVectors(e,t),li.subVectors(n,t),ui.crossVectors(oi,li);let s,a=this.direction.dot(ui);if(a>0){if(r)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}ai.subVectors(this.origin,t);const o=s*this.direction.dot(li.crossVectors(ai,li));if(o<0)return null;const l=s*this.direction.dot(oi.cross(ai));if(l<0)return null;if(o+l>a)return null;const u=-s*ai.dot(ui);return u<0?null:this.at(u/a,i)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class hi{constructor(t,e,n,r,i,s,a,o,l,u,c,h,d,p,f,m){hi.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==t&&this.set(t,e,n,r,i,s,a,o,l,u,c,h,d,p,f,m)}set(t,e,n,r,i,s,a,o,l,u,c,h,d,p,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=r,g[1]=i,g[5]=s,g[9]=a,g[13]=o,g[2]=l,g[6]=u,g[10]=c,g[14]=h,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new hi).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,r=1/di.setFromMatrixColumn(t,0).length(),i=1/di.setFromMatrixColumn(t,1).length(),s=1/di.setFromMatrixColumn(t,2).length();return e[0]=n[0]*r,e[1]=n[1]*r,e[2]=n[2]*r,e[3]=0,e[4]=n[4]*i,e[5]=n[5]*i,e[6]=n[6]*i,e[7]=0,e[8]=n[8]*s,e[9]=n[9]*s,e[10]=n[10]*s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,r=t.y,i=t.z,s=Math.cos(n),a=Math.sin(n),o=Math.cos(r),l=Math.sin(r),u=Math.cos(i),c=Math.sin(i);if("XYZ"===t.order){const t=s*u,n=s*c,r=a*u,i=a*c;e[0]=o*u,e[4]=-o*c,e[8]=l,e[1]=n+r*l,e[5]=t-i*l,e[9]=-a*o,e[2]=i-t*l,e[6]=r+n*l,e[10]=s*o}else if("YXZ"===t.order){const t=o*u,n=o*c,r=l*u,i=l*c;e[0]=t+i*a,e[4]=r*a-n,e[8]=s*l,e[1]=s*c,e[5]=s*u,e[9]=-a,e[2]=n*a-r,e[6]=i+t*a,e[10]=s*o}else if("ZXY"===t.order){const t=o*u,n=o*c,r=l*u,i=l*c;e[0]=t-i*a,e[4]=-s*c,e[8]=r+n*a,e[1]=n+r*a,e[5]=s*u,e[9]=i-t*a,e[2]=-s*l,e[6]=a,e[10]=s*o}else if("ZYX"===t.order){const t=s*u,n=s*c,r=a*u,i=a*c;e[0]=o*u,e[4]=r*l-n,e[8]=t*l+i,e[1]=o*c,e[5]=i*l+t,e[9]=n*l-r,e[2]=-l,e[6]=a*o,e[10]=s*o}else if("YZX"===t.order){const t=s*o,n=s*l,r=a*o,i=a*l;e[0]=o*u,e[4]=i-t*c,e[8]=r*c+n,e[1]=c,e[5]=s*u,e[9]=-a*u,e[2]=-l*u,e[6]=n*c+r,e[10]=t-i*c}else if("XZY"===t.order){const t=s*o,n=s*l,r=a*o,i=a*l;e[0]=o*u,e[4]=-c,e[8]=l*u,e[1]=t*c+i,e[5]=s*u,e[9]=n*c-r,e[2]=r*c-n,e[6]=a*u,e[10]=i*c+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(fi,t,mi)}lookAt(t,e,n){const r=this.elements;return yi.subVectors(t,e),0===yi.lengthSq()&&(yi.z=1),yi.normalize(),gi.crossVectors(n,yi),0===gi.lengthSq()&&(1===Math.abs(n.z)?yi.x+=1e-4:yi.z+=1e-4,yi.normalize(),gi.crossVectors(n,yi)),gi.normalize(),xi.crossVectors(yi,gi),r[0]=gi.x,r[4]=xi.x,r[8]=yi.x,r[1]=gi.y,r[5]=xi.y,r[9]=yi.y,r[2]=gi.z,r[6]=xi.z,r[10]=yi.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,i=this.elements,s=n[0],a=n[4],o=n[8],l=n[12],u=n[1],c=n[5],h=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],x=n[3],y=n[7],v=n[11],b=n[15],w=r[0],_=r[4],S=r[8],T=r[12],M=r[1],E=r[5],I=r[9],C=r[13],k=r[2],A=r[6],R=r[10],N=r[14],D=r[3],L=r[7],F=r[11],P=r[15];return i[0]=s*w+a*M+o*k+l*D,i[4]=s*_+a*E+o*A+l*L,i[8]=s*S+a*I+o*R+l*F,i[12]=s*T+a*C+o*N+l*P,i[1]=u*w+c*M+h*k+d*D,i[5]=u*_+c*E+h*A+d*L,i[9]=u*S+c*I+h*R+d*F,i[13]=u*T+c*C+h*N+d*P,i[2]=p*w+f*M+m*k+g*D,i[6]=p*_+f*E+m*A+g*L,i[10]=p*S+f*I+m*R+g*F,i[14]=p*T+f*C+m*N+g*P,i[3]=x*w+y*M+v*k+b*D,i[7]=x*_+y*E+v*A+b*L,i[11]=x*S+y*I+v*R+b*F,i[15]=x*T+y*C+v*N+b*P,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],r=t[8],i=t[12],s=t[1],a=t[5],o=t[9],l=t[13],u=t[2],c=t[6],h=t[10],d=t[14];return t[3]*(+i*o*c-r*l*c-i*a*h+n*l*h+r*a*d-n*o*d)+t[7]*(+e*o*d-e*l*h+i*s*h-r*s*d+r*l*u-i*o*u)+t[11]*(+e*l*c-e*a*d-i*s*c+n*s*d+i*a*u-n*l*u)+t[15]*(-r*a*u-e*o*c+e*a*h+r*s*c-n*s*h+n*o*u)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=e,r[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],s=t[4],a=t[5],o=t[6],l=t[7],u=t[8],c=t[9],h=t[10],d=t[11],p=t[12],f=t[13],m=t[14],g=t[15],x=c*m*l-f*h*l+f*o*d-a*m*d-c*o*g+a*h*g,y=p*h*l-u*m*l-p*o*d+s*m*d+u*o*g-s*h*g,v=u*f*l-p*c*l+p*a*d-s*f*d-u*a*g+s*c*g,b=p*c*o-u*f*o-p*a*h+s*f*h+u*a*m-s*c*m,w=e*x+n*y+r*v+i*b;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const _=1/w;return t[0]=x*_,t[1]=(f*h*i-c*m*i-f*r*d+n*m*d+c*r*g-n*h*g)*_,t[2]=(a*m*i-f*o*i+f*r*l-n*m*l-a*r*g+n*o*g)*_,t[3]=(c*o*i-a*h*i-c*r*l+n*h*l+a*r*d-n*o*d)*_,t[4]=y*_,t[5]=(u*m*i-p*h*i+p*r*d-e*m*d-u*r*g+e*h*g)*_,t[6]=(p*o*i-s*m*i-p*r*l+e*m*l+s*r*g-e*o*g)*_,t[7]=(s*h*i-u*o*i+u*r*l-e*h*l-s*r*d+e*o*d)*_,t[8]=v*_,t[9]=(p*c*i-u*f*i-p*n*d+e*f*d+u*n*g-e*c*g)*_,t[10]=(s*f*i-p*a*i+p*n*l-e*f*l-s*n*g+e*a*g)*_,t[11]=(u*a*i-s*c*i-u*n*l+e*c*l+s*n*d-e*a*d)*_,t[12]=b*_,t[13]=(u*f*r-p*c*r+p*n*h-e*f*h-u*n*m+e*c*m)*_,t[14]=(p*a*r-s*f*r-p*n*o+e*f*o+s*n*m-e*a*m)*_,t[15]=(s*c*r-u*a*r+u*n*o-e*c*o-s*n*h+e*a*h)*_,this}scale(t){const e=this.elements,n=t.x,r=t.y,i=t.z;return e[0]*=n,e[4]*=r,e[8]*=i,e[1]*=n,e[5]*=r,e[9]*=i,e[2]*=n,e[6]*=r,e[10]*=i,e[3]*=n,e[7]*=r,e[11]*=i,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,r))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),r=Math.sin(e),i=1-n,s=t.x,a=t.y,o=t.z,l=i*s,u=i*a;return this.set(l*s+n,l*a-r*o,l*o+r*a,0,l*a+r*o,u*a+n,u*o-r*s,0,l*o-r*a,u*o+r*s,i*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,r,i,s){return this.set(1,n,i,0,t,1,s,0,e,r,1,0,0,0,0,1),this}compose(t,e,n){const r=this.elements,i=e._x,s=e._y,a=e._z,o=e._w,l=i+i,u=s+s,c=a+a,h=i*l,d=i*u,p=i*c,f=s*u,m=s*c,g=a*c,x=o*l,y=o*u,v=o*c,b=n.x,w=n.y,_=n.z;return r[0]=(1-(f+g))*b,r[1]=(d+v)*b,r[2]=(p-y)*b,r[3]=0,r[4]=(d-v)*w,r[5]=(1-(h+g))*w,r[6]=(m+x)*w,r[7]=0,r[8]=(p+y)*_,r[9]=(m-x)*_,r[10]=(1-(h+f))*_,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,e,n){const r=this.elements;let i=di.set(r[0],r[1],r[2]).length();const s=di.set(r[4],r[5],r[6]).length(),a=di.set(r[8],r[9],r[10]).length();this.determinant()<0&&(i=-i),t.x=r[12],t.y=r[13],t.z=r[14],pi.copy(this);const o=1/i,l=1/s,u=1/a;return pi.elements[0]*=o,pi.elements[1]*=o,pi.elements[2]*=o,pi.elements[4]*=l,pi.elements[5]*=l,pi.elements[6]*=l,pi.elements[8]*=u,pi.elements[9]*=u,pi.elements[10]*=u,e.setFromRotationMatrix(pi),n.x=i,n.y=s,n.z=a,this}makePerspective(t,e,n,r,i,s,a=zn){const o=this.elements,l=2*i/(e-t),u=2*i/(n-r),c=(e+t)/(e-t),h=(n+r)/(n-r);let d,p;if(a===zn)d=-(s+i)/(s-i),p=-2*s*i/(s-i);else{if(a!==Bn)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);d=-s/(s-i),p=-s*i/(s-i)}return o[0]=l,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=u,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=d,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(t,e,n,r,i,s,a=zn){const o=this.elements,l=1/(e-t),u=1/(n-r),c=1/(s-i),h=(e+t)*l,d=(n+r)*u;let p,f;if(a===zn)p=(s+i)*c,f=-2*c;else{if(a!==Bn)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);p=i*c,f=-1*c}return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*u,o[9]=0,o[13]=-d,o[2]=0,o[6]=0,o[10]=f,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const di=new sr,pi=new hi,fi=new sr(0,0,0),mi=new sr(1,1,1),gi=new sr,xi=new sr,yi=new sr,vi=new hi,bi=new ir;class wi{constructor(t=0,e=0,n=0,r=wi.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,r=this._order){return this._x=t,this._y=e,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const r=t.elements,i=r[0],s=r[4],a=r[8],o=r[1],l=r[5],u=r[9],c=r[2],h=r[6],d=r[10];switch(e){case"XYZ":this._y=Math.asin(Zn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-s,i)):(this._x=Math.atan2(h,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Zn(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-c,i),this._z=0);break;case"ZXY":this._x=Math.asin(Zn(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(o,i));break;case"ZYX":this._y=Math.asin(-Zn(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(h,d),this._z=Math.atan2(o,i)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(Zn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-c,i)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-Zn(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(h,l),this._y=Math.atan2(a,i)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return vi.makeRotationFromQuaternion(t),this.setFromRotationMatrix(vi,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return bi.setFromEuler(this),this.setFromQuaternion(bi,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}wi.DEFAULT_ORDER="XYZ";class _i{constructor(){this.mask=1}set(t){this.mask=1<<t>>>0}enable(t){this.mask|=1<<t}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t}disable(t){this.mask&=~(1<<t)}disableAll(){this.mask=0}test(t){return 0!==(this.mask&t.mask)}isEnabled(t){return!!(this.mask&1<<t)}}let Si=0;const Ti=new sr,Mi=new ir,Ei=new hi,Ii=new sr,Ci=new sr,ki=new sr,Ai=new ir,Ri=new sr(1,0,0),Ni=new sr(0,1,0),Di=new sr(0,0,1),Li={type:"added"},Fi={type:"removed"},Pi={type:"childadded",child:null},Oi={type:"childremoved",child:null};class $i extends Hn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Si++}),this.uuid=Yn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=$i.DEFAULT_UP.clone();const t=new sr,e=new wi,n=new ir,r=new sr(1,1,1);e._onChange(function(){n.setFromEuler(e,!1)}),n._onChange(function(){e.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new hi},normalMatrix:{value:new lr}}),this.matrix=new hi,this.matrixWorld=new hi,this.matrixAutoUpdate=$i.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=$i.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new _i,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Mi.setFromAxisAngle(t,e),this.quaternion.multiply(Mi),this}rotateOnWorldAxis(t,e){return Mi.setFromAxisAngle(t,e),this.quaternion.premultiply(Mi),this}rotateX(t){return this.rotateOnAxis(Ri,t)}rotateY(t){return this.rotateOnAxis(Ni,t)}rotateZ(t){return this.rotateOnAxis(Di,t)}translateOnAxis(t,e){return Ti.copy(t).applyQuaternion(this.quaternion),this.position.add(Ti.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Ri,t)}translateY(t){return this.translateOnAxis(Ni,t)}translateZ(t){return this.translateOnAxis(Di,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Ei.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Ii.copy(t):Ii.set(t,e,n);const r=this.parent;this.updateWorldMatrix(!0,!1),Ci.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ei.lookAt(Ci,Ii,this.up):Ei.lookAt(Ii,Ci,this.up),this.quaternion.setFromRotationMatrix(Ei),r&&(Ei.extractRotation(r.matrixWorld),Mi.setFromRotationMatrix(Ei),this.quaternion.premultiply(Mi.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Li),Pi.child=t,this.dispatchEvent(Pi),Pi.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Fi),Oi.child=t,this.dispatchEvent(Oi),Oi.child=null),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Ei.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Ei.multiply(t.parent.matrixWorld)),t.applyMatrix4(Ei),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Li),Pi.child=t,this.dispatchEvent(Pi),Pi.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,r=this.children.length;n<r;n++){const r=this.children[n].getObjectByProperty(t,e);if(void 0!==r)return r}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const r=this.children;for(let i=0,s=r.length;i<s;i++)r[i].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ci,t,ki),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ci,Ai,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}}toJSON(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const r={};function i(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.geometryInfo=this._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox?t.boundingBox.toJSON():void 0,boundingSphere:t.boundingSphere?t.boundingSphere.toJSON():void 0})),r.instanceInfo=this._instanceInfo.map(t=>({...t})),r.availableInstanceIds=this._availableInstanceIds.slice(),r.availableGeometryIds=this._availableGeometryIds.slice(),r.nextIndexStart=this._nextIndexStart,r.nextVertexStart=this._nextVertexStart,r.geometryCount=this._geometryCount,r.maxInstanceCount=this._maxInstanceCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.matricesTexture=this._matricesTexture.toJSON(t),r.indirectTexture=this._indirectTexture.toJSON(t),null!==this._colorsTexture&&(r.colorsTexture=this._colorsTexture.toJSON(t)),null!==this.boundingSphere&&(r.boundingSphere=this.boundingSphere.toJSON()),null!==this.boundingBox&&(r.boundingBox=this.boundingBox.toJSON())),this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(r.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=i(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,r=n.length;e<r;e++){const r=n[e];i(t.shapes,r)}else i(t.shapes,n)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(t.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,r=this.material.length;n<r;n++)e.push(i(t.materials,this.material[n]));r.material=e}else r.material=i(t.materials,this.material);if(this.children.length>0){r.children=[];for(let e=0;e<this.children.length;e++)r.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){r.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];r.animations.push(i(t.animations,n))}}if(e){const e=s(t.geometries),r=s(t.materials),i=s(t.textures),a=s(t.images),o=s(t.shapes),l=s(t.skeletons),u=s(t.animations),c=s(t.nodes);e.length>0&&(n.geometries=e),r.length>0&&(n.materials=r),i.length>0&&(n.textures=i),a.length>0&&(n.images=a),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),u.length>0&&(n.animations=u),c.length>0&&(n.nodes=c)}return n.object=r,n;function s(t){const e=[];for(const n in t){const r=t[n];delete r.metadata,e.push(r)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}}$i.DEFAULT_UP=new sr(0,1,0),$i.DEFAULT_MATRIX_AUTO_UPDATE=!0,$i.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Ui=new sr,zi=new sr,Bi=new sr,Vi=new sr,Wi=new sr,Gi=new sr,Hi=new sr,ji=new sr,qi=new sr,Xi=new sr,Ki=new Rr,Yi=new Rr,Zi=new Rr;class Ji{constructor(t=new sr,e=new sr,n=new sr){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,r){r.subVectors(n,e),Ui.subVectors(t,e),r.cross(Ui);const i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)}static getBarycoord(t,e,n,r,i){Ui.subVectors(r,e),zi.subVectors(n,e),Bi.subVectors(t,e);const s=Ui.dot(Ui),a=Ui.dot(zi),o=Ui.dot(Bi),l=zi.dot(zi),u=zi.dot(Bi),c=s*l-a*a;if(0===c)return i.set(0,0,0),null;const h=1/c,d=(l*o-a*u)*h,p=(s*u-a*o)*h;return i.set(1-d-p,p,d)}static containsPoint(t,e,n,r){return null!==this.getBarycoord(t,e,n,r,Vi)&&Vi.x>=0&&Vi.y>=0&&Vi.x+Vi.y<=1}static getInterpolation(t,e,n,r,i,s,a,o){return null===this.getBarycoord(t,e,n,r,Vi)?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(i,Vi.x),o.addScaledVector(s,Vi.y),o.addScaledVector(a,Vi.z),o)}static getInterpolatedAttribute(t,e,n,r,i,s){return Ki.setScalar(0),Yi.setScalar(0),Zi.setScalar(0),Ki.fromBufferAttribute(t,e),Yi.fromBufferAttribute(t,n),Zi.fromBufferAttribute(t,r),s.setScalar(0),s.addScaledVector(Ki,i.x),s.addScaledVector(Yi,i.y),s.addScaledVector(Zi,i.z),s}static isFrontFacing(t,e,n,r){return Ui.subVectors(n,e),zi.subVectors(t,e),Ui.cross(zi).dot(r)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,r){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[r]),this}setFromAttributeAndIndices(t,e,n,r){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,r),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Ui.subVectors(this.c,this.b),zi.subVectors(this.a,this.b),.5*Ui.cross(zi).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Ji.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Ji.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,r,i){return Ji.getInterpolation(t,this.a,this.b,this.c,e,n,r,i)}containsPoint(t){return Ji.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Ji.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,r=this.b,i=this.c;let s,a;Wi.subVectors(r,n),Gi.subVectors(i,n),ji.subVectors(t,n);const o=Wi.dot(ji),l=Gi.dot(ji);if(o<=0&&l<=0)return e.copy(n);qi.subVectors(t,r);const u=Wi.dot(qi),c=Gi.dot(qi);if(u>=0&&c<=u)return e.copy(r);const h=o*c-u*l;if(h<=0&&o>=0&&u<=0)return s=o/(o-u),e.copy(n).addScaledVector(Wi,s);Xi.subVectors(t,i);const d=Wi.dot(Xi),p=Gi.dot(Xi);if(p>=0&&d<=p)return e.copy(i);const f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return a=l/(l-p),e.copy(n).addScaledVector(Gi,a);const m=u*p-d*c;if(m<=0&&c-u>=0&&d-p>=0)return Hi.subVectors(i,r),a=(c-u)/(c-u+(d-p)),e.copy(r).addScaledVector(Hi,a);const g=1/(m+f+h);return s=f*g,a=h*g,e.copy(n).addScaledVector(Wi,s).addScaledVector(Gi,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const Qi={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ts={h:0,s:0,l:0},es={h:0,s:0,l:0};function ns(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}class rs{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(void 0===e&&void 0===n){const e=t;e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=tn){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,br.colorSpaceToWorking(this,e),this}setRGB(t,e,n,r=br.workingColorSpace){return this.r=t,this.g=e,this.b=n,br.colorSpaceToWorking(this,r),this}setHSL(t,e,n,r=br.workingColorSpace){if(t=Jn(t,1),e=Zn(e,0,1),n=Zn(n,0,1),0===e)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,i=2*n-r;this.r=ns(i,r,t+1/3),this.g=ns(i,r,t),this.b=ns(i,r,t-1/3)}return br.colorSpaceToWorking(this,r),this}setStyle(t,e=tn){function n(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(t)){let i;const s=r[1],a=r[2];switch(s){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(i[4]),this.setRGB(Math.min(255,parseInt(i[1],10))/255,Math.min(255,parseInt(i[2],10))/255,Math.min(255,parseInt(i[3],10))/255,e);if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(i[4]),this.setRGB(Math.min(100,parseInt(i[1],10))/100,Math.min(100,parseInt(i[2],10))/100,Math.min(100,parseInt(i[3],10))/100,e);break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(i[4]),this.setHSL(parseFloat(i[1])/360,parseFloat(i[2])/100,parseFloat(i[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(t)){const n=r[1],i=n.length;if(3===i)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,e);if(6===i)return this.setHex(parseInt(n,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=tn){const n=Qi[t.toLowerCase()];return void 0!==n?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=wr(t.r),this.g=wr(t.g),this.b=wr(t.b),this}copyLinearToSRGB(t){return this.r=_r(t.r),this.g=_r(t.g),this.b=_r(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=tn){return br.workingToColorSpace(is.copy(this),t),65536*Math.round(Zn(255*is.r,0,255))+256*Math.round(Zn(255*is.g,0,255))+Math.round(Zn(255*is.b,0,255))}getHexString(t=tn){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=br.workingColorSpace){br.workingToColorSpace(is.copy(this),e);const n=is.r,r=is.g,i=is.b,s=Math.max(n,r,i),a=Math.min(n,r,i);let o,l;const u=(a+s)/2;if(a===s)o=0,l=0;else{const t=s-a;switch(l=u<=.5?t/(s+a):t/(2-s-a),s){case n:o=(r-i)/t+(r<i?6:0);break;case r:o=(i-n)/t+2;break;case i:o=(n-r)/t+4}o/=6}return t.h=o,t.s=l,t.l=u,t}getRGB(t,e=br.workingColorSpace){return br.workingToColorSpace(is.copy(this),e),t.r=is.r,t.g=is.g,t.b=is.b,t}getStyle(t=tn){br.workingToColorSpace(is.copy(this),t);const e=is.r,n=is.g,r=is.b;return t!==tn?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(255*e)},${Math.round(255*n)},${Math.round(255*r)})`}offsetHSL(t,e,n){return this.getHSL(ts),this.setHSL(ts.h+t,ts.s+e,ts.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(ts),t.getHSL(es);const n=Qn(ts.h,es.h,e),r=Qn(ts.s,es.s,e),i=Qn(ts.l,es.l,e);return this.setHSL(n,r,i),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,r=this.b,i=t.elements;return this.r=i[0]*e+i[3]*n+i[6]*r,this.g=i[1]*e+i[4]*n+i[7]*r,this.b=i[2]*e+i[5]*n+i[8]*r,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const is=new rs;rs.NAMES=Qi;let ss=0;class as extends Hn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:ss++}),this.uuid=Yn(),this.name="",this.type="Material",this.blending=w,this.side=x,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=F,this.blendDst=P,this.blendEquation=E,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new rs(0,0,0),this.blendAlpha=0,this.depthFunc=K,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=bn,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=an,this.stencilZFail=an,this.stencilZPass=an,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const r=this[e];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[e]=n:console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`)}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};function r(t){const e=[];for(const n in t){const r=t[n];delete r.metadata,e.push(r)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),void 0!==this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.dispersion&&(n.dispersion=this.dispersion),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),void 0!==this.anisotropy&&(n.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapRotation&&(n.envMapRotation=this.envMapRotation.toArray()),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==w&&(n.blending=this.blending),this.side!==x&&(n.side=this.side),!0===this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=!0),this.blendSrc!==F&&(n.blendSrc=this.blendSrc),this.blendDst!==P&&(n.blendDst=this.blendDst),this.blendEquation!==E&&(n.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(n.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(n.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==K&&(n.depthFunc=this.depthFunc),!1===this.depthTest&&(n.depthTest=this.depthTest),!1===this.depthWrite&&(n.depthWrite=this.depthWrite),!1===this.colorWrite&&(n.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==bn&&(n.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(n.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==an&&(n.stencilFail=this.stencilFail),this.stencilZFail!==an&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==an&&(n.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(n.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaHash&&(n.alphaHash=!0),!0===this.alphaToCoverage&&(n.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=!0),!0===this.forceSinglePass&&(n.forceSinglePass=!0),!0===this.wireframe&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData),e){const e=r(t.textures),i=r(t.images);e.length>0&&(n.textures=e),i.length>0&&(n.images=i)}return n}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let r=0;r!==t;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}class os extends as{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new rs(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new wi,this.combine=tt,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const ls=us();function us(){const t=new ArrayBuffer(4),e=new Float32Array(t),n=new Uint32Array(t),r=new Uint32Array(512),i=new Uint32Array(512);for(let t=0;t<256;++t){const e=t-127;e<-27?(r[t]=0,r[256|t]=32768,i[t]=24,i[256|t]=24):e<-14?(r[t]=1024>>-e-14,r[256|t]=1024>>-e-14|32768,i[t]=-e-1,i[256|t]=-e-1):e<=15?(r[t]=e+15<<10,r[256|t]=e+15<<10|32768,i[t]=13,i[256|t]=13):e<128?(r[t]=31744,r[256|t]=64512,i[t]=24,i[256|t]=24):(r[t]=31744,r[256|t]=64512,i[t]=13,i[256|t]=13)}const s=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let t=1;t<1024;++t){let e=t<<13,n=0;for(;!(8388608&e);)e<<=1,n-=8388608;e&=-8388609,n+=947912704,s[t]=e|n}for(let t=1024;t<2048;++t)s[t]=939524096+(t-1024<<13);for(let t=1;t<31;++t)a[t]=t<<23;a[31]=1199570944,a[32]=2147483648;for(let t=33;t<63;++t)a[t]=2147483648+(t-32<<23);a[63]=3347054592;for(let t=1;t<64;++t)32!==t&&(o[t]=1024);return{floatView:e,uint32View:n,baseTable:r,shiftTable:i,mantissaTable:s,exponentTable:a,offsetTable:o}}function cs(t){Math.abs(t)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),t=Zn(t,-65504,65504),ls.floatView[0]=t;const e=ls.uint32View[0],n=e>>23&511;return ls.baseTable[n]+((8388607&e)>>ls.shiftTable[n])}function hs(t){const e=t>>10;return ls.uint32View[0]=ls.mantissaTable[ls.offsetTable[e]+(1023&t)]+ls.exponentTable[e],ls.floatView[0]}class ds{static toHalfFloat(t){return cs(t)}static fromHalfFloat(t){return hs(t)}}const ps=new sr,fs=new rr;let ms=0;class gs{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:ms++}),this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=n,this.usage=kn,this.updateRanges=[],this.gpuType=$t,this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let r=0,i=this.itemSize;r<i;r++)this.array[t+r]=e.array[n+r];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)fs.fromBufferAttribute(this,e),fs.applyMatrix3(t),this.setXY(e,fs.x,fs.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)ps.fromBufferAttribute(this,e),ps.applyMatrix3(t),this.setXYZ(e,ps.x,ps.y,ps.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)ps.fromBufferAttribute(this,e),ps.applyMatrix4(t),this.setXYZ(e,ps.x,ps.y,ps.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)ps.fromBufferAttribute(this,e),ps.applyNormalMatrix(t),this.setXYZ(e,ps.x,ps.y,ps.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)ps.fromBufferAttribute(this,e),ps.transformDirection(t),this.setXYZ(e,ps.x,ps.y,ps.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=tr(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=er(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=tr(e,this.array)),e}setX(t,e){return this.normalized&&(e=er(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=tr(e,this.array)),e}setY(t,e){return this.normalized&&(e=er(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=tr(e,this.array)),e}setZ(t,e){return this.normalized&&(e=er(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=tr(e,this.array)),e}setW(t,e){return this.normalized&&(e=er(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=er(e,this.array),n=er(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,r){return t*=this.itemSize,this.normalized&&(e=er(e,this.array),n=er(n,this.array),r=er(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this}setXYZW(t,e,n,r,i){return t*=this.itemSize,this.normalized&&(e=er(e,this.array),n=er(n,this.array),r=er(r,this.array),i=er(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this.array[t+3]=i,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==kn&&(t.usage=this.usage),t}}class xs extends gs{constructor(t,e,n){super(new Int8Array(t),e,n)}}class ys extends gs{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class vs extends gs{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class bs extends gs{constructor(t,e,n){super(new Int16Array(t),e,n)}}class ws extends gs{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class _s extends gs{constructor(t,e,n){super(new Int32Array(t),e,n)}}class Ss extends gs{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class Ts extends gs{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=hs(this.array[t*this.itemSize]);return this.normalized&&(e=tr(e,this.array)),e}setX(t,e){return this.normalized&&(e=er(e,this.array)),this.array[t*this.itemSize]=cs(e),this}getY(t){let e=hs(this.array[t*this.itemSize+1]);return this.normalized&&(e=tr(e,this.array)),e}setY(t,e){return this.normalized&&(e=er(e,this.array)),this.array[t*this.itemSize+1]=cs(e),this}getZ(t){let e=hs(this.array[t*this.itemSize+2]);return this.normalized&&(e=tr(e,this.array)),e}setZ(t,e){return this.normalized&&(e=er(e,this.array)),this.array[t*this.itemSize+2]=cs(e),this}getW(t){let e=hs(this.array[t*this.itemSize+3]);return this.normalized&&(e=tr(e,this.array)),e}setW(t,e){return this.normalized&&(e=er(e,this.array)),this.array[t*this.itemSize+3]=cs(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=er(e,this.array),n=er(n,this.array)),this.array[t+0]=cs(e),this.array[t+1]=cs(n),this}setXYZ(t,e,n,r){return t*=this.itemSize,this.normalized&&(e=er(e,this.array),n=er(n,this.array),r=er(r,this.array)),this.array[t+0]=cs(e),this.array[t+1]=cs(n),this.array[t+2]=cs(r),this}setXYZW(t,e,n,r,i){return t*=this.itemSize,this.normalized&&(e=er(e,this.array),n=er(n,this.array),r=er(r,this.array),i=er(i,this.array)),this.array[t+0]=cs(e),this.array[t+1]=cs(n),this.array[t+2]=cs(r),this.array[t+3]=cs(i),this}}class Ms extends gs{constructor(t,e,n){super(new Float32Array(t),e,n)}}let Es=0;const Is=new hi,Cs=new $i,ks=new sr,As=new $r,Rs=new $r,Ns=new sr;class Ds extends Hn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Es++}),this.uuid=Yn(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(cr(t)?Ss:ws)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new lr).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(t),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return Is.makeRotationFromQuaternion(t),this.applyMatrix4(Is),this}rotateX(t){return Is.makeRotationX(t),this.applyMatrix4(Is),this}rotateY(t){return Is.makeRotationY(t),this.applyMatrix4(Is),this}rotateZ(t){return Is.makeRotationZ(t),this.applyMatrix4(Is),this}translate(t,e,n){return Is.makeTranslation(t,e,n),this.applyMatrix4(Is),this}scale(t,e,n){return Is.makeScale(t,e,n),this.applyMatrix4(Is),this}lookAt(t){return Cs.lookAt(t),Cs.updateMatrix(),this.applyMatrix4(Cs.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ks).negate(),this.translate(ks.x,ks.y,ks.z),this}setFromPoints(t){const e=this.getAttribute("position");if(void 0===e){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}this.setAttribute("position",new Ms(e,3))}else{const n=Math.min(t.length,e.count);for(let r=0;r<n;r++){const n=t[r];e.setXYZ(r,n.x,n.y,n.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new $r);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),void this.boundingBox.set(new sr(-1/0,-1/0,-1/0),new sr(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];As.setFromBufferAttribute(n),this.morphTargetsRelative?(Ns.addVectors(this.boundingBox.min,As.min),this.boundingBox.expandByPoint(Ns),Ns.addVectors(this.boundingBox.max,As.max),this.boundingBox.expandByPoint(Ns)):(this.boundingBox.expandByPoint(As.min),this.boundingBox.expandByPoint(As.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new ni);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),void this.boundingSphere.set(new sr,1/0);if(t){const n=this.boundingSphere.center;if(As.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Rs.setFromBufferAttribute(n),this.morphTargetsRelative?(Ns.addVectors(As.min,Rs.min),As.expandByPoint(Ns),Ns.addVectors(As.max,Rs.max),As.expandByPoint(Ns)):(As.expandByPoint(Rs.min),As.expandByPoint(Rs.max))}As.getCenter(n);let r=0;for(let e=0,i=t.count;e<i;e++)Ns.fromBufferAttribute(t,e),r=Math.max(r,n.distanceToSquared(Ns));if(e)for(let i=0,s=e.length;i<s;i++){const s=e[i],a=this.morphTargetsRelative;for(let e=0,i=s.count;e<i;e++)Ns.fromBufferAttribute(s,e),a&&(ks.fromBufferAttribute(t,e),Ns.add(ks)),r=Math.max(r,n.distanceToSquared(Ns))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.position,r=e.normal,i=e.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new gs(new Float32Array(4*n.count),4));const s=this.getAttribute("tangent"),a=[],o=[];for(let t=0;t<n.count;t++)a[t]=new sr,o[t]=new sr;const l=new sr,u=new sr,c=new sr,h=new rr,d=new rr,p=new rr,f=new sr,m=new sr;function g(t,e,r){l.fromBufferAttribute(n,t),u.fromBufferAttribute(n,e),c.fromBufferAttribute(n,r),h.fromBufferAttribute(i,t),d.fromBufferAttribute(i,e),p.fromBufferAttribute(i,r),u.sub(l),c.sub(l),d.sub(h),p.sub(h);const s=1/(d.x*p.y-p.x*d.y);isFinite(s)&&(f.copy(u).multiplyScalar(p.y).addScaledVector(c,-d.y).multiplyScalar(s),m.copy(c).multiplyScalar(d.x).addScaledVector(u,-p.x).multiplyScalar(s),a[t].add(f),a[e].add(f),a[r].add(f),o[t].add(m),o[e].add(m),o[r].add(m))}let x=this.groups;0===x.length&&(x=[{start:0,count:t.count}]);for(let e=0,n=x.length;e<n;++e){const n=x[e],r=n.start;for(let e=r,i=r+n.count;e<i;e+=3)g(t.getX(e+0),t.getX(e+1),t.getX(e+2))}const y=new sr,v=new sr,b=new sr,w=new sr;function _(t){b.fromBufferAttribute(r,t),w.copy(b);const e=a[t];y.copy(e),y.sub(b.multiplyScalar(b.dot(e))).normalize(),v.crossVectors(w,e);const n=v.dot(o[t])<0?-1:1;s.setXYZW(t,y.x,y.y,y.z,n)}for(let e=0,n=x.length;e<n;++e){const n=x[e],r=n.start;for(let e=r,i=r+n.count;e<i;e+=3)_(t.getX(e+0)),_(t.getX(e+1)),_(t.getX(e+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new gs(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const r=new sr,i=new sr,s=new sr,a=new sr,o=new sr,l=new sr,u=new sr,c=new sr;if(t)for(let h=0,d=t.count;h<d;h+=3){const d=t.getX(h+0),p=t.getX(h+1),f=t.getX(h+2);r.fromBufferAttribute(e,d),i.fromBufferAttribute(e,p),s.fromBufferAttribute(e,f),u.subVectors(s,i),c.subVectors(r,i),u.cross(c),a.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,f),a.add(u),o.add(u),l.add(u),n.setXYZ(d,a.x,a.y,a.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(f,l.x,l.y,l.z)}else for(let t=0,a=e.count;t<a;t+=3)r.fromBufferAttribute(e,t+0),i.fromBufferAttribute(e,t+1),s.fromBufferAttribute(e,t+2),u.subVectors(s,i),c.subVectors(r,i),u.cross(c),n.setXYZ(t+0,u.x,u.y,u.z),n.setXYZ(t+1,u.x,u.y,u.z),n.setXYZ(t+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Ns.fromBufferAttribute(t,e),Ns.normalize(),t.setXYZ(e,Ns.x,Ns.y,Ns.z)}toNonIndexed(){function t(t,e){const n=t.array,r=t.itemSize,i=t.normalized,s=new n.constructor(e.length*r);let a=0,o=0;for(let i=0,l=e.length;i<l;i++){a=t.isInterleavedBufferAttribute?e[i]*t.data.stride+t.offset:e[i]*r;for(let t=0;t<r;t++)s[o++]=n[a++]}return new gs(s,r,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Ds,n=this.index.array,r=this.attributes;for(const i in r){const s=t(r[i],n);e.setAttribute(i,s)}const i=this.morphAttributes;for(const r in i){const s=[],a=i[r];for(let e=0,r=a.length;e<r;e++){const r=t(a[e],n);s.push(r)}e.morphAttributes[r]=s}e.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let t=0,n=s.length;t<n;t++){const n=s[t];e.addGroup(n.start,n.count,n.materialIndex)}return e}toJSON(){const t={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const r=n[e];t.data.attributes[e]=r.toJSON(t.data)}const r={};let i=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],s=[];for(let e=0,r=n.length;e<r;e++){const r=n[e];s.push(r.toJSON(t.data))}s.length>0&&(r[e]=s,i=!0)}i&&(t.data.morphAttributes=r,t.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));const a=this.boundingSphere;return null!==a&&(t.data.boundingSphere=a.toJSON()),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone());const r=t.attributes;for(const t in r){const n=r[t];this.setAttribute(t,n.clone(e))}const i=t.morphAttributes;for(const t in i){const n=[],r=i[t];for(let t=0,i=r.length;t<i;t++)n.push(r[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const s=t.groups;for(let t=0,e=s.length;t<e;t++){const e=s[t];this.addGroup(e.start,e.count,e.materialIndex)}const a=t.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Ls=new hi,Fs=new ci,Ps=new ni,Os=new sr,$s=new sr,Us=new sr,zs=new sr,Bs=new sr,Vs=new sr,Ws=new sr,Gs=new sr;class Hs extends $i{constructor(t=new Ds,e=new os){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}getVertexPosition(t,e){const n=this.geometry,r=n.attributes.position,i=n.morphAttributes.position,s=n.morphTargetsRelative;e.fromBufferAttribute(r,t);const a=this.morphTargetInfluences;if(i&&a){Vs.set(0,0,0);for(let n=0,r=i.length;n<r;n++){const r=a[n],o=i[n];0!==r&&(Bs.fromBufferAttribute(o,t),s?Vs.addScaledVector(Bs,r):Vs.addScaledVector(Bs.sub(e),r))}e.add(Vs)}return e}raycast(t,e){const n=this.geometry,r=this.material,i=this.matrixWorld;if(void 0!==r){if(null===n.boundingSphere&&n.computeBoundingSphere(),Ps.copy(n.boundingSphere),Ps.applyMatrix4(i),Fs.copy(t.ray).recast(t.near),!1===Ps.containsPoint(Fs.origin)){if(null===Fs.intersectSphere(Ps,Os))return;if(Fs.origin.distanceToSquared(Os)>(t.far-t.near)**2)return}Ls.copy(i).invert(),Fs.copy(t.ray).applyMatrix4(Ls),null!==n.boundingBox&&!1===Fs.intersectsBox(n.boundingBox)||this._computeIntersections(t,e,Fs)}}_computeIntersections(t,e,n){let r;const i=this.geometry,s=this.material,a=i.index,o=i.attributes.position,l=i.attributes.uv,u=i.attributes.uv1,c=i.attributes.normal,h=i.groups,d=i.drawRange;if(null!==a)if(Array.isArray(s))for(let i=0,o=h.length;i<o;i++){const o=h[i],p=s[o.materialIndex];for(let i=Math.max(o.start,d.start),s=Math.min(a.count,Math.min(o.start+o.count,d.start+d.count));i<s;i+=3)r=js(this,p,t,n,l,u,c,a.getX(i),a.getX(i+1),a.getX(i+2)),r&&(r.faceIndex=Math.floor(i/3),r.face.materialIndex=o.materialIndex,e.push(r))}else for(let i=Math.max(0,d.start),o=Math.min(a.count,d.start+d.count);i<o;i+=3)r=js(this,s,t,n,l,u,c,a.getX(i),a.getX(i+1),a.getX(i+2)),r&&(r.faceIndex=Math.floor(i/3),e.push(r));else if(void 0!==o)if(Array.isArray(s))for(let i=0,a=h.length;i<a;i++){const a=h[i],p=s[a.materialIndex];for(let i=Math.max(a.start,d.start),s=Math.min(o.count,Math.min(a.start+a.count,d.start+d.count));i<s;i+=3)r=js(this,p,t,n,l,u,c,i,i+1,i+2),r&&(r.faceIndex=Math.floor(i/3),r.face.materialIndex=a.materialIndex,e.push(r))}else for(let i=Math.max(0,d.start),a=Math.min(o.count,d.start+d.count);i<a;i+=3)r=js(this,s,t,n,l,u,c,i,i+1,i+2),r&&(r.faceIndex=Math.floor(i/3),e.push(r))}}function js(t,e,n,r,i,s,a,o,l,u){t.getVertexPosition(o,$s),t.getVertexPosition(l,Us),t.getVertexPosition(u,zs);const c=function(t,e,n,r,i,s,a,o){let l;if(l=e.side===y?r.intersectTriangle(a,s,i,!0,o):r.intersectTriangle(i,s,a,e.side===x,o),null===l)return null;Gs.copy(o),Gs.applyMatrix4(t.matrixWorld);const u=n.ray.origin.distanceTo(Gs);return u<n.near||u>n.far?null:{distance:u,point:Gs.clone(),object:t}}(t,e,n,r,$s,Us,zs,Ws);if(c){const t=new sr;Ji.getBarycoord(Ws,$s,Us,zs,t),i&&(c.uv=Ji.getInterpolatedAttribute(i,o,l,u,t,new rr)),s&&(c.uv1=Ji.getInterpolatedAttribute(s,o,l,u,t,new rr)),a&&(c.normal=Ji.getInterpolatedAttribute(a,o,l,u,t,new sr),c.normal.dot(r.direction)>0&&c.normal.multiplyScalar(-1));const e={a:o,b:l,c:u,normal:new sr,materialIndex:0};Ji.getNormal($s,Us,zs,e.normal),c.face=e,c.barycoord=t}return c}class qs extends Ds{constructor(t=1,e=1,n=1,r=1,i=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:r,heightSegments:i,depthSegments:s};const a=this;r=Math.floor(r),i=Math.floor(i),s=Math.floor(s);const o=[],l=[],u=[],c=[];let h=0,d=0;function p(t,e,n,r,i,s,p,f,m,g,x){const y=s/m,v=p/g,b=s/2,w=p/2,_=f/2,S=m+1,T=g+1;let M=0,E=0;const I=new sr;for(let s=0;s<T;s++){const a=s*v-w;for(let o=0;o<S;o++){const h=o*y-b;I[t]=h*r,I[e]=a*i,I[n]=_,l.push(I.x,I.y,I.z),I[t]=0,I[e]=0,I[n]=f>0?1:-1,u.push(I.x,I.y,I.z),c.push(o/m),c.push(1-s/g),M+=1}}for(let t=0;t<g;t++)for(let e=0;e<m;e++){const n=h+e+S*t,r=h+e+S*(t+1),i=h+(e+1)+S*(t+1),s=h+(e+1)+S*t;o.push(n,r,s),o.push(r,i,s),E+=6}a.addGroup(d,E,x),d+=E,h+=M}p("z","y","x",-1,-1,n,e,t,s,i,0),p("z","y","x",1,-1,n,e,-t,s,i,1),p("x","z","y",1,1,t,n,e,r,s,2),p("x","z","y",1,-1,t,n,-e,r,s,3),p("x","y","z",1,-1,t,e,n,r,i,4),p("x","y","z",-1,-1,t,e,-n,r,i,5),this.setIndex(o),this.setAttribute("position",new Ms(l,3)),this.setAttribute("normal",new Ms(u,3)),this.setAttribute("uv",new Ms(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new qs(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Xs(t){const e={};for(const n in t){e[n]={};for(const r in t[n]){const i=t[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[n][r]=null):e[n][r]=i.clone():Array.isArray(i)?e[n][r]=i.slice():e[n][r]=i}}return e}function Ks(t){const e={};for(let n=0;n<t.length;n++){const r=Xs(t[n]);for(const t in r)e[t]=r[t]}return e}function Ys(t){const e=t.getRenderTarget();return null===e?t.outputColorSpace:!0===e.isXRRenderTarget?e.texture.colorSpace:br.workingColorSpace}const Zs={clone:Xs,merge:Ks};class Js extends as{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Xs(t.uniforms),this.uniformsGroups=function(t){const e=[];for(let n=0;n<t.length;n++)e.push(t[n].clone());return e}(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const r=this.uniforms[n].value;r&&r.isTexture?e.uniforms[n]={type:"t",value:r.toJSON(t).uuid}:r&&r.isColor?e.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?e.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?e.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?e.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?e.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?e.uniforms[n]={type:"m4",value:r.toArray()}:e.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class Qs extends $i{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new hi,this.projectionMatrix=new hi,this.projectionMatrixInverse=new hi,this.coordinateSystem=zn}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}const ta=new sr,ea=new rr,na=new rr;class ra extends Qs{constructor(t=50,e=1,n=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*Kn*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*Xn*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*Kn*Math.atan(Math.tan(.5*Xn*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){ta.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(ta.x,ta.y).multiplyScalar(-t/ta.z),ta.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(ta.x,ta.y).multiplyScalar(-t/ta.z)}getViewSize(t,e){return this.getViewBounds(t,ea,na),e.subVectors(na,ea)}setViewOffset(t,e,n,r,i,s){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*Xn*this.fov)/this.zoom,n=2*e,r=this.aspect*n,i=-.5*r;const s=this.view;if(null!==this.view&&this.view.enabled){const t=s.fullWidth,a=s.fullHeight;i+=s.offsetX*r/t,e-=s.offsetY*n/a,r*=s.width/t,n*=s.height/a}const a=this.filmOffset;0!==a&&(i+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const ia=-90;class sa extends $i{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new ra(ia,1,t,e);r.layers=this.layers,this.add(r);const i=new ra(ia,1,t,e);i.layers=this.layers,this.add(i);const s=new ra(ia,1,t,e);s.layers=this.layers,this.add(s);const a=new ra(ia,1,t,e);a.layers=this.layers,this.add(a);const o=new ra(ia,1,t,e);o.layers=this.layers,this.add(o);const l=new ra(ia,1,t,e);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,r,i,s,a,o]=e;for(const t of e)this.remove(t);if(t===zn)n.up.set(0,1,0),n.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),i.up.set(0,0,-1),i.lookAt(0,1,0),s.up.set(0,0,1),s.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),o.up.set(0,1,0),o.lookAt(0,0,-1);else{if(t!==Bn)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);n.up.set(0,-1,0),n.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),i.up.set(0,0,1),i.lookAt(0,1,0),s.up.set(0,0,-1),s.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),o.up.set(0,-1,0),o.lookAt(0,0,-1)}for(const t of e)this.add(t),t.updateMatrixWorld()}update(t,e){null===this.parent&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:r}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[i,s,a,o,l,u]=this.children,c=t.getRenderTarget(),h=t.getActiveCubeFace(),d=t.getActiveMipmapLevel(),p=t.xr.enabled;t.xr.enabled=!1;const f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,r),t.render(e,i),t.setRenderTarget(n,1,r),t.render(e,s),t.setRenderTarget(n,2,r),t.render(e,a),t.setRenderTarget(n,3,r),t.render(e,o),t.setRenderTarget(n,4,r),t.render(e,l),n.texture.generateMipmaps=f,t.setRenderTarget(n,5,r),t.render(e,u),t.setRenderTarget(c,h,d),t.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class aa extends Ar{constructor(t=[],e=ft,n,r,i,s,a,o,l,u){super(t,e,n,r,i,s,a,o,l,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class oa extends Dr{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},r=[n,n,n,n,n,n];this.texture=new aa(r),this._setTextureOptions(e),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={tEquirect:{value:null}},r="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",i="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",s=new qs(5,5,5),a=new Js({name:"CubemapFromEquirect",uniforms:Xs(n),vertexShader:r,fragmentShader:i,side:y,blending:b});a.uniforms.tEquirect.value=e;const o=new Hs(s,a),l=e.minFilter;return e.minFilter===At&&(e.minFilter=It),new sa(1,10,this).update(t,o),e.minFilter=l,o.geometry.dispose(),o.material.dispose(),this}clear(t,e=!0,n=!0,r=!0){const i=t.getRenderTarget();for(let i=0;i<6;i++)t.setRenderTarget(this,i),t.clear(e,n,r);t.setRenderTarget(i)}}class la extends $i{constructor(){super(),this.isGroup=!0,this.type="Group"}}const ua={type:"move"};class ca{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new la,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new la,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new sr,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new sr),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new la,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new sr,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new sr),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let r=null,i=null,s=null;const a=this._targetRay,o=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState){if(l&&t.hand){s=!0;for(const r of t.hand.values()){const t=e.getJointPose(r,n),i=this._getHandJoint(l,r);null!==t&&(i.matrix.fromArray(t.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.matrixWorldNeedsUpdate=!0,i.jointRadius=t.radius),i.visible=null!==t}const r=l.joints["index-finger-tip"],i=l.joints["thumb-tip"],a=r.position.distanceTo(i.position),o=.02,u=.005;l.inputState.pinching&&a>o+u?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&a<=o-u&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(i=e.getPose(t.gripSpace,n),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1));null!==a&&(r=e.getPose(t.targetRaySpace,n),null===r&&null!==i&&(r=i),null!==r&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(ua)))}return null!==a&&(a.visible=null!==r),null!==o&&(o.visible=null!==i),null!==l&&(l.visible=null!==s),this}_getHandJoint(t,e){if(void 0===t.joints[e.jointName]){const n=new la;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class ha{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new rs(t),this.density=e}clone(){return new ha(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class da{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new rs(t),this.near=e,this.far=n}clone(){return new da(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class pa extends $i{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new wi,this.environmentIntensity=1,this.environmentRotation=new wi,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),1!==this.environmentIntensity&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class fa{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=kn,this.updateRanges=[],this.version=0,this.uuid=Yn()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let r=0,i=this.stride;r<i;r++)this.array[t+r]=e.array[n+r];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Yn()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Yn()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const ma=new sr;class ga{constructor(t,e,n,r=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)ma.fromBufferAttribute(this,e),ma.applyMatrix4(t),this.setXYZ(e,ma.x,ma.y,ma.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)ma.fromBufferAttribute(this,e),ma.applyNormalMatrix(t),this.setXYZ(e,ma.x,ma.y,ma.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)ma.fromBufferAttribute(this,e),ma.transformDirection(t),this.setXYZ(e,ma.x,ma.y,ma.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=tr(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=er(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=er(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=er(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=er(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=er(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=tr(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=tr(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=tr(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=tr(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=er(e,this.array),n=er(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,r){return t=t*this.data.stride+this.offset,this.normalized&&(e=er(e,this.array),n=er(n,this.array),r=er(r,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this}setXYZW(t,e,n,r,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=er(e,this.array),n=er(n,this.array),r=er(r,this.array),i=er(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this.data.array[t+3]=i,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new gs(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new ga(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class xa extends as{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new rs(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let ya;const va=new sr,ba=new sr,wa=new sr,_a=new rr,Sa=new rr,Ta=new hi,Ma=new sr,Ea=new sr,Ia=new sr,Ca=new rr,ka=new rr,Aa=new rr;class Ra extends $i{constructor(t=new xa){if(super(),this.isSprite=!0,this.type="Sprite",void 0===ya){ya=new Ds;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new fa(t,5);ya.setIndex([0,1,2,0,2,3]),ya.setAttribute("position",new ga(e,3,0,!1)),ya.setAttribute("uv",new ga(e,2,3,!1))}this.geometry=ya,this.material=t,this.center=new rr(.5,.5),this.count=1}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ba.setFromMatrixScale(this.matrixWorld),Ta.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),wa.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&ba.multiplyScalar(-wa.z);const n=this.material.rotation;let r,i;0!==n&&(i=Math.cos(n),r=Math.sin(n));const s=this.center;Na(Ma.set(-.5,-.5,0),wa,s,ba,r,i),Na(Ea.set(.5,-.5,0),wa,s,ba,r,i),Na(Ia.set(.5,.5,0),wa,s,ba,r,i),Ca.set(0,0),ka.set(1,0),Aa.set(1,1);let a=t.ray.intersectTriangle(Ma,Ea,Ia,!1,va);if(null===a&&(Na(Ea.set(-.5,.5,0),wa,s,ba,r,i),ka.set(0,1),a=t.ray.intersectTriangle(Ma,Ia,Ea,!1,va),null===a))return;const o=t.ray.origin.distanceTo(va);o<t.near||o>t.far||e.push({distance:o,point:va.clone(),uv:Ji.getInterpolation(va,Ma,Ea,Ia,Ca,ka,Aa,new rr),face:null,object:this})}copy(t,e){return super.copy(t,e),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function Na(t,e,n,r,i,s){_a.subVectors(t,n).addScalar(.5).multiply(r),void 0!==i?(Sa.x=s*_a.x-i*_a.y,Sa.y=i*_a.x+s*_a.y):Sa.copy(_a),t.copy(e),t.x+=Sa.x,t.y+=Sa.y,t.applyMatrix4(Ta)}const Da=new sr,La=new sr;class Fa extends $i{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let t=0,n=e.length;t<n;t++){const n=e[t];this.addLevel(n.object.clone(),n.distance,n.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,n=0){e=Math.abs(e);const r=this.levels;let i;for(i=0;i<r.length&&!(e<r[i].distance);i++);return r.splice(i,0,{distance:e,hysteresis:n,object:t}),this.add(t),this}removeLevel(t){const e=this.levels;for(let n=0;n<e.length;n++)if(e[n].distance===t){const t=e.splice(n,1);return this.remove(t[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,r;for(n=1,r=e.length;n<r;n++){let r=e[n].distance;if(e[n].object.visible&&(r-=r*e[n].hysteresis),t<r)break}return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){Da.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(Da);this.getObjectForDistance(n).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){Da.setFromMatrixPosition(t.matrixWorld),La.setFromMatrixPosition(this.matrixWorld);const n=Da.distanceTo(La)/t.zoom;let r,i;for(e[0].object.visible=!0,r=1,i=e.length;r<i;r++){let t=e[r].distance;if(e[r].object.visible&&(t-=t*e[r].hysteresis),!(n>=t))break;e[r-1].object.visible=!1,e[r].object.visible=!0}for(this._currentLevel=r-1;r<i;r++)e[r].object.visible=!1}}toJSON(t){const e=super.toJSON(t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let t=0,r=n.length;t<r;t++){const r=n[t];e.object.levels.push({object:r.object.uuid,distance:r.distance,hysteresis:r.hysteresis})}return e}}const Pa=new sr,Oa=new Rr,$a=new Rr,Ua=new sr,za=new hi,Ba=new sr,Va=new ni,Wa=new hi,Ga=new ci;class Ha extends Hs{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=ht,this.bindMatrix=new hi,this.bindMatrixInverse=new hi,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;null===this.boundingBox&&(this.boundingBox=new $r),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let t=0;t<e.count;t++)this.getVertexPosition(t,Ba),this.boundingBox.expandByPoint(Ba)}computeBoundingSphere(){const t=this.geometry;null===this.boundingSphere&&(this.boundingSphere=new ni),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let t=0;t<e.count;t++)this.getVertexPosition(t,Ba),this.boundingSphere.expandByPoint(Ba)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const n=this.material,r=this.matrixWorld;void 0!==n&&(null===this.boundingSphere&&this.computeBoundingSphere(),Va.copy(this.boundingSphere),Va.applyMatrix4(r),!1!==t.ray.intersectsSphere(Va)&&(Wa.copy(r).invert(),Ga.copy(t.ray).applyMatrix4(Wa),null!==this.boundingBox&&!1===Ga.intersectsBox(this.boundingBox)||this._computeIntersections(t,e,Ga)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Rr,e=this.geometry.attributes.skinWeight;for(let n=0,r=e.count;n<r;n++){t.fromBufferAttribute(e,n);const r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode===ht?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===dt?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(t,e){const n=this.skeleton,r=this.geometry;Oa.fromBufferAttribute(r.attributes.skinIndex,t),$a.fromBufferAttribute(r.attributes.skinWeight,t),Pa.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const r=$a.getComponent(t);if(0!==r){const i=Oa.getComponent(t);za.multiplyMatrices(n.bones[i].matrixWorld,n.boneInverses[i]),e.addScaledVector(Ua.copy(Pa).applyMatrix4(za),r)}}return e.applyMatrix4(this.bindMatrixInverse)}}class ja extends $i{constructor(){super(),this.isBone=!0,this.type="Bone"}}class qa extends Ar{constructor(t=null,e=1,n=1,r,i,s,a,o,l=_t,u=_t,c,h){super(null,s,a,o,l,u,r,i,c,h),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Xa=new hi,Ka=new hi;class Ya{constructor(t=[],e=[]){this.uuid=Yn(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new hi)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const e=new hi;this.bones[t]&&e.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(e)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.copy(e.parent.matrixWorld).invert(),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,r=this.boneTexture;for(let r=0,i=t.length;r<i;r++){const i=t[r]?t[r].matrixWorld:Ka;Xa.multiplyMatrices(i,e[r]),Xa.toArray(n,16*r)}null!==r&&(r.needsUpdate=!0)}clone(){return new Ya(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(4*this.bones.length);t=4*Math.ceil(t/4),t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new qa(e,t,t,jt,$t);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const n=this.bones[e];if(n.name===t)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,r=t.bones.length;n<r;n++){const r=t.bones[n];let i=e[r];void 0===i&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),i=new ja),this.bones.push(i),this.boneInverses.push((new hi).fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let r=0,i=e.length;r<i;r++){const i=e[r];t.bones.push(i.uuid);const s=n[r];t.boneInverses.push(s.toArray())}return t}}class Za extends gs{constructor(t,e,n,r=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=r}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const Ja=new hi,Qa=new hi,to=[],eo=new $r,no=new hi,ro=new Hs,io=new ni;class so extends Hs{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new Za(new Float32Array(16*n),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let t=0;t<n;t++)this.setMatrixAt(t,no)}computeBoundingBox(){const t=this.geometry,e=this.count;null===this.boundingBox&&(this.boundingBox=new $r),null===t.boundingBox&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,Ja),eo.copy(t.boundingBox).applyMatrix4(Ja),this.boundingBox.union(eo)}computeBoundingSphere(){const t=this.geometry,e=this.count;null===this.boundingSphere&&(this.boundingSphere=new ni),null===t.boundingSphere&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,Ja),io.copy(t.boundingSphere).applyMatrix4(Ja),this.boundingSphere.union(io)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),null!==t.morphTexture&&(this.morphTexture=t.morphTexture.clone()),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}getMorphAt(t,e){const n=e.morphTargetInfluences,r=this.morphTexture.source.data.data,i=t*(n.length+1)+1;for(let t=0;t<n.length;t++)n[t]=r[i+t]}raycast(t,e){const n=this.matrixWorld,r=this.count;if(ro.geometry=this.geometry,ro.material=this.material,void 0!==ro.material&&(null===this.boundingSphere&&this.computeBoundingSphere(),io.copy(this.boundingSphere),io.applyMatrix4(n),!1!==t.ray.intersectsSphere(io)))for(let i=0;i<r;i++){this.getMatrixAt(i,Ja),Qa.multiplyMatrices(n,Ja),ro.matrixWorld=Qa,ro.raycast(t,to);for(let t=0,n=to.length;t<n;t++){const n=to[t];n.instanceId=i,n.object=this,e.push(n)}to.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new Za(new Float32Array(3*this.instanceMatrix.count).fill(1),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}setMorphAt(t,e){const n=e.morphTargetInfluences,r=n.length+1;null===this.morphTexture&&(this.morphTexture=new qa(new Float32Array(r*this.count),r,this.count,Kt,$t));const i=this.morphTexture.source.data.data;let s=0;for(let t=0;t<n.length;t++)s+=n[t];const a=this.geometry.morphTargetsRelative?1:1-s,o=r*t;i[o]=a,i.set(n,o+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),null!==this.morphTexture&&(this.morphTexture.dispose(),this.morphTexture=null)}}const ao=new sr,oo=new sr,lo=new lr;class uo{constructor(t=new sr(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,r){return this.normal.set(t,e,n),this.constant=r,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const r=ao.subVectors(n,e).cross(oo.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(r,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(ao),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const i=-(t.start.dot(this.normal)+this.constant)/r;return i<0||i>1?null:e.copy(t.start).addScaledVector(n,i)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||lo.getNormalMatrix(t),r=this.coplanarPoint(ao).applyMatrix4(t),i=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(i),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const co=new ni,ho=new sr;class po{constructor(t=new uo,e=new uo,n=new uo,r=new uo,i=new uo,s=new uo){this.planes=[t,e,n,r,i,s]}set(t,e,n,r,i,s){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(r),a[4].copy(i),a[5].copy(s),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=zn){const n=this.planes,r=t.elements,i=r[0],s=r[1],a=r[2],o=r[3],l=r[4],u=r[5],c=r[6],h=r[7],d=r[8],p=r[9],f=r[10],m=r[11],g=r[12],x=r[13],y=r[14],v=r[15];if(n[0].setComponents(o-i,h-l,m-d,v-g).normalize(),n[1].setComponents(o+i,h+l,m+d,v+g).normalize(),n[2].setComponents(o+s,h+u,m+p,v+x).normalize(),n[3].setComponents(o-s,h-u,m-p,v-x).normalize(),n[4].setComponents(o-a,h-c,m-f,v-y).normalize(),e===zn)n[5].setComponents(o+a,h+c,m+f,v+y).normalize();else{if(e!==Bn)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);n[5].setComponents(a,c,f,y).normalize()}return this}intersectsObject(t){if(void 0!==t.boundingSphere)null===t.boundingSphere&&t.computeBoundingSphere(),co.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;null===e.boundingSphere&&e.computeBoundingSphere(),co.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(co)}intersectsSprite(t){return co.center.set(0,0,0),co.radius=.7071067811865476,co.applyMatrix4(t.matrixWorld),this.intersectsSphere(co)}intersectsSphere(t){const e=this.planes,n=t.center,r=-t.radius;for(let t=0;t<6;t++)if(e[t].distanceToPoint(n)<r)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const r=e[n];if(ho.x=r.normal.x>0?t.max.x:t.min.x,ho.y=r.normal.y>0?t.max.y:t.min.y,ho.z=r.normal.z>0?t.max.z:t.min.z,r.distanceToPoint(ho)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}const fo=new hi,mo=new po;class go{constructor(){this.coordinateSystem=zn}intersectsObject(t,e){if(!e.isArrayCamera||0===e.cameras.length)return!1;for(let n=0;n<e.cameras.length;n++){const r=e.cameras[n];if(fo.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),mo.setFromProjectionMatrix(fo,this.coordinateSystem),mo.intersectsObject(t))return!0}return!1}intersectsSprite(t,e){if(!e||!e.cameras||0===e.cameras.length)return!1;for(let n=0;n<e.cameras.length;n++){const r=e.cameras[n];if(fo.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),mo.setFromProjectionMatrix(fo,this.coordinateSystem),mo.intersectsSprite(t))return!0}return!1}intersectsSphere(t,e){if(!e||!e.cameras||0===e.cameras.length)return!1;for(let n=0;n<e.cameras.length;n++){const r=e.cameras[n];if(fo.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),mo.setFromProjectionMatrix(fo,this.coordinateSystem),mo.intersectsSphere(t))return!0}return!1}intersectsBox(t,e){if(!e||!e.cameras||0===e.cameras.length)return!1;for(let n=0;n<e.cameras.length;n++){const r=e.cameras[n];if(fo.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),mo.setFromProjectionMatrix(fo,this.coordinateSystem),mo.intersectsBox(t))return!0}return!1}containsPoint(t,e){if(!e||!e.cameras||0===e.cameras.length)return!1;for(let n=0;n<e.cameras.length;n++){const r=e.cameras[n];if(fo.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),mo.setFromProjectionMatrix(fo,this.coordinateSystem),mo.containsPoint(t))return!0}return!1}clone(){return new go}}function xo(t,e){return t-e}function yo(t,e){return t.z-e.z}function vo(t,e){return e.z-t.z}class bo{constructor(){this.index=0,this.pool=[],this.list=[]}push(t,e,n,r){const i=this.pool,s=this.list;this.index>=i.length&&i.push({start:-1,count:-1,z:-1,index:-1});const a=i[this.index];s.push(a),this.index++,a.start=t,a.count=e,a.z=n,a.index=r}reset(){this.list.length=0,this.index=0}}const wo=new hi,_o=new rs(1,1,1),So=new po,To=new go,Mo=new $r,Eo=new ni,Io=new sr,Co=new sr,ko=new sr,Ao=new bo,Ro=new Hs,No=[];function Do(t,e,n=0){const r=e.itemSize;if(t.isInterleavedBufferAttribute||t.array.constructor!==e.array.constructor){const i=t.count;for(let s=0;s<i;s++)for(let i=0;i<r;i++)e.setComponent(s+n,i,t.getComponent(s,i))}else e.array.set(t.array,n*r);e.needsUpdate=!0}function Lo(t,e){if(t.constructor!==e.constructor){const n=Math.min(t.length,e.length);for(let r=0;r<n;r++)e[r]=t[r]}else{const n=Math.min(t.length,e.length);e.set(new t.constructor(t.buffer,0,n))}}class Fo extends Hs{constructor(t,e,n=2*e,r){super(new Ds,r),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=t,this._maxVertexCount=e,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(t),this._multiDrawStarts=new Int32Array(t),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let t=Math.sqrt(4*this._maxInstanceCount);t=4*Math.ceil(t/4),t=Math.max(t,4);const e=new Float32Array(t*t*4),n=new qa(e,t,t,jt,$t);this._matricesTexture=n}_initIndirectTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Uint32Array(t*t),n=new qa(e,t,t,Yt,Ot);this._indirectTexture=n}_initColorsTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Float32Array(t*t*4).fill(1),n=new qa(e,t,t,jt,$t);n.colorSpace=br.workingColorSpace,this._colorsTexture=n}_initializeGeometry(t){const e=this.geometry,n=this._maxVertexCount,r=this._maxIndexCount;if(!1===this._geometryInitialized){for(const r in t.attributes){const i=t.getAttribute(r),{array:s,itemSize:a,normalized:o}=i,l=new s.constructor(n*a),u=new gs(l,a,o);e.setAttribute(r,u)}if(null!==t.getIndex()){const t=n>65535?new Uint32Array(r):new Uint16Array(r);e.setIndex(new gs(t,1))}this._geometryInitialized=!0}}_validateGeometry(t){const e=this.geometry;if(Boolean(t.getIndex())!==Boolean(e.getIndex()))throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in e.attributes){if(!t.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const r=t.getAttribute(n),i=e.getAttribute(n);if(r.itemSize!==i.itemSize||r.normalized!==i.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(t){const e=this._instanceInfo;if(t<0||t>=e.length||!1===e[t].active)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${t}. Instance is either out of range or has been deleted.`)}validateGeometryId(t){const e=this._geometryInfo;if(t<0||t>=e.length||!1===e[t].active)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${t}. Geometry is either out of range or has been deleted.`)}setCustomSort(t){return this.customSort=t,this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new $r);const t=this.boundingBox,e=this._instanceInfo;t.makeEmpty();for(let n=0,r=e.length;n<r;n++){if(!1===e[n].active)continue;const r=e[n].geometryIndex;this.getMatrixAt(n,wo),this.getBoundingBoxAt(r,Mo).applyMatrix4(wo),t.union(Mo)}}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new ni);const t=this.boundingSphere,e=this._instanceInfo;t.makeEmpty();for(let n=0,r=e.length;n<r;n++){if(!1===e[n].active)continue;const r=e[n].geometryIndex;this.getMatrixAt(n,wo),this.getBoundingSphereAt(r,Eo).applyMatrix4(wo),t.union(Eo)}}addInstance(t){if(this._instanceInfo.length>=this.maxInstanceCount&&0===this._availableInstanceIds.length)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const e={visible:!0,active:!0,geometryIndex:t};let n=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(xo),n=this._availableInstanceIds.shift(),this._instanceInfo[n]=e):(n=this._instanceInfo.length,this._instanceInfo.push(e));const r=this._matricesTexture;wo.identity().toArray(r.image.data,16*n),r.needsUpdate=!0;const i=this._colorsTexture;return i&&(_o.toArray(i.image.data,4*n),i.needsUpdate=!0),this._visibilityChanged=!0,n}addGeometry(t,e=-1,n=-1){this._initializeGeometry(t),this._validateGeometry(t);const r={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},i=this._geometryInfo;r.vertexStart=this._nextVertexStart,r.reservedVertexCount=-1===e?t.getAttribute("position").count:e;const s=t.getIndex();if(null!==s&&(r.indexStart=this._nextIndexStart,r.reservedIndexCount=-1===n?s.count:n),-1!==r.indexStart&&r.indexStart+r.reservedIndexCount>this._maxIndexCount||r.vertexStart+r.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let a;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(xo),a=this._availableGeometryIds.shift(),i[a]=r):(a=this._geometryCount,this._geometryCount++,i.push(r)),this.setGeometryAt(a,t),this._nextIndexStart=r.indexStart+r.reservedIndexCount,this._nextVertexStart=r.vertexStart+r.reservedVertexCount,a}setGeometryAt(t,e){if(t>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(e);const n=this.geometry,r=null!==n.getIndex(),i=n.getIndex(),s=e.getIndex(),a=this._geometryInfo[t];if(r&&s.count>a.reservedIndexCount||e.attributes.position.count>a.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const o=a.vertexStart,l=a.reservedVertexCount;a.vertexCount=e.getAttribute("position").count;for(const t in n.attributes){const r=e.getAttribute(t),i=n.getAttribute(t);Do(r,i,o);const s=r.itemSize;for(let t=r.count,e=l;t<e;t++){const e=o+t;for(let t=0;t<s;t++)i.setComponent(e,t,0)}i.needsUpdate=!0,i.addUpdateRange(o*s,l*s)}if(r){const t=a.indexStart,n=a.reservedIndexCount;a.indexCount=e.getIndex().count;for(let e=0;e<s.count;e++)i.setX(t+e,o+s.getX(e));for(let e=s.count,r=n;e<r;e++)i.setX(t+e,o);i.needsUpdate=!0,i.addUpdateRange(t,a.reservedIndexCount)}return a.start=r?a.indexStart:a.vertexStart,a.count=r?a.indexCount:a.vertexCount,a.boundingBox=null,null!==e.boundingBox&&(a.boundingBox=e.boundingBox.clone()),a.boundingSphere=null,null!==e.boundingSphere&&(a.boundingSphere=e.boundingSphere.clone()),this._visibilityChanged=!0,t}deleteGeometry(t){const e=this._geometryInfo;if(t>=e.length||!1===e[t].active)return this;const n=this._instanceInfo;for(let e=0,r=n.length;e<r;e++)n[e].active&&n[e].geometryIndex===t&&this.deleteInstance(e);return e[t].active=!1,this._availableGeometryIds.push(t),this._visibilityChanged=!0,this}deleteInstance(t){return this.validateInstanceId(t),this._instanceInfo[t].active=!1,this._availableInstanceIds.push(t),this._visibilityChanged=!0,this}optimize(){let t=0,e=0;const n=this._geometryInfo,r=n.map((t,e)=>e).sort((t,e)=>n[t].vertexStart-n[e].vertexStart),i=this.geometry;for(let s=0,a=n.length;s<a;s++){const a=r[s],o=n[a];if(!1!==o.active){if(null!==i.index){if(o.indexStart!==e){const{indexStart:n,vertexStart:r,reservedIndexCount:s}=o,a=i.index,l=a.array,u=t-r;for(let t=n;t<n+s;t++)l[t]=l[t]+u;a.array.copyWithin(e,n,n+s),a.addUpdateRange(e,s),o.indexStart=e}e+=o.reservedIndexCount}if(o.vertexStart!==t){const{vertexStart:e,reservedVertexCount:n}=o,r=i.attributes;for(const i in r){const s=r[i],{array:a,itemSize:o}=s;a.copyWithin(t*o,e*o,(e+n)*o),s.addUpdateRange(t*o,n*o)}o.vertexStart=t}t+=o.reservedVertexCount,o.start=i.index?o.indexStart:o.vertexStart,this._nextIndexStart=i.index?o.indexStart+o.reservedIndexCount:0,this._nextVertexStart=o.vertexStart+o.reservedVertexCount}}return this}getBoundingBoxAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,r=this._geometryInfo[t];if(null===r.boundingBox){const t=new $r,e=n.index,i=n.attributes.position;for(let n=r.start,s=r.start+r.count;n<s;n++){let r=n;e&&(r=e.getX(r)),t.expandByPoint(Io.fromBufferAttribute(i,r))}r.boundingBox=t}return e.copy(r.boundingBox),e}getBoundingSphereAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,r=this._geometryInfo[t];if(null===r.boundingSphere){const e=new ni;this.getBoundingBoxAt(t,Mo),Mo.getCenter(e.center);const i=n.index,s=n.attributes.position;let a=0;for(let t=r.start,n=r.start+r.count;t<n;t++){let n=t;i&&(n=i.getX(n)),Io.fromBufferAttribute(s,n),a=Math.max(a,e.center.distanceToSquared(Io))}e.radius=Math.sqrt(a),r.boundingSphere=e}return e.copy(r.boundingSphere),e}setMatrixAt(t,e){this.validateInstanceId(t);const n=this._matricesTexture,r=this._matricesTexture.image.data;return e.toArray(r,16*t),n.needsUpdate=!0,this}getMatrixAt(t,e){return this.validateInstanceId(t),e.fromArray(this._matricesTexture.image.data,16*t)}setColorAt(t,e){return this.validateInstanceId(t),null===this._colorsTexture&&this._initColorsTexture(),e.toArray(this._colorsTexture.image.data,4*t),this._colorsTexture.needsUpdate=!0,this}getColorAt(t,e){return this.validateInstanceId(t),e.fromArray(this._colorsTexture.image.data,4*t)}setVisibleAt(t,e){return this.validateInstanceId(t),this._instanceInfo[t].visible===e||(this._instanceInfo[t].visible=e,this._visibilityChanged=!0),this}getVisibleAt(t){return this.validateInstanceId(t),this._instanceInfo[t].visible}setGeometryIdAt(t,e){return this.validateInstanceId(t),this.validateGeometryId(e),this._instanceInfo[t].geometryIndex=e,this}getGeometryIdAt(t){return this.validateInstanceId(t),this._instanceInfo[t].geometryIndex}getGeometryRangeAt(t,e={}){this.validateGeometryId(t);const n=this._geometryInfo[t];return e.vertexStart=n.vertexStart,e.vertexCount=n.vertexCount,e.reservedVertexCount=n.reservedVertexCount,e.indexStart=n.indexStart,e.indexCount=n.indexCount,e.reservedIndexCount=n.reservedIndexCount,e.start=n.start,e.count=n.count,e}setInstanceCount(t){const e=this._availableInstanceIds,n=this._instanceInfo;for(e.sort(xo);e[e.length-1]===n.length;)n.pop(),e.pop();if(t<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${t} are being used. Cannot shrink instance count.`);const r=new Int32Array(t),i=new Int32Array(t);Lo(this._multiDrawCounts,r),Lo(this._multiDrawStarts,i),this._multiDrawCounts=r,this._multiDrawStarts=i,this._maxInstanceCount=t;const s=this._indirectTexture,a=this._matricesTexture,o=this._colorsTexture;s.dispose(),this._initIndirectTexture(),Lo(s.image.data,this._indirectTexture.image.data),a.dispose(),this._initMatricesTexture(),Lo(a.image.data,this._matricesTexture.image.data),o&&(o.dispose(),this._initColorsTexture(),Lo(o.image.data,this._colorsTexture.image.data))}setGeometrySize(t,e){const n=[...this._geometryInfo].filter(t=>t.active),r=Math.max(...n.map(t=>t.vertexStart+t.reservedVertexCount));if(r>t)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${e}. Cannot shrink further.`);if(this.geometry.index){const t=Math.max(...n.map(t=>t.indexStart+t.reservedIndexCount));if(t>e)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${e}. Cannot shrink further.`)}const i=this.geometry;i.dispose(),this._maxVertexCount=t,this._maxIndexCount=e,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new Ds,this._initializeGeometry(i));const s=this.geometry;i.index&&Lo(i.index.array,s.index.array);for(const t in i.attributes)Lo(i.attributes[t].array,s.attributes[t].array)}raycast(t,e){const n=this._instanceInfo,r=this._geometryInfo,i=this.matrixWorld,s=this.geometry;Ro.material=this.material,Ro.geometry.index=s.index,Ro.geometry.attributes=s.attributes,null===Ro.geometry.boundingBox&&(Ro.geometry.boundingBox=new $r),null===Ro.geometry.boundingSphere&&(Ro.geometry.boundingSphere=new ni);for(let s=0,a=n.length;s<a;s++){if(!n[s].visible||!n[s].active)continue;const a=n[s].geometryIndex,o=r[a];Ro.geometry.setDrawRange(o.start,o.count),this.getMatrixAt(s,Ro.matrixWorld).premultiply(i),this.getBoundingBoxAt(a,Ro.geometry.boundingBox),this.getBoundingSphereAt(a,Ro.geometry.boundingSphere),Ro.raycast(t,No);for(let t=0,n=No.length;t<n;t++){const n=No[t];n.object=this,n.batchId=s,e.push(n)}No.length=0}Ro.material=null,Ro.geometry.index=null,Ro.geometry.attributes={},Ro.geometry.setDrawRange(0,1/0)}copy(t){return super.copy(t),this.geometry=t.geometry.clone(),this.perObjectFrustumCulled=t.perObjectFrustumCulled,this.sortObjects=t.sortObjects,this.boundingBox=null!==t.boundingBox?t.boundingBox.clone():null,this.boundingSphere=null!==t.boundingSphere?t.boundingSphere.clone():null,this._geometryInfo=t._geometryInfo.map(t=>({...t,boundingBox:null!==t.boundingBox?t.boundingBox.clone():null,boundingSphere:null!==t.boundingSphere?t.boundingSphere.clone():null})),this._instanceInfo=t._instanceInfo.map(t=>({...t})),this._availableInstanceIds=t._availableInstanceIds.slice(),this._availableGeometryIds=t._availableGeometryIds.slice(),this._nextIndexStart=t._nextIndexStart,this._nextVertexStart=t._nextVertexStart,this._geometryCount=t._geometryCount,this._maxInstanceCount=t._maxInstanceCount,this._maxVertexCount=t._maxVertexCount,this._maxIndexCount=t._maxIndexCount,this._geometryInitialized=t._geometryInitialized,this._multiDrawCounts=t._multiDrawCounts.slice(),this._multiDrawStarts=t._multiDrawStarts.slice(),this._indirectTexture=t._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=t._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),null!==this._colorsTexture&&(this._colorsTexture=t._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,null!==this._colorsTexture&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(t,e,n,r,i){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const s=r.getIndex(),a=null===s?1:s.array.BYTES_PER_ELEMENT,o=this._instanceInfo,l=this._multiDrawStarts,u=this._multiDrawCounts,c=this._geometryInfo,h=this.perObjectFrustumCulled,d=this._indirectTexture,p=d.image.data,f=n.isArrayCamera?To:So;h&&!n.isArrayCamera&&(wo.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),So.setFromProjectionMatrix(wo,t.coordinateSystem));let m=0;if(this.sortObjects){wo.copy(this.matrixWorld).invert(),Io.setFromMatrixPosition(n.matrixWorld).applyMatrix4(wo),Co.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(wo);for(let t=0,e=o.length;t<e;t++)if(o[t].visible&&o[t].active){const e=o[t].geometryIndex;this.getMatrixAt(t,wo),this.getBoundingSphereAt(e,Eo).applyMatrix4(wo);let r=!1;if(h&&(r=!f.intersectsSphere(Eo,n)),!r){const n=c[e],r=ko.subVectors(Eo.center,Io).dot(Co);Ao.push(n.start,n.count,r,t)}}const t=Ao.list,e=this.customSort;null===e?t.sort(i.transparent?vo:yo):e.call(this,t,n);for(let e=0,n=t.length;e<n;e++){const n=t[e];l[m]=n.start*a,u[m]=n.count,p[m]=n.index,m++}Ao.reset()}else for(let t=0,e=o.length;t<e;t++)if(o[t].visible&&o[t].active){const e=o[t].geometryIndex;let r=!1;if(h&&(this.getMatrixAt(t,wo),this.getBoundingSphereAt(e,Eo).applyMatrix4(wo),r=!f.intersectsSphere(Eo,n)),!r){const n=c[e];l[m]=n.start*a,u[m]=n.count,p[m]=t,m++}}d.needsUpdate=!0,this._multiDrawCount=m,this._visibilityChanged=!1}onBeforeShadow(t,e,n,r,i,s){this.onBeforeRender(t,null,r,i,s)}}class Po extends as{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new rs(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Oo=new sr,$o=new sr,Uo=new hi,zo=new ci,Bo=new ni,Vo=new sr,Wo=new sr;class Go extends $i{constructor(t=new Ds,e=new Po){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,r=e.count;t<r;t++)Oo.fromBufferAttribute(e,t-1),$o.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=Oo.distanceTo($o);t.setAttribute("lineDistance",new Ms(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,i=t.params.Line.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Bo.copy(n.boundingSphere),Bo.applyMatrix4(r),Bo.radius+=i,!1===t.ray.intersectsSphere(Bo))return;Uo.copy(r).invert(),zo.copy(t.ray).applyMatrix4(Uo);const a=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=this.isLineSegments?2:1,u=n.index,c=n.attributes.position;if(null!==u){const n=Math.max(0,s.start),r=Math.min(u.count,s.start+s.count);for(let i=n,s=r-1;i<s;i+=l){const n=u.getX(i),r=u.getX(i+1),s=Ho(this,t,zo,o,n,r,i);s&&e.push(s)}if(this.isLineLoop){const i=u.getX(r-1),s=u.getX(n),a=Ho(this,t,zo,o,i,s,r-1);a&&e.push(a)}}else{const n=Math.max(0,s.start),r=Math.min(c.count,s.start+s.count);for(let i=n,s=r-1;i<s;i+=l){const n=Ho(this,t,zo,o,i,i+1,i);n&&e.push(n)}if(this.isLineLoop){const i=Ho(this,t,zo,o,r-1,n,r-1);i&&e.push(i)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}function Ho(t,e,n,r,i,s,a){const o=t.geometry.attributes.position;if(Oo.fromBufferAttribute(o,i),$o.fromBufferAttribute(o,s),n.distanceSqToSegment(Oo,$o,Vo,Wo)>r)return;Vo.applyMatrix4(t.matrixWorld);const l=e.ray.origin.distanceTo(Vo);return l<e.near||l>e.far?void 0:{distance:l,point:Wo.clone().applyMatrix4(t.matrixWorld),index:a,face:null,faceIndex:null,barycoord:null,object:t}}const jo=new sr,qo=new sr;class Xo extends Go{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,r=e.count;t<r;t+=2)jo.fromBufferAttribute(e,t),qo.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+jo.distanceTo(qo);t.setAttribute("lineDistance",new Ms(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Ko extends Go{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class Yo extends as{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new rs(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const Zo=new hi,Jo=new ci,Qo=new ni,tl=new sr;class el extends $i{constructor(t=new Ds,e=new Yo){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,i=t.params.Points.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Qo.copy(n.boundingSphere),Qo.applyMatrix4(r),Qo.radius+=i,!1===t.ray.intersectsSphere(Qo))return;Zo.copy(r).invert(),Jo.copy(t.ray).applyMatrix4(Zo);const a=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=n.index,u=n.attributes.position;if(null!==l)for(let n=Math.max(0,s.start),i=Math.min(l.count,s.start+s.count);n<i;n++){const i=l.getX(n);tl.fromBufferAttribute(u,i),nl(tl,i,o,r,t,e,this)}else for(let n=Math.max(0,s.start),i=Math.min(u.count,s.start+s.count);n<i;n++)tl.fromBufferAttribute(u,n),nl(tl,n,o,r,t,e,this)}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}function nl(t,e,n,r,i,s,a){const o=Jo.distanceSqToPoint(t);if(o<n){const n=new sr;Jo.closestPointToPoint(t,n),n.applyMatrix4(r);const l=i.ray.origin.distanceTo(n);if(l<i.near||l>i.far)return;s.push({distance:l,distanceToRay:Math.sqrt(o),point:n,index:e,face:null,faceIndex:null,barycoord:null,object:a})}}class rl extends Ar{constructor(t,e,n,r,i=It,s=It,a,o,l){super(t,e,n,r,i,s,a,o,l),this.isVideoTexture=!0,this.generateMipmaps=!1;const u=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(function e(){u.needsUpdate=!0,t.requestVideoFrameCallback(e)})}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1=="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class il extends rl{constructor(t,e,n,r,i,s,a,o){super({},t,e,n,r,i,s,a,o),this.isVideoFrameTexture=!0}update(){}clone(){return(new this.constructor).copy(this)}setFrame(t){this.image=t,this.needsUpdate=!0}}class sl extends Ar{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=_t,this.minFilter=_t,this.generateMipmaps=!1,this.needsUpdate=!0}}class al extends Ar{constructor(t,e,n,r,i,s,a,o,l,u,c,h){super(null,s,a,o,l,u,r,i,c,h),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class ol extends al{constructor(t,e,n,r,i,s){super(t,e,n,i,s),this.isCompressedArrayTexture=!0,this.image.depth=r,this.wrapR=bt,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class ll extends al{constructor(t,e,n){super(void 0,t[0].width,t[0].height,e,n,ft),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=t}}class ul extends Ar{constructor(t,e,n,r,i,s,a,o,l){super(t,e,n,r,i,s,a,o,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class cl extends Ar{constructor(t,e,n=Ot,r,i,s,a=_t,o=_t,l,u=qt,c=1){if(u!==qt&&u!==Xt)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super({width:t,height:e,depth:c},r,i,s,a,o,u,n,l),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.source=new Er(Object.assign({},t.image)),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return null!==this.compareFunction&&(e.compareFunction=this.compareFunction),e}}class hl extends Ds{constructor(t=1,e=1,n=4,r=8,i=1){super(),this.type="CapsuleGeometry",this.parameters={radius:t,height:e,capSegments:n,radialSegments:r,heightSegments:i},e=Math.max(0,e),n=Math.max(1,Math.floor(n)),r=Math.max(3,Math.floor(r)),i=Math.max(1,Math.floor(i));const s=[],a=[],o=[],l=[],u=e/2,c=Math.PI/2*t,h=e,d=2*c+h,p=2*n+i,f=r+1,m=new sr,g=new sr;for(let x=0;x<=p;x++){let y=0,v=0,b=0,w=0;if(x<=n){const e=x/n,r=e*Math.PI/2;v=-u-t*Math.cos(r),b=t*Math.sin(r),w=-t*Math.cos(r),y=e*c}else if(x<=n+i){const r=(x-n)/i;v=r*e-u,b=t,w=0,y=c+r*h}else{const e=(x-n-i)/n,r=e*Math.PI/2;v=u+t*Math.sin(r),b=t*Math.cos(r),w=t*Math.sin(r),y=c+h+e*c}const _=Math.max(0,Math.min(1,y/d));let S=0;0===x?S=.5/r:x===p&&(S=-.5/r);for(let t=0;t<=r;t++){const e=t/r,n=e*Math.PI*2,i=Math.sin(n),s=Math.cos(n);g.x=-b*s,g.y=v,g.z=b*i,a.push(g.x,g.y,g.z),m.set(-b*s,w,b*i),m.normalize(),o.push(m.x,m.y,m.z),l.push(e+S,_)}if(x>0){const t=(x-1)*f;for(let e=0;e<r;e++){const n=t+e,r=t+e+1,i=x*f+e,a=x*f+e+1;s.push(n,r,i),s.push(r,a,i)}}}this.setIndex(s),this.setAttribute("position",new Ms(a,3)),this.setAttribute("normal",new Ms(o,3)),this.setAttribute("uv",new Ms(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new hl(t.radius,t.height,t.capSegments,t.radialSegments,t.heightSegments)}}class dl extends Ds{constructor(t=1,e=32,n=0,r=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:r},e=Math.max(3,e);const i=[],s=[],a=[],o=[],l=new sr,u=new rr;s.push(0,0,0),a.push(0,0,1),o.push(.5,.5);for(let i=0,c=3;i<=e;i++,c+=3){const h=n+i/e*r;l.x=t*Math.cos(h),l.y=t*Math.sin(h),s.push(l.x,l.y,l.z),a.push(0,0,1),u.x=(s[c]/t+1)/2,u.y=(s[c+1]/t+1)/2,o.push(u.x,u.y)}for(let t=1;t<=e;t++)i.push(t,t+1,0);this.setIndex(i),this.setAttribute("position",new Ms(s,3)),this.setAttribute("normal",new Ms(a,3)),this.setAttribute("uv",new Ms(o,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new dl(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class pl extends Ds{constructor(t=1,e=1,n=1,r=32,i=1,s=!1,a=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:r,heightSegments:i,openEnded:s,thetaStart:a,thetaLength:o};const l=this;r=Math.floor(r),i=Math.floor(i);const u=[],c=[],h=[],d=[];let p=0;const f=[],m=n/2;let g=0;function x(n){const i=p,s=new rr,f=new sr;let x=0;const y=!0===n?t:e,v=!0===n?1:-1;for(let t=1;t<=r;t++)c.push(0,m*v,0),h.push(0,v,0),d.push(.5,.5),p++;const b=p;for(let t=0;t<=r;t++){const e=t/r*o+a,n=Math.cos(e),i=Math.sin(e);f.x=y*i,f.y=m*v,f.z=y*n,c.push(f.x,f.y,f.z),h.push(0,v,0),s.x=.5*n+.5,s.y=.5*i*v+.5,d.push(s.x,s.y),p++}for(let t=0;t<r;t++){const e=i+t,r=b+t;!0===n?u.push(r,r+1,e):u.push(r+1,r,e),x+=3}l.addGroup(g,x,!0===n?1:2),g+=x}!function(){const s=new sr,x=new sr;let y=0;const v=(e-t)/n;for(let l=0;l<=i;l++){const u=[],g=l/i,y=g*(e-t)+t;for(let t=0;t<=r;t++){const e=t/r,i=e*o+a,l=Math.sin(i),f=Math.cos(i);x.x=y*l,x.y=-g*n+m,x.z=y*f,c.push(x.x,x.y,x.z),s.set(l,v,f).normalize(),h.push(s.x,s.y,s.z),d.push(e,1-g),u.push(p++)}f.push(u)}for(let n=0;n<r;n++)for(let r=0;r<i;r++){const s=f[r][n],a=f[r+1][n],o=f[r+1][n+1],l=f[r][n+1];(t>0||0!==r)&&(u.push(s,a,l),y+=3),(e>0||r!==i-1)&&(u.push(a,o,l),y+=3)}l.addGroup(g,y,0),g+=y}(),!1===s&&(t>0&&x(!0),e>0&&x(!1)),this.setIndex(u),this.setAttribute("position",new Ms(c,3)),this.setAttribute("normal",new Ms(h,3)),this.setAttribute("uv",new Ms(d,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new pl(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class fl extends pl{constructor(t=1,e=1,n=32,r=1,i=!1,s=0,a=2*Math.PI){super(0,t,e,n,r,i,s,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:s,thetaLength:a}}static fromJSON(t){return new fl(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class ml extends Ds{constructor(t=[],e=[],n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:r};const i=[],s=[];function a(t,e,n,r){const i=r+1,s=[];for(let r=0;r<=i;r++){s[r]=[];const a=t.clone().lerp(n,r/i),o=e.clone().lerp(n,r/i),l=i-r;for(let t=0;t<=l;t++)s[r][t]=0===t&&r===i?a:a.clone().lerp(o,t/l)}for(let t=0;t<i;t++)for(let e=0;e<2*(i-t)-1;e++){const n=Math.floor(e/2);e%2==0?(o(s[t][n+1]),o(s[t+1][n]),o(s[t][n])):(o(s[t][n+1]),o(s[t+1][n+1]),o(s[t+1][n]))}}function o(t){i.push(t.x,t.y,t.z)}function l(e,n){const r=3*e;n.x=t[r+0],n.y=t[r+1],n.z=t[r+2]}function u(t,e,n,r){r<0&&1===t.x&&(s[e]=t.x-1),0===n.x&&0===n.z&&(s[e]=r/2/Math.PI+.5)}function c(t){return Math.atan2(t.z,-t.x)}function h(t){return Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))}!function(t){const n=new sr,r=new sr,i=new sr;for(let s=0;s<e.length;s+=3)l(e[s+0],n),l(e[s+1],r),l(e[s+2],i),a(n,r,i,t)}(r),function(t){const e=new sr;for(let n=0;n<i.length;n+=3)e.x=i[n+0],e.y=i[n+1],e.z=i[n+2],e.normalize().multiplyScalar(t),i[n+0]=e.x,i[n+1]=e.y,i[n+2]=e.z}(n),function(){const t=new sr;for(let e=0;e<i.length;e+=3){t.x=i[e+0],t.y=i[e+1],t.z=i[e+2];const n=c(t)/2/Math.PI+.5,r=h(t)/Math.PI+.5;s.push(n,1-r)}(function(){const t=new sr,e=new sr,n=new sr,r=new sr,a=new rr,o=new rr,l=new rr;for(let h=0,d=0;h<i.length;h+=9,d+=6){t.set(i[h+0],i[h+1],i[h+2]),e.set(i[h+3],i[h+4],i[h+5]),n.set(i[h+6],i[h+7],i[h+8]),a.set(s[d+0],s[d+1]),o.set(s[d+2],s[d+3]),l.set(s[d+4],s[d+5]),r.copy(t).add(e).add(n).divideScalar(3);const p=c(r);u(a,d+0,t,p),u(o,d+2,e,p),u(l,d+4,n,p)}})(),function(){for(let t=0;t<s.length;t+=6){const e=s[t+0],n=s[t+2],r=s[t+4],i=Math.max(e,n,r),a=Math.min(e,n,r);i>.9&&a<.1&&(e<.2&&(s[t+0]+=1),n<.2&&(s[t+2]+=1),r<.2&&(s[t+4]+=1))}}()}(),this.setAttribute("position",new Ms(i,3)),this.setAttribute("normal",new Ms(i.slice(),3)),this.setAttribute("uv",new Ms(s,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ml(t.vertices,t.indices,t.radius,t.details)}}class gl extends ml{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,r=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new gl(t.radius,t.detail)}}const xl=new sr,yl=new sr,vl=new sr,bl=new Ji;class wl extends Ds{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},null!==t){const n=4,r=Math.pow(10,n),i=Math.cos(Xn*e),s=t.getIndex(),a=t.getAttribute("position"),o=s?s.count:a.count,l=[0,0,0],u=["a","b","c"],c=new Array(3),h={},d=[];for(let t=0;t<o;t+=3){s?(l[0]=s.getX(t),l[1]=s.getX(t+1),l[2]=s.getX(t+2)):(l[0]=t,l[1]=t+1,l[2]=t+2);const{a:e,b:n,c:o}=bl;if(e.fromBufferAttribute(a,l[0]),n.fromBufferAttribute(a,l[1]),o.fromBufferAttribute(a,l[2]),bl.getNormal(vl),c[0]=`${Math.round(e.x*r)},${Math.round(e.y*r)},${Math.round(e.z*r)}`,c[1]=`${Math.round(n.x*r)},${Math.round(n.y*r)},${Math.round(n.z*r)}`,c[2]=`${Math.round(o.x*r)},${Math.round(o.y*r)},${Math.round(o.z*r)}`,c[0]!==c[1]&&c[1]!==c[2]&&c[2]!==c[0])for(let t=0;t<3;t++){const e=(t+1)%3,n=c[t],r=c[e],s=bl[u[t]],a=bl[u[e]],o=`${n}_${r}`,p=`${r}_${n}`;p in h&&h[p]?(vl.dot(h[p].normal)<=i&&(d.push(s.x,s.y,s.z),d.push(a.x,a.y,a.z)),h[p]=null):o in h||(h[o]={index0:l[t],index1:l[e],normal:vl.clone()})}}for(const t in h)if(h[t]){const{index0:e,index1:n}=h[t];xl.fromBufferAttribute(a,e),yl.fromBufferAttribute(a,n),d.push(xl.x,xl.y,xl.z),d.push(yl.x,yl.y,yl.z)}this.setAttribute("position",new Ms(d,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class _l{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,r=this.getPoint(0),i=0;e.push(0);for(let s=1;s<=t;s++)n=this.getPoint(s/t),i+=n.distanceTo(r),e.push(i),r=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e=null){const n=this.getLengths();let r=0;const i=n.length;let s;s=e||t*n[i-1];let a,o=0,l=i-1;for(;o<=l;)if(r=Math.floor(o+(l-o)/2),a=n[r]-s,a<0)o=r+1;else{if(!(a>0)){l=r;break}l=r-1}if(r=l,n[r]===s)return r/(i-1);const u=n[r];return(r+(s-u)/(n[r+1]-u))/(i-1)}getTangent(t,e){const n=1e-4;let r=t-n,i=t+n;r<0&&(r=0),i>1&&(i=1);const s=this.getPoint(r),a=this.getPoint(i),o=e||(s.isVector2?new rr:new sr);return o.copy(a).sub(s).normalize(),o}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e=!1){const n=new sr,r=[],i=[],s=[],a=new sr,o=new hi;for(let e=0;e<=t;e++){const n=e/t;r[e]=this.getTangentAt(n,new sr)}i[0]=new sr,s[0]=new sr;let l=Number.MAX_VALUE;const u=Math.abs(r[0].x),c=Math.abs(r[0].y),h=Math.abs(r[0].z);u<=l&&(l=u,n.set(1,0,0)),c<=l&&(l=c,n.set(0,1,0)),h<=l&&n.set(0,0,1),a.crossVectors(r[0],n).normalize(),i[0].crossVectors(r[0],a),s[0].crossVectors(r[0],i[0]);for(let e=1;e<=t;e++){if(i[e]=i[e-1].clone(),s[e]=s[e-1].clone(),a.crossVectors(r[e-1],r[e]),a.length()>Number.EPSILON){a.normalize();const t=Math.acos(Zn(r[e-1].dot(r[e]),-1,1));i[e].applyMatrix4(o.makeRotationAxis(a,t))}s[e].crossVectors(r[e],i[e])}if(!0===e){let e=Math.acos(Zn(i[0].dot(i[t]),-1,1));e/=t,r[0].dot(a.crossVectors(i[0],i[t]))>0&&(e=-e);for(let n=1;n<=t;n++)i[n].applyMatrix4(o.makeRotationAxis(r[n],e*n)),s[n].crossVectors(r[n],i[n])}return{tangents:r,normals:i,binormals:s}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Sl extends _l{constructor(t=0,e=0,n=1,r=1,i=0,s=2*Math.PI,a=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=s,this.aClockwise=a,this.aRotation=o}getPoint(t,e=new rr){const n=e,r=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;const s=Math.abs(i)<Number.EPSILON;for(;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(i=s?0:r),!0!==this.aClockwise||s||(i===r?i=-r:i-=r);const a=this.aStartAngle+t*i;let o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=o-this.aX,r=l-this.aY;o=n*t-r*e+this.aX,l=n*e+r*t+this.aY}return n.set(o,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class Tl extends Sl{constructor(t,e,n,r,i,s){super(t,e,n,n,r,i,s),this.isArcCurve=!0,this.type="ArcCurve"}}function Ml(){let t=0,e=0,n=0,r=0;function i(i,s,a,o){t=i,e=a,n=-3*i+3*s-2*a-o,r=2*i-2*s+a+o}return{initCatmullRom:function(t,e,n,r,s){i(e,n,s*(n-t),s*(r-e))},initNonuniformCatmullRom:function(t,e,n,r,s,a,o){let l=(e-t)/s-(n-t)/(s+a)+(n-e)/a,u=(n-e)/a-(r-e)/(a+o)+(r-n)/o;l*=a,u*=a,i(e,n,l,u)},calc:function(i){const s=i*i;return t+e*i+n*s+r*(s*i)}}}const El=new sr,Il=new Ml,Cl=new Ml,kl=new Ml;class Al extends _l{constructor(t=[],e=!1,n="centripetal",r=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=r}getPoint(t,e=new sr){const n=e,r=this.points,i=r.length,s=(i-(this.closed?0:1))*t;let a,o,l=Math.floor(s),u=s-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/i)+1)*i:0===u&&l===i-1&&(l=i-2,u=1),this.closed||l>0?a=r[(l-1)%i]:(El.subVectors(r[0],r[1]).add(r[0]),a=El);const c=r[l%i],h=r[(l+1)%i];if(this.closed||l+2<i?o=r[(l+2)%i]:(El.subVectors(r[i-1],r[i-2]).add(r[i-1]),o=El),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(a.distanceToSquared(c),t),n=Math.pow(c.distanceToSquared(h),t),r=Math.pow(h.distanceToSquared(o),t);n<1e-4&&(n=1),e<1e-4&&(e=n),r<1e-4&&(r=n),Il.initNonuniformCatmullRom(a.x,c.x,h.x,o.x,e,n,r),Cl.initNonuniformCatmullRom(a.y,c.y,h.y,o.y,e,n,r),kl.initNonuniformCatmullRom(a.z,c.z,h.z,o.z,e,n,r)}else"catmullrom"===this.curveType&&(Il.initCatmullRom(a.x,c.x,h.x,o.x,this.tension),Cl.initCatmullRom(a.y,c.y,h.y,o.y,this.tension),kl.initCatmullRom(a.z,c.z,h.z,o.z,this.tension));return n.set(Il.calc(u),Cl.calc(u),kl.calc(u)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new sr).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Rl(t,e,n,r,i){const s=.5*(r-e),a=.5*(i-n),o=t*t;return(2*n-2*r+s+a)*(t*o)+(-3*n+3*r-2*s-a)*o+s*t+n}function Nl(t,e,n,r){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,r)}function Dl(t,e,n,r,i){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,r)+function(t,e){return t*t*t*e}(t,i)}class Ll extends _l{constructor(t=new rr,e=new rr,n=new rr,r=new rr){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new rr){const n=e,r=this.v0,i=this.v1,s=this.v2,a=this.v3;return n.set(Dl(t,r.x,i.x,s.x,a.x),Dl(t,r.y,i.y,s.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Fl extends _l{constructor(t=new sr,e=new sr,n=new sr,r=new sr){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new sr){const n=e,r=this.v0,i=this.v1,s=this.v2,a=this.v3;return n.set(Dl(t,r.x,i.x,s.x,a.x),Dl(t,r.y,i.y,s.y,a.y),Dl(t,r.z,i.z,s.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Pl extends _l{constructor(t=new rr,e=new rr){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new rr){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new rr){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Ol extends _l{constructor(t=new sr,e=new sr){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new sr){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new sr){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class $l extends _l{constructor(t=new rr,e=new rr,n=new rr){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new rr){const n=e,r=this.v0,i=this.v1,s=this.v2;return n.set(Nl(t,r.x,i.x,s.x),Nl(t,r.y,i.y,s.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Ul extends _l{constructor(t=new sr,e=new sr,n=new sr){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new sr){const n=e,r=this.v0,i=this.v1,s=this.v2;return n.set(Nl(t,r.x,i.x,s.x),Nl(t,r.y,i.y,s.y),Nl(t,r.z,i.z,s.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class zl extends _l{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new rr){const n=e,r=this.points,i=(r.length-1)*t,s=Math.floor(i),a=i-s,o=r[0===s?s:s-1],l=r[s],u=r[s>r.length-2?r.length-1:s+1],c=r[s>r.length-3?r.length-1:s+2];return n.set(Rl(a,o.x,l.x,u.x,c.x),Rl(a,o.y,l.y,u.y,c.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new rr).fromArray(n))}return this}}var Bl=Object.freeze({__proto__:null,ArcCurve:Tl,CatmullRomCurve3:Al,CubicBezierCurve:Ll,CubicBezierCurve3:Fl,EllipseCurve:Sl,LineCurve:Pl,LineCurve3:Ol,QuadraticBezierCurve:$l,QuadraticBezierCurve3:Ul,SplineCurve:zl});class Vl extends _l{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const n=!0===t.isVector2?"LineCurve":"LineCurve3";this.curves.push(new Bl[n](e,t))}return this}getPoint(t,e){const n=t*this.getLength(),r=this.getCurveLengths();let i=0;for(;i<r.length;){if(r[i]>=n){const t=r[i]-n,s=this.curves[i],a=s.getLength(),o=0===a?0:1-t/a;return s.getPointAt(o,e)}i++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,r=this.curves.length;n<r;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let r=0,i=this.curves;r<i.length;r++){const s=i[r],a=s.isEllipseCurve?2*t:s.isLineCurve||s.isLineCurve3?1:s.isSplineCurve?t*s.points.length:t,o=s.getPoints(a);for(let t=0;t<o.length;t++){const r=o[t];n&&n.equals(r)||(e.push(r),n=r)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new Bl[n.type]).fromJSON(n))}return this}}class Wl extends Vl{constructor(t){super(),this.type="Path",this.currentPoint=new rr,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Pl(this.currentPoint.clone(),new rr(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,r){const i=new $l(this.currentPoint.clone(),new rr(t,e),new rr(n,r));return this.curves.push(i),this.currentPoint.set(n,r),this}bezierCurveTo(t,e,n,r,i,s){const a=new Ll(this.currentPoint.clone(),new rr(t,e),new rr(n,r),new rr(i,s));return this.curves.push(a),this.currentPoint.set(i,s),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new zl(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,r,i,s){const a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+a,e+o,n,r,i,s),this}absarc(t,e,n,r,i,s){return this.absellipse(t,e,n,n,r,i,s),this}ellipse(t,e,n,r,i,s,a,o){const l=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(t+l,e+u,n,r,i,s,a,o),this}absellipse(t,e,n,r,i,s,a,o){const l=new Sl(t,e,n,r,i,s,a,o);if(this.curves.length>0){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);const u=l.getPoint(1);return this.currentPoint.copy(u),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Gl extends Wl{constructor(t){super(t),this.uuid=Yn(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,r=this.holes.length;n<r;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new Wl).fromJSON(n))}return this}}function Hl(t,e,n,r,i){let s;if(i===function(t,e,n,r){let i=0;for(let s=e,a=n-r;s<n;s+=r)i+=(t[a]-t[s])*(t[s+1]+t[a+1]),a=s;return i}(t,e,n,r)>0)for(let i=e;i<n;i+=r)s=pu(i/r|0,t[i],t[i+1],s);else for(let i=n-r;i>=e;i-=r)s=pu(i/r|0,t[i],t[i+1],s);return s&&ou(s,s.next)&&(fu(s),s=s.next),s}function jl(t,e){if(!t)return t;e||(e=t);let n,r=t;do{if(n=!1,r.steiner||!ou(r,r.next)&&0!==au(r.prev,r,r.next))r=r.next;else{if(fu(r),r=e=r.prev,r===r.next)break;n=!0}}while(n||r!==e);return e}function ql(t,e,n,r,i,s,a){if(!t)return;!a&&s&&function(t,e,n,r){let i=t;do{0===i.z&&(i.z=eu(i.x,i.y,e,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==t);i.prevZ.nextZ=null,i.prevZ=null,function(t){let e,n=1;do{let r,i=t;t=null;let s=null;for(e=0;i;){e++;let a=i,o=0;for(let t=0;t<n&&(o++,a=a.nextZ,a);t++);let l=n;for(;o>0||l>0&&a;)0!==o&&(0===l||!a||i.z<=a.z)?(r=i,i=i.nextZ,o--):(r=a,a=a.nextZ,l--),s?s.nextZ=r:t=r,r.prevZ=s,s=r;i=a}s.nextZ=null,n*=2}while(e>1)}(i)}(t,r,i,s);let o=t;for(;t.prev!==t.next;){const l=t.prev,u=t.next;if(s?Kl(t,r,i,s):Xl(t))e.push(l.i,t.i,u.i),fu(t),t=u.next,o=u.next;else if((t=u)===o){a?1===a?ql(t=Yl(jl(t),e),e,n,r,i,s,2):2===a&&Zl(t,e,n,r,i,s):ql(jl(t),e,n,r,i,s,1);break}}}function Xl(t){const e=t.prev,n=t,r=t.next;if(au(e,n,r)>=0)return!1;const i=e.x,s=n.x,a=r.x,o=e.y,l=n.y,u=r.y,c=Math.min(i,s,a),h=Math.min(o,l,u),d=Math.max(i,s,a),p=Math.max(o,l,u);let f=r.next;for(;f!==e;){if(f.x>=c&&f.x<=d&&f.y>=h&&f.y<=p&&iu(i,o,s,l,a,u,f.x,f.y)&&au(f.prev,f,f.next)>=0)return!1;f=f.next}return!0}function Kl(t,e,n,r){const i=t.prev,s=t,a=t.next;if(au(i,s,a)>=0)return!1;const o=i.x,l=s.x,u=a.x,c=i.y,h=s.y,d=a.y,p=Math.min(o,l,u),f=Math.min(c,h,d),m=Math.max(o,l,u),g=Math.max(c,h,d),x=eu(p,f,e,n,r),y=eu(m,g,e,n,r);let v=t.prevZ,b=t.nextZ;for(;v&&v.z>=x&&b&&b.z<=y;){if(v.x>=p&&v.x<=m&&v.y>=f&&v.y<=g&&v!==i&&v!==a&&iu(o,c,l,h,u,d,v.x,v.y)&&au(v.prev,v,v.next)>=0)return!1;if(v=v.prevZ,b.x>=p&&b.x<=m&&b.y>=f&&b.y<=g&&b!==i&&b!==a&&iu(o,c,l,h,u,d,b.x,b.y)&&au(b.prev,b,b.next)>=0)return!1;b=b.nextZ}for(;v&&v.z>=x;){if(v.x>=p&&v.x<=m&&v.y>=f&&v.y<=g&&v!==i&&v!==a&&iu(o,c,l,h,u,d,v.x,v.y)&&au(v.prev,v,v.next)>=0)return!1;v=v.prevZ}for(;b&&b.z<=y;){if(b.x>=p&&b.x<=m&&b.y>=f&&b.y<=g&&b!==i&&b!==a&&iu(o,c,l,h,u,d,b.x,b.y)&&au(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function Yl(t,e){let n=t;do{const r=n.prev,i=n.next.next;!ou(r,i)&&lu(r,n,n.next,i)&&hu(r,i)&&hu(i,r)&&(e.push(r.i,n.i,i.i),fu(n),fu(n.next),n=t=i),n=n.next}while(n!==t);return jl(n)}function Zl(t,e,n,r,i,s){let a=t;do{let t=a.next.next;for(;t!==a.prev;){if(a.i!==t.i&&su(a,t)){let o=du(a,t);return a=jl(a,a.next),o=jl(o,o.next),ql(a,e,n,r,i,s,0),void ql(o,e,n,r,i,s,0)}t=t.next}a=a.next}while(a!==t)}function Jl(t,e){let n=t.x-e.x;return 0===n&&(n=t.y-e.y,0===n)&&(n=(t.next.y-t.y)/(t.next.x-t.x)-(e.next.y-e.y)/(e.next.x-e.x)),n}function Ql(t,e){const n=function(t,e){let n=e;const r=t.x,i=t.y;let s,a=-1/0;if(ou(t,n))return n;do{if(ou(t,n.next))return n.next;if(i<=n.y&&i>=n.next.y&&n.next.y!==n.y){const t=n.x+(i-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=r&&t>a&&(a=t,s=n.x<n.next.x?n:n.next,t===r))return s}n=n.next}while(n!==e);if(!s)return null;const o=s,l=s.x,u=s.y;let c=1/0;n=s;do{if(r>=n.x&&n.x>=l&&r!==n.x&&ru(i<u?r:a,i,l,u,i<u?a:r,i,n.x,n.y)){const e=Math.abs(i-n.y)/(r-n.x);hu(n,t)&&(e<c||e===c&&(n.x>s.x||n.x===s.x&&tu(s,n)))&&(s=n,c=e)}n=n.next}while(n!==o);return s}(t,e);if(!n)return e;const r=du(n,t);return jl(r,r.next),jl(n,n.next)}function tu(t,e){return au(t.prev,t,e.prev)<0&&au(e.next,t,t.next)<0}function eu(t,e,n,r,i){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-n)*i|0)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-r)*i|0)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function nu(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function ru(t,e,n,r,i,s,a,o){return(i-a)*(e-o)>=(t-a)*(s-o)&&(t-a)*(r-o)>=(n-a)*(e-o)&&(n-a)*(s-o)>=(i-a)*(r-o)}function iu(t,e,n,r,i,s,a,o){return!(t===a&&e===o)&&ru(t,e,n,r,i,s,a,o)}function su(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&lu(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(hu(t,e)&&hu(e,t)&&function(t,e){let n=t,r=!1;const i=(t.x+e.x)/2,s=(t.y+e.y)/2;do{n.y>s!=n.next.y>s&&n.next.y!==n.y&&i<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==t);return r}(t,e)&&(au(t.prev,t,e.prev)||au(t,e.prev,e))||ou(t,e)&&au(t.prev,t,t.next)>0&&au(e.prev,e,e.next)>0)}function au(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function ou(t,e){return t.x===e.x&&t.y===e.y}function lu(t,e,n,r){const i=cu(au(t,e,n)),s=cu(au(t,e,r)),a=cu(au(n,r,t)),o=cu(au(n,r,e));return i!==s&&a!==o||!(0!==i||!uu(t,n,e))||!(0!==s||!uu(t,r,e))||!(0!==a||!uu(n,t,r))||!(0!==o||!uu(n,e,r))}function uu(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function cu(t){return t>0?1:t<0?-1:0}function hu(t,e){return au(t.prev,t,t.next)<0?au(t,e,t.next)>=0&&au(t,t.prev,e)>=0:au(t,e,t.prev)<0||au(t,t.next,e)<0}function du(t,e){const n=mu(t.i,t.x,t.y),r=mu(e.i,e.x,e.y),i=t.next,s=e.prev;return t.next=e,e.prev=t,n.next=i,i.prev=n,r.next=n,n.prev=r,s.next=r,r.prev=s,r}function pu(t,e,n,r){const i=mu(t,e,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function fu(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function mu(t,e,n){return{i:t,x:e,y:n,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}class gu{static triangulate(t,e,n=2){return function(t,e,n=2){const r=e&&e.length,i=r?e[0]*n:t.length;let s=Hl(t,0,i,n,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,u;if(r&&(s=function(t,e,n,r){const i=[];for(let n=0,s=e.length;n<s;n++){const a=Hl(t,e[n]*r,n<s-1?e[n+1]*r:t.length,r,!1);a===a.next&&(a.steiner=!0),i.push(nu(a))}i.sort(Jl);for(let t=0;t<i.length;t++)n=Ql(i[t],n);return n}(t,e,s,n)),t.length>80*n){o=1/0,l=1/0;let e=-1/0,r=-1/0;for(let s=n;s<i;s+=n){const n=t[s],i=t[s+1];n<o&&(o=n),i<l&&(l=i),n>e&&(e=n),i>r&&(r=i)}u=Math.max(e-o,r-l),u=0!==u?32767/u:0}return ql(s,a,n,o,l,u,0),a}(t,e,n)}}class xu{static area(t){const e=t.length;let n=0;for(let r=e-1,i=0;i<e;r=i++)n+=t[r].x*t[i].y-t[i].x*t[r].y;return.5*n}static isClockWise(t){return xu.area(t)<0}static triangulateShape(t,e){const n=[],r=[],i=[];yu(t),vu(n,t);let s=t.length;e.forEach(yu);for(let t=0;t<e.length;t++)r.push(s),s+=e[t].length,vu(n,e[t]);const a=gu.triangulate(n,r);for(let t=0;t<a.length;t+=3)i.push(a.slice(t,t+3));return i}}function yu(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function vu(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class bu extends Ds{constructor(t=new Gl([new rr(.5,.5),new rr(-.5,.5),new rr(-.5,-.5),new rr(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,r=[],i=[];for(let e=0,n=t.length;e<n;e++)s(t[e]);function s(t){const s=[],a=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1,l=void 0!==e.depth?e.depth:1;let u=void 0===e.bevelEnabled||e.bevelEnabled,c=void 0!==e.bevelThickness?e.bevelThickness:.2,h=void 0!==e.bevelSize?e.bevelSize:c-.1,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const f=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:wu;let g,x,y,v,b,w=!1;f&&(g=f.getSpacedPoints(o),w=!0,u=!1,x=f.computeFrenetFrames(o,!1),y=new sr,v=new sr,b=new sr),u||(p=0,c=0,h=0,d=0);const _=t.extractPoints(a);let S=_.shape;const T=_.holes;if(!xu.isClockWise(S)){S=S.reverse();for(let t=0,e=T.length;t<e;t++){const e=T[t];xu.isClockWise(e)&&(T[t]=e.reverse())}}function M(t){const e=1e-10*1e-10;let n=t[0];for(let r=1;r<=t.length;r++){const i=r%t.length,s=t[i],a=s.x-n.x,o=s.y-n.y,l=a*a+o*o,u=Math.max(Math.abs(s.x),Math.abs(s.y),Math.abs(n.x),Math.abs(n.y));l<=e*u*u?(t.splice(i,1),r--):n=s}}M(S),T.forEach(M);const E=T.length,I=S;for(let t=0;t<E;t++){const e=T[t];S=S.concat(e)}function C(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().addScaledVector(e,n)}const k=S.length;function A(t,e,n){let r,i,s;const a=t.x-e.x,o=t.y-e.y,l=n.x-t.x,u=n.y-t.y,c=a*a+o*o,h=a*u-o*l;if(Math.abs(h)>Number.EPSILON){const h=Math.sqrt(c),d=Math.sqrt(l*l+u*u),p=e.x-o/h,f=e.y+a/h,m=((n.x-u/d-p)*u-(n.y+l/d-f)*l)/(a*u-o*l);r=p+a*m-t.x,i=f+o*m-t.y;const g=r*r+i*i;if(g<=2)return new rr(r,i);s=Math.sqrt(g/2)}else{let t=!1;a>Number.EPSILON?l>Number.EPSILON&&(t=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(u)&&(t=!0),t?(r=-o,i=a,s=Math.sqrt(c)):(r=a,i=o,s=Math.sqrt(c/2))}return new rr(r/s,i/s)}const R=[];for(let t=0,e=I.length,n=e-1,r=t+1;t<e;t++,n++,r++)n===e&&(n=0),r===e&&(r=0),R[t]=A(I[t],I[n],I[r]);const N=[];let D,L,F=R.concat();for(let t=0,e=E;t<e;t++){const e=T[t];D=[];for(let t=0,n=e.length,r=n-1,i=t+1;t<n;t++,r++,i++)r===n&&(r=0),i===n&&(i=0),D[t]=A(e[t],e[r],e[i]);N.push(D),F=F.concat(D)}if(0===p)L=xu.triangulateShape(I,T);else{const t=[],e=[];for(let n=0;n<p;n++){const r=n/p,i=c*Math.cos(r*Math.PI/2),s=h*Math.sin(r*Math.PI/2)+d;for(let e=0,n=I.length;e<n;e++){const n=C(I[e],R[e],s);U(n.x,n.y,-i),0===r&&t.push(n)}for(let t=0,n=E;t<n;t++){const n=T[t];D=N[t];const a=[];for(let t=0,e=n.length;t<e;t++){const e=C(n[t],D[t],s);U(e.x,e.y,-i),0===r&&a.push(e)}0===r&&e.push(a)}}L=xu.triangulateShape(t,e)}const P=L.length,O=h+d;for(let t=0;t<k;t++){const e=u?C(S[t],F[t],O):S[t];w?(v.copy(x.normals[0]).multiplyScalar(e.x),y.copy(x.binormals[0]).multiplyScalar(e.y),b.copy(g[0]).add(v).add(y),U(b.x,b.y,b.z)):U(e.x,e.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<k;e++){const n=u?C(S[e],F[e],O):S[e];w?(v.copy(x.normals[t]).multiplyScalar(n.x),y.copy(x.binormals[t]).multiplyScalar(n.y),b.copy(g[t]).add(v).add(y),U(b.x,b.y,b.z)):U(n.x,n.y,l/o*t)}for(let t=p-1;t>=0;t--){const e=t/p,n=c*Math.cos(e*Math.PI/2),r=h*Math.sin(e*Math.PI/2)+d;for(let t=0,e=I.length;t<e;t++){const e=C(I[t],R[t],r);U(e.x,e.y,l+n)}for(let t=0,e=T.length;t<e;t++){const e=T[t];D=N[t];for(let t=0,i=e.length;t<i;t++){const i=C(e[t],D[t],r);w?U(i.x,i.y+g[o-1].y,g[o-1].x+n):U(i.x,i.y,l+n)}}}function $(t,e){let n=t.length;for(;--n>=0;){const r=n;let i=n-1;i<0&&(i=t.length-1);for(let t=0,n=o+2*p;t<n;t++){const n=k*t,s=k*(t+1);B(e+r+n,e+i+n,e+i+s,e+r+s)}}}function U(t,e,n){s.push(t),s.push(e),s.push(n)}function z(t,e,i){V(t),V(e),V(i);const s=r.length/3,a=m.generateTopUV(n,r,s-3,s-2,s-1);W(a[0]),W(a[1]),W(a[2])}function B(t,e,i,s){V(t),V(e),V(s),V(e),V(i),V(s);const a=r.length/3,o=m.generateSideWallUV(n,r,a-6,a-3,a-2,a-1);W(o[0]),W(o[1]),W(o[3]),W(o[1]),W(o[2]),W(o[3])}function V(t){r.push(s[3*t+0]),r.push(s[3*t+1]),r.push(s[3*t+2])}function W(t){i.push(t.x),i.push(t.y)}!function(){const t=r.length/3;if(u){let t=0,e=k*t;for(let t=0;t<P;t++){const n=L[t];z(n[2]+e,n[1]+e,n[0]+e)}t=o+2*p,e=k*t;for(let t=0;t<P;t++){const n=L[t];z(n[0]+e,n[1]+e,n[2]+e)}}else{for(let t=0;t<P;t++){const e=L[t];z(e[2],e[1],e[0])}for(let t=0;t<P;t++){const e=L[t];z(e[0]+k*o,e[1]+k*o,e[2]+k*o)}}n.addGroup(t,r.length/3-t,0)}(),function(){const t=r.length/3;let e=0;$(I,e),e+=I.length;for(let t=0,n=T.length;t<n;t++){const n=T[t];$(n,e),e+=n.length}n.addGroup(t,r.length/3-t,1)}()}this.setAttribute("position",new Ms(r,3)),this.setAttribute("uv",new Ms(i,2)),this.computeVertexNormals()}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,r=t.length;e<r;e++){const r=t[e];n.shapes.push(r.uuid)}else n.shapes.push(t.uuid);return n.options=Object.assign({},e),void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,t)}static fromJSON(t,e){const n=[];for(let r=0,i=t.shapes.length;r<i;r++){const i=e[t.shapes[r]];n.push(i)}const r=t.options.extrudePath;return void 0!==r&&(t.options.extrudePath=(new Bl[r.type]).fromJSON(r)),new bu(n,t.options)}}const wu={generateTopUV:function(t,e,n,r,i){const s=e[3*n],a=e[3*n+1],o=e[3*r],l=e[3*r+1],u=e[3*i],c=e[3*i+1];return[new rr(s,a),new rr(o,l),new rr(u,c)]},generateSideWallUV:function(t,e,n,r,i,s){const a=e[3*n],o=e[3*n+1],l=e[3*n+2],u=e[3*r],c=e[3*r+1],h=e[3*r+2],d=e[3*i],p=e[3*i+1],f=e[3*i+2],m=e[3*s],g=e[3*s+1],x=e[3*s+2];return Math.abs(o-c)<Math.abs(a-u)?[new rr(a,1-l),new rr(u,1-h),new rr(d,1-f),new rr(m,1-x)]:[new rr(o,1-l),new rr(c,1-h),new rr(p,1-f),new rr(g,1-x)]}};class _u extends ml{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new _u(t.radius,t.detail)}}class Su extends Ds{constructor(t=[new rr(0,-.5),new rr(.5,0),new rr(0,.5)],e=12,n=0,r=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:r},e=Math.floor(e),r=Zn(r,0,2*Math.PI);const i=[],s=[],a=[],o=[],l=[],u=1/e,c=new sr,h=new rr,d=new sr,p=new sr,f=new sr;let m=0,g=0;for(let e=0;e<=t.length-1;e++)switch(e){case 0:m=t[e+1].x-t[e].x,g=t[e+1].y-t[e].y,d.x=1*g,d.y=-m,d.z=0*g,f.copy(d),d.normalize(),o.push(d.x,d.y,d.z);break;case t.length-1:o.push(f.x,f.y,f.z);break;default:m=t[e+1].x-t[e].x,g=t[e+1].y-t[e].y,d.x=1*g,d.y=-m,d.z=0*g,p.copy(d),d.x+=f.x,d.y+=f.y,d.z+=f.z,d.normalize(),o.push(d.x,d.y,d.z),f.copy(p)}for(let i=0;i<=e;i++){const d=n+i*u*r,p=Math.sin(d),f=Math.cos(d);for(let n=0;n<=t.length-1;n++){c.x=t[n].x*p,c.y=t[n].y,c.z=t[n].x*f,s.push(c.x,c.y,c.z),h.x=i/e,h.y=n/(t.length-1),a.push(h.x,h.y);const r=o[3*n+0]*p,u=o[3*n+1],d=o[3*n+0]*f;l.push(r,u,d)}}for(let n=0;n<e;n++)for(let e=0;e<t.length-1;e++){const r=e+n*t.length,s=r,a=r+t.length,o=r+t.length+1,l=r+1;i.push(s,a,l),i.push(o,l,a)}this.setIndex(i),this.setAttribute("position",new Ms(s,3)),this.setAttribute("uv",new Ms(a,2)),this.setAttribute("normal",new Ms(l,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Su(t.points,t.segments,t.phiStart,t.phiLength)}}class Tu extends ml{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Tu(t.radius,t.detail)}}class Mu extends Ds{constructor(t=1,e=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:r};const i=t/2,s=e/2,a=Math.floor(n),o=Math.floor(r),l=a+1,u=o+1,c=t/a,h=e/o,d=[],p=[],f=[],m=[];for(let t=0;t<u;t++){const e=t*h-s;for(let n=0;n<l;n++){const r=n*c-i;p.push(r,-e,0),f.push(0,0,1),m.push(n/a),m.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<a;e++){const n=e+l*t,r=e+l*(t+1),i=e+1+l*(t+1),s=e+1+l*t;d.push(n,r,s),d.push(r,i,s)}this.setIndex(d),this.setAttribute("position",new Ms(p,3)),this.setAttribute("normal",new Ms(f,3)),this.setAttribute("uv",new Ms(m,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Mu(t.width,t.height,t.widthSegments,t.heightSegments)}}class Eu extends Ds{constructor(t=.5,e=1,n=32,r=1,i=0,s=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:s},n=Math.max(3,n);const a=[],o=[],l=[],u=[];let c=t;const h=(e-t)/(r=Math.max(1,r)),d=new sr,p=new rr;for(let t=0;t<=r;t++){for(let t=0;t<=n;t++){const r=i+t/n*s;d.x=c*Math.cos(r),d.y=c*Math.sin(r),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/e+1)/2,p.y=(d.y/e+1)/2,u.push(p.x,p.y)}c+=h}for(let t=0;t<r;t++){const e=t*(n+1);for(let t=0;t<n;t++){const r=t+e,i=r,s=r+n+1,o=r+n+2,l=r+1;a.push(i,s,l),a.push(s,o,l)}}this.setIndex(a),this.setAttribute("position",new Ms(o,3)),this.setAttribute("normal",new Ms(l,3)),this.setAttribute("uv",new Ms(u,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Eu(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class Iu extends Ds{constructor(t=new Gl([new rr(0,.5),new rr(-.5,-.5),new rr(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],r=[],i=[],s=[];let a=0,o=0;if(!1===Array.isArray(t))l(t);else for(let e=0;e<t.length;e++)l(t[e]),this.addGroup(a,o,e),a+=o,o=0;function l(t){const a=r.length/3,l=t.extractPoints(e);let u=l.shape;const c=l.holes;!1===xu.isClockWise(u)&&(u=u.reverse());for(let t=0,e=c.length;t<e;t++){const e=c[t];!0===xu.isClockWise(e)&&(c[t]=e.reverse())}const h=xu.triangulateShape(u,c);for(let t=0,e=c.length;t<e;t++){const e=c[t];u=u.concat(e)}for(let t=0,e=u.length;t<e;t++){const e=u[t];r.push(e.x,e.y,0),i.push(0,0,1),s.push(e.x,e.y)}for(let t=0,e=h.length;t<e;t++){const e=h[t],r=e[0]+a,i=e[1]+a,s=e[2]+a;n.push(r,i,s),o+=3}}this.setIndex(n),this.setAttribute("position",new Ms(r,3)),this.setAttribute("normal",new Ms(i,3)),this.setAttribute("uv",new Ms(s,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,r=t.length;n<r;n++){const r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}static fromJSON(t,e){const n=[];for(let r=0,i=t.shapes.length;r<i;r++){const i=e[t.shapes[r]];n.push(i)}return new Iu(n,t.curveSegments)}}class Cu extends Ds{constructor(t=1,e=32,n=16,r=0,i=2*Math.PI,s=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:r,phiLength:i,thetaStart:s,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const o=Math.min(s+a,Math.PI);let l=0;const u=[],c=new sr,h=new sr,d=[],p=[],f=[],m=[];for(let d=0;d<=n;d++){const g=[],x=d/n;let y=0;0===d&&0===s?y=.5/e:d===n&&o===Math.PI&&(y=-.5/e);for(let n=0;n<=e;n++){const o=n/e;c.x=-t*Math.cos(r+o*i)*Math.sin(s+x*a),c.y=t*Math.cos(s+x*a),c.z=t*Math.sin(r+o*i)*Math.sin(s+x*a),p.push(c.x,c.y,c.z),h.copy(c).normalize(),f.push(h.x,h.y,h.z),m.push(o+y,1-x),g.push(l++)}u.push(g)}for(let t=0;t<n;t++)for(let r=0;r<e;r++){const e=u[t][r+1],i=u[t][r],a=u[t+1][r],l=u[t+1][r+1];(0!==t||s>0)&&d.push(e,i,l),(t!==n-1||o<Math.PI)&&d.push(i,a,l)}this.setIndex(d),this.setAttribute("position",new Ms(p,3)),this.setAttribute("normal",new Ms(f,3)),this.setAttribute("uv",new Ms(m,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Cu(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class ku extends ml{constructor(t=1,e=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new ku(t.radius,t.detail)}}class Au extends Ds{constructor(t=1,e=.4,n=12,r=48,i=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:r,arc:i},n=Math.floor(n),r=Math.floor(r);const s=[],a=[],o=[],l=[],u=new sr,c=new sr,h=new sr;for(let s=0;s<=n;s++)for(let d=0;d<=r;d++){const p=d/r*i,f=s/n*Math.PI*2;c.x=(t+e*Math.cos(f))*Math.cos(p),c.y=(t+e*Math.cos(f))*Math.sin(p),c.z=e*Math.sin(f),a.push(c.x,c.y,c.z),u.x=t*Math.cos(p),u.y=t*Math.sin(p),h.subVectors(c,u).normalize(),o.push(h.x,h.y,h.z),l.push(d/r),l.push(s/n)}for(let t=1;t<=n;t++)for(let e=1;e<=r;e++){const n=(r+1)*t+e-1,i=(r+1)*(t-1)+e-1,a=(r+1)*(t-1)+e,o=(r+1)*t+e;s.push(n,i,o),s.push(i,a,o)}this.setIndex(s),this.setAttribute("position",new Ms(a,3)),this.setAttribute("normal",new Ms(o,3)),this.setAttribute("uv",new Ms(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Au(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class Ru extends Ds{constructor(t=1,e=.4,n=64,r=8,i=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:r,p:i,q:s},n=Math.floor(n),r=Math.floor(r);const a=[],o=[],l=[],u=[],c=new sr,h=new sr,d=new sr,p=new sr,f=new sr,m=new sr,g=new sr;for(let a=0;a<=n;++a){const y=a/n*i*Math.PI*2;x(y,i,s,t,d),x(y+.01,i,s,t,p),m.subVectors(p,d),g.addVectors(p,d),f.crossVectors(m,g),g.crossVectors(f,m),f.normalize(),g.normalize();for(let t=0;t<=r;++t){const i=t/r*Math.PI*2,s=-e*Math.cos(i),p=e*Math.sin(i);c.x=d.x+(s*g.x+p*f.x),c.y=d.y+(s*g.y+p*f.y),c.z=d.z+(s*g.z+p*f.z),o.push(c.x,c.y,c.z),h.subVectors(c,d).normalize(),l.push(h.x,h.y,h.z),u.push(a/n),u.push(t/r)}}for(let t=1;t<=n;t++)for(let e=1;e<=r;e++){const n=(r+1)*(t-1)+(e-1),i=(r+1)*t+(e-1),s=(r+1)*t+e,o=(r+1)*(t-1)+e;a.push(n,i,o),a.push(i,s,o)}function x(t,e,n,r,i){const s=Math.cos(t),a=Math.sin(t),o=n/e*t,l=Math.cos(o);i.x=r*(2+l)*.5*s,i.y=r*(2+l)*a*.5,i.z=r*Math.sin(o)*.5}this.setIndex(a),this.setAttribute("position",new Ms(o,3)),this.setAttribute("normal",new Ms(l,3)),this.setAttribute("uv",new Ms(u,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ru(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class Nu extends Ds{constructor(t=new Ul(new sr(-1,-1,0),new sr(-1,1,0),new sr(1,1,0)),e=64,n=1,r=8,i=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:r,closed:i};const s=t.computeFrenetFrames(e,i);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;const a=new sr,o=new sr,l=new rr;let u=new sr;const c=[],h=[],d=[],p=[];function f(i){u=t.getPointAt(i/e,u);const l=s.normals[i],d=s.binormals[i];for(let t=0;t<=r;t++){const e=t/r*Math.PI*2,i=Math.sin(e),s=-Math.cos(e);o.x=s*l.x+i*d.x,o.y=s*l.y+i*d.y,o.z=s*l.z+i*d.z,o.normalize(),h.push(o.x,o.y,o.z),a.x=u.x+n*o.x,a.y=u.y+n*o.y,a.z=u.z+n*o.z,c.push(a.x,a.y,a.z)}}!function(){for(let t=0;t<e;t++)f(t);f(!1===i?e:0),function(){for(let t=0;t<=e;t++)for(let n=0;n<=r;n++)l.x=t/e,l.y=n/r,d.push(l.x,l.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=r;e++){const n=(r+1)*(t-1)+(e-1),i=(r+1)*t+(e-1),s=(r+1)*t+e,a=(r+1)*(t-1)+e;p.push(n,i,a),p.push(i,s,a)}}()}(),this.setIndex(p),this.setAttribute("position",new Ms(c,3)),this.setAttribute("normal",new Ms(h,3)),this.setAttribute("uv",new Ms(d,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new Nu((new Bl[t.path.type]).fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class Du extends Ds{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},null!==t){const e=[],n=new Set,r=new sr,i=new sr;if(null!==t.index){const s=t.attributes.position,a=t.index;let o=t.groups;0===o.length&&(o=[{start:0,count:a.count,materialIndex:0}]);for(let t=0,l=o.length;t<l;++t){const l=o[t],u=l.start;for(let t=u,o=u+l.count;t<o;t+=3)for(let o=0;o<3;o++){const l=a.getX(t+o),u=a.getX(t+(o+1)%3);r.fromBufferAttribute(s,l),i.fromBufferAttribute(s,u),!0===Lu(r,i,n)&&(e.push(r.x,r.y,r.z),e.push(i.x,i.y,i.z))}}}else{const s=t.attributes.position;for(let t=0,a=s.count/3;t<a;t++)for(let a=0;a<3;a++){const o=3*t+a,l=3*t+(a+1)%3;r.fromBufferAttribute(s,o),i.fromBufferAttribute(s,l),!0===Lu(r,i,n)&&(e.push(r.x,r.y,r.z),e.push(i.x,i.y,i.z))}}this.setAttribute("position",new Ms(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function Lu(t,e,n){const r=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`;return!0!==n.has(r)&&!0!==n.has(i)&&(n.add(r),n.add(i),!0)}var Fu=Object.freeze({__proto__:null,BoxGeometry:qs,CapsuleGeometry:hl,CircleGeometry:dl,ConeGeometry:fl,CylinderGeometry:pl,DodecahedronGeometry:gl,EdgesGeometry:wl,ExtrudeGeometry:bu,IcosahedronGeometry:_u,LatheGeometry:Su,OctahedronGeometry:Tu,PlaneGeometry:Mu,PolyhedronGeometry:ml,RingGeometry:Eu,ShapeGeometry:Iu,SphereGeometry:Cu,TetrahedronGeometry:ku,TorusGeometry:Au,TorusKnotGeometry:Ru,TubeGeometry:Nu,WireframeGeometry:Du});class Pu extends as{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new rs(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class Ou extends Js{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class $u extends as{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new rs(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new rs(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ze,this.normalScale=new rr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new wi,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Uu extends $u{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new rr(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Zn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new rs(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new rs(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new rs(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class zu extends as{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new rs(16777215),this.specular=new rs(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new rs(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ze,this.normalScale=new rr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new wi,this.combine=tt,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Bu extends as{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new rs(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new rs(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ze,this.normalScale=new rr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class Vu extends as{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ze,this.normalScale=new rr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class Wu extends as{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new rs(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new rs(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ze,this.normalScale=new rr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new wi,this.combine=tt,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Gu extends as{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=qe,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Hu extends as{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}class ju extends as{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new rs(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ze,this.normalScale=new rr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class qu extends Po{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function Xu(t,e){return t&&t.constructor!==e?"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t):t}function Ku(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}function Yu(t){const e=t.length,n=new Array(e);for(let t=0;t!==e;++t)n[t]=t;return n.sort(function(e,n){return t[e]-t[n]}),n}function Zu(t,e,n){const r=t.length,i=new t.constructor(r);for(let s=0,a=0;a!==r;++s){const r=n[s]*e;for(let n=0;n!==e;++n)i[a++]=t[r+n]}return i}function Ju(t,e,n,r){let i=1,s=t[0];for(;void 0!==s&&void 0===s[r];)s=t[i++];if(void 0===s)return;let a=s[r];if(void 0!==a)if(Array.isArray(a))do{a=s[r],void 0!==a&&(e.push(s.time),n.push(...a)),s=t[i++]}while(void 0!==s);else if(void 0!==a.toArray)do{a=s[r],void 0!==a&&(e.push(s.time),a.toArray(n,n.length)),s=t[i++]}while(void 0!==s);else do{a=s[r],void 0!==a&&(e.push(s.time),n.push(a)),s=t[i++]}while(void 0!==s)}class Qu{static convertArray(t,e){return Xu(t,e)}static isTypedArray(t){return Ku(t)}static getKeyframeOrder(t){return Yu(t)}static sortedArray(t,e,n){return Zu(t,e,n)}static flattenJSON(t,e,n,r){Ju(t,e,n,r)}static subclip(t,e,n,r,i=30){return function(t,e,n,r,i=30){const s=t.clone();s.name=e;const a=[];for(let t=0;t<s.tracks.length;++t){const e=s.tracks[t],o=e.getValueSize(),l=[],u=[];for(let t=0;t<e.times.length;++t){const s=e.times[t]*i;if(!(s<n||s>=r)){l.push(e.times[t]);for(let n=0;n<o;++n)u.push(e.values[t*o+n])}}0!==l.length&&(e.times=Xu(l,e.times.constructor),e.values=Xu(u,e.values.constructor),a.push(e))}s.tracks=a;let o=1/0;for(let t=0;t<s.tracks.length;++t)o>s.tracks[t].times[0]&&(o=s.tracks[t].times[0]);for(let t=0;t<s.tracks.length;++t)s.tracks[t].shift(-1*o);return s.resetDuration(),s}(t,e,n,r,i)}static makeClipAdditive(t,e=0,n=t,r=30){return function(t,e=0,n=t,r=30){r<=0&&(r=30);const i=n.tracks.length,s=e/r;for(let e=0;e<i;++e){const r=n.tracks[e],i=r.ValueTypeName;if("bool"===i||"string"===i)continue;const a=t.tracks.find(function(t){return t.name===r.name&&t.ValueTypeName===i});if(void 0===a)continue;let o=0;const l=r.getValueSize();r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=l/3);let u=0;const c=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=c/3);const h=r.times.length-1;let d;if(s<=r.times[0]){const t=o,e=l-o;d=r.values.slice(t,e)}else if(s>=r.times[h]){const t=h*l+o,e=t+l-o;d=r.values.slice(t,e)}else{const t=r.createInterpolant(),e=o,n=l-o;t.evaluate(s),d=t.resultBuffer.slice(e,n)}"quaternion"===i&&(new ir).fromArray(d).normalize().conjugate().toArray(d);const p=a.times.length;for(let t=0;t<p;++t){const e=t*c+u;if("quaternion"===i)ir.multiplyQuaternionsFlat(a.values,e,d,0,a.values,e);else{const t=c-2*u;for(let n=0;n<t;++n)a.values[e+n]-=d[n]}}}return t.blendMode=We,t}(t,e,n,r)}}class tc{constructor(t,e,n,r){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,r=e[n],i=e[n-1];t:{e:{let s;n:{r:if(!(t<r)){for(let s=n+2;;){if(void 0===r){if(t<i)break r;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===s)break;if(i=r,r=e[++n],t<r)break e}s=e.length;break n}if(!(t>=i)){const a=e[1];t<a&&(n=2,i=a);for(let s=n-2;;){if(void 0===i)return this._cachedIndex=0,this.copySampleValue_(0);if(n===s)break;if(r=i,i=e[--n-1],t>=i)break e}s=n,n=0;break n}break t}for(;n<s;){const r=n+s>>>1;t<e[r]?s=r:n=r+1}if(r=e[n],i=e[n-1],void 0===i)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===r)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,t,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=t*r;for(let t=0;t!==r;++t)e[t]=n[i+t];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class ec extends tc{constructor(t,e,n,r){super(t,e,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ue,endingEnd:Ue}}intervalChanged_(t,e,n){const r=this.parameterPositions;let i=t-2,s=t+1,a=r[i],o=r[s];if(void 0===a)switch(this.getSettings_().endingStart){case ze:i=t,a=2*e-n;break;case Be:i=r.length-2,a=e+r[i]-r[i+1];break;default:i=t,a=n}if(void 0===o)switch(this.getSettings_().endingEnd){case ze:s=t,o=2*n-e;break;case Be:s=1,o=n+r[1]-r[0];break;default:s=t-1,o=e}const l=.5*(n-e),u=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(o-n),this._offsetPrev=i*u,this._offsetNext=s*u}interpolate_(t,e,n,r){const i=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,u=this._offsetPrev,c=this._offsetNext,h=this._weightPrev,d=this._weightNext,p=(n-e)/(r-e),f=p*p,m=f*p,g=-h*m+2*h*f-h*p,x=(1+h)*m+(-1.5-2*h)*f+(-.5+h)*p+1,y=(-1-d)*m+(1.5+d)*f+.5*p,v=d*m-d*f;for(let t=0;t!==a;++t)i[t]=g*s[u+t]+x*s[l+t]+y*s[o+t]+v*s[c+t];return i}}class nc extends tc{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const i=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,u=(n-e)/(r-e),c=1-u;for(let t=0;t!==a;++t)i[t]=s[l+t]*c+s[o+t]*u;return i}}class rc extends tc{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t){return this.copySampleValue_(t-1)}}class ic{constructor(t,e,n,r){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Xu(e,this.TimeBufferType),this.values=Xu(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:Xu(t.times,Array),values:Xu(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new rc(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new nc(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new ec(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Pe:e=this.InterpolantFactoryMethodDiscrete;break;case Oe:e=this.InterpolantFactoryMethodLinear;break;case $e:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Pe;case this.InterpolantFactoryMethodLinear:return Oe;case this.InterpolantFactoryMethodSmooth:return $e}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]*=t}return this}trim(t,e){const n=this.times,r=n.length;let i=0,s=r-1;for(;i!==r&&n[i]<t;)++i;for(;-1!==s&&n[s]>e;)--s;if(++s,0!==i||s!==r){i>=s&&(s=Math.max(s,1),i=s-1);const t=this.getValueSize();this.times=n.slice(i,s),this.values=this.values.slice(i*t,s*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,r=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let s=null;for(let e=0;e!==i;e++){const r=n[e];if("number"==typeof r&&isNaN(r)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,r),t=!1;break}if(null!==s&&s>r){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,r,s),t=!1;break}s=r}if(void 0!==r&&Ku(r))for(let e=0,n=r.length;e!==n;++e){const n=r[e];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,n),t=!1;break}}return t}optimize(){const t=this.times.slice(),e=this.values.slice(),n=this.getValueSize(),r=this.getInterpolation()===$e,i=t.length-1;let s=1;for(let a=1;a<i;++a){let i=!1;const o=t[a];if(o!==t[a+1]&&(1!==a||o!==t[0]))if(r)i=!0;else{const t=a*n,r=t-n,s=t+n;for(let a=0;a!==n;++a){const n=e[t+a];if(n!==e[r+a]||n!==e[s+a]){i=!0;break}}}if(i){if(a!==s){t[s]=t[a];const r=a*n,i=s*n;for(let t=0;t!==n;++t)e[i+t]=e[r+t]}++s}}if(i>0){t[s]=t[i];for(let t=i*n,r=s*n,a=0;a!==n;++a)e[r+a]=e[t+a];++s}return s!==t.length?(this.times=t.slice(0,s),this.values=e.slice(0,s*n)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}ic.prototype.ValueTypeName="",ic.prototype.TimeBufferType=Float32Array,ic.prototype.ValueBufferType=Float32Array,ic.prototype.DefaultInterpolation=Oe;class sc extends ic{constructor(t,e,n){super(t,e,n)}}sc.prototype.ValueTypeName="bool",sc.prototype.ValueBufferType=Array,sc.prototype.DefaultInterpolation=Pe,sc.prototype.InterpolantFactoryMethodLinear=void 0,sc.prototype.InterpolantFactoryMethodSmooth=void 0;class ac extends ic{constructor(t,e,n,r){super(t,e,n,r)}}ac.prototype.ValueTypeName="color";class oc extends ic{constructor(t,e,n,r){super(t,e,n,r)}}oc.prototype.ValueTypeName="number";class lc extends tc{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const i=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(n-e)/(r-e);let l=t*a;for(let t=l+a;l!==t;l+=4)ir.slerpFlat(i,0,s,l-a,s,l,o);return i}}class uc extends ic{constructor(t,e,n,r){super(t,e,n,r)}InterpolantFactoryMethodLinear(t){return new lc(this.times,this.values,this.getValueSize(),t)}}uc.prototype.ValueTypeName="quaternion",uc.prototype.InterpolantFactoryMethodSmooth=void 0;class cc extends ic{constructor(t,e,n){super(t,e,n)}}cc.prototype.ValueTypeName="string",cc.prototype.ValueBufferType=Array,cc.prototype.DefaultInterpolation=Pe,cc.prototype.InterpolantFactoryMethodLinear=void 0,cc.prototype.InterpolantFactoryMethodSmooth=void 0;class hc extends ic{constructor(t,e,n,r){super(t,e,n,r)}}hc.prototype.ValueTypeName="vector";class dc{constructor(t="",e=-1,n=[],r=Ve){this.name=t,this.tracks=n,this.duration=e,this.blendMode=r,this.uuid=Yn(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,r=1/(t.fps||1);for(let t=0,i=n.length;t!==i;++t)e.push(pc(n[t]).scale(r));const i=new this(t.name,t.duration,e,t.blendMode);return i.uuid=t.uuid,i}static toJSON(t){const e=[],n=t.tracks,r={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,r=n.length;t!==r;++t)e.push(ic.toJSON(n[t]));return r}static CreateFromMorphTargetSequence(t,e,n,r){const i=e.length,s=[];for(let t=0;t<i;t++){let a=[],o=[];a.push((t+i-1)%i,t,(t+1)%i),o.push(0,1,0);const l=Yu(a);a=Zu(a,1,l),o=Zu(o,1,l),r||0!==a[0]||(a.push(i),o.push(o[0])),s.push(new oc(".morphTargetInfluences["+e[t].name+"]",a,o).scale(1/n))}return new this(t,-1,s)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const r={},i=/^([\w-]*?)([\d]+)$/;for(let e=0,n=t.length;e<n;e++){const n=t[e],s=n.name.match(i);if(s&&s.length>1){const t=s[1];let e=r[t];e||(r[t]=e=[]),e.push(n)}}const s=[];for(const t in r)s.push(this.CreateFromMorphTargetSequence(t,r[t],e,n));return s}static parseAnimation(t,e){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,r,i){if(0!==n.length){const s=[],a=[];Ju(n,s,a,r),0!==s.length&&i.push(new t(e,s,a))}},r=[],i=t.name||"default",s=t.fps||30,a=t.blendMode;let o=t.length||-1;const l=t.hierarchy||[];for(let t=0;t<l.length;t++){const i=l[t].keys;if(i&&0!==i.length)if(i[0].morphTargets){const t={};let e;for(e=0;e<i.length;e++)if(i[e].morphTargets)for(let n=0;n<i[e].morphTargets.length;n++)t[i[e].morphTargets[n]]=-1;for(const n in t){const t=[],s=[];for(let r=0;r!==i[e].morphTargets.length;++r){const r=i[e];t.push(r.time),s.push(r.morphTarget===n?1:0)}r.push(new oc(".morphTargetInfluence["+n+"]",t,s))}o=t.length*s}else{const s=".bones["+e[t].name+"]";n(hc,s+".position",i,"pos",r),n(uc,s+".quaternion",i,"rot",r),n(hc,s+".scale",i,"scl",r)}}return 0===r.length?null:new this(i,o,r,a)}resetDuration(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function pc(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return oc;case"vector":case"vector2":case"vector3":case"vector4":return hc;case"color":return ac;case"quaternion":return uc;case"bool":case"boolean":return sc;case"string":return cc}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];Ju(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const fc={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class mc{constructor(t,e,n){const r=this;let i,s=!1,a=0,o=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===s&&void 0!==r.onStart&&r.onStart(t,a,o),s=!0},this.itemEnd=function(t){a++,void 0!==r.onProgress&&r.onProgress(t,a,o),a===o&&(s=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(t){void 0!==r.onError&&r.onError(t)},this.resolveURL=function(t){return i?i(t):t},this.setURLModifier=function(t){return i=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=l.length;e<n;e+=2){const n=l[e],r=l[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return r}return null}}}const gc=new mc;class xc{constructor(t){this.manager=void 0!==t?t:gc,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(r,i){n.load(t,r,e,i)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}xc.DEFAULT_MATERIAL_NAME="__DEFAULT";const yc={};class vc extends Error{constructor(t,e){super(t),this.response=e}}class bc extends xc{constructor(t){super(t),this.mimeType="",this.responseType=""}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=fc.get(t);if(void 0!==i)return this.manager.itemStart(t),setTimeout(()=>{e&&e(i),this.manager.itemEnd(t)},0),i;if(void 0!==yc[t])return void yc[t].push({onLoad:e,onProgress:n,onError:r});yc[t]=[],yc[t].push({onLoad:e,onProgress:n,onError:r});const s=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,o=this.responseType;fetch(s).then(e=>{if(200===e.status||0===e.status){if(0===e.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===e.body||void 0===e.body.getReader)return e;const n=yc[t],r=e.body.getReader(),i=e.headers.get("X-File-Size")||e.headers.get("Content-Length"),s=i?parseInt(i):0,a=0!==s;let o=0;const l=new ReadableStream({start(t){!function e(){r.read().then(({done:r,value:i})=>{if(r)t.close();else{o+=i.byteLength;const r=new ProgressEvent("progress",{lengthComputable:a,loaded:o,total:s});for(let t=0,e=n.length;t<e;t++){const e=n[t];e.onProgress&&e.onProgress(r)}t.enqueue(i),e()}},e=>{t.error(e)})}()}});return new Response(l)}throw new vc(`fetch for "${e.url}" responded with ${e.status}: ${e.statusText}`,e)}).then(t=>{switch(o){case"arraybuffer":return t.arrayBuffer();case"blob":return t.blob();case"document":return t.text().then(t=>(new DOMParser).parseFromString(t,a));case"json":return t.json();default:if(""===a)return t.text();{const e=/charset="?([^;"\s]*)"?/i.exec(a),n=e&&e[1]?e[1].toLowerCase():void 0,r=new TextDecoder(n);return t.arrayBuffer().then(t=>r.decode(t))}}}).then(e=>{fc.add(t,e);const n=yc[t];delete yc[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onLoad&&r.onLoad(e)}}).catch(e=>{const n=yc[t];if(void 0===n)throw this.manager.itemError(t),e;delete yc[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onError&&r.onError(e)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class wc extends xc{constructor(t){super(t)}load(t,e,n,r){const i=this,s=new bc(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,function(n){try{e(i.parse(JSON.parse(n)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}},n,r)}parse(t){const e=[];for(let n=0;n<t.length;n++){const r=dc.parse(t[n]);e.push(r)}return e}}class _c extends xc{constructor(t){super(t)}load(t,e,n,r){const i=this,s=[],a=new al,o=new bc(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(i.withCredentials);let l=0;function u(u){o.load(t[u],function(t){const n=i.parse(t,!0);s[u]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},l+=1,6===l&&(1===n.mipmapCount&&(a.minFilter=It),a.image=s,a.format=n.format,a.needsUpdate=!0,e&&e(a))},n,r)}if(Array.isArray(t))for(let e=0,n=t.length;e<n;++e)u(e);else o.load(t,function(t){const n=i.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){s[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)s[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),s[e].format=n.format,s[e].width=n.width,s[e].height=n.height}a.image=s}else a.image.width=n.width,a.image.height=n.height,a.mipmaps=n.mipmaps;1===n.mipmapCount&&(a.minFilter=It),a.format=n.format,a.needsUpdate=!0,e&&e(a)},n,r);return a}}class Sc extends xc{constructor(t){super(t)}load(t,e,n,r){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,s=fc.get(t);if(void 0!==s)return i.manager.itemStart(t),setTimeout(function(){e&&e(s),i.manager.itemEnd(t)},0),s;const a=pr("img");function o(){u(),fc.add(t,this),e&&e(this),i.manager.itemEnd(t)}function l(e){u(),r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)}function u(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),"data:"!==t.slice(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),i.manager.itemStart(t),a.src=t,a}}class Tc extends xc{constructor(t){super(t)}load(t,e,n,r){const i=new aa;i.colorSpace=tn;const s=new Sc(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let a=0;function o(n){s.load(t[n],function(t){i.images[n]=t,a++,6===a&&(i.needsUpdate=!0,e&&e(i))},void 0,r)}for(let e=0;e<t.length;++e)o(e);return i}}class Mc extends xc{constructor(t){super(t)}load(t,e,n,r){const i=this,s=new qa,a=new bc(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(i.withCredentials),a.load(t,function(t){let n;try{n=i.parse(t)}catch(t){if(void 0===r)return void console.error(t);r(t)}void 0!==n.image?s.image=n.image:void 0!==n.data&&(s.image.width=n.width,s.image.height=n.height,s.image.data=n.data),s.wrapS=void 0!==n.wrapS?n.wrapS:bt,s.wrapT=void 0!==n.wrapT?n.wrapT:bt,s.magFilter=void 0!==n.magFilter?n.magFilter:It,s.minFilter=void 0!==n.minFilter?n.minFilter:It,s.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.colorSpace&&(s.colorSpace=n.colorSpace),void 0!==n.flipY&&(s.flipY=n.flipY),void 0!==n.format&&(s.format=n.format),void 0!==n.type&&(s.type=n.type),void 0!==n.mipmaps&&(s.mipmaps=n.mipmaps,s.minFilter=At),1===n.mipmapCount&&(s.minFilter=It),void 0!==n.generateMipmaps&&(s.generateMipmaps=n.generateMipmaps),s.needsUpdate=!0,e&&e(s,n)},n,r),s}}class Ec extends xc{constructor(t){super(t)}load(t,e,n,r){const i=new Ar,s=new Sc(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(t,function(t){i.image=t,i.needsUpdate=!0,void 0!==e&&e(i)},n,r),i}}class Ic extends $i{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new rs(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),void 0!==this.target&&(e.object.target=this.target.uuid),e}}class Cc extends Ic{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy($i.DEFAULT_UP),this.updateMatrix(),this.groundColor=new rs(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const kc=new hi,Ac=new sr,Rc=new sr;class Nc{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new rr(512,512),this.mapType=Nt,this.map=null,this.mapPass=null,this.matrix=new hi,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new po,this._frameExtents=new rr(1,1),this._viewportCount=1,this._viewports=[new Rr(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Ac.setFromMatrixPosition(t.matrixWorld),e.position.copy(Ac),Rc.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Rc),e.updateMatrixWorld(),kc.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(kc),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(kc)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.autoUpdate=t.autoUpdate,this.needsUpdate=t.needsUpdate,this.normalBias=t.normalBias,this.blurSamples=t.blurSamples,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 1!==this.intensity&&(t.intensity=this.intensity),0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class Dc extends Nc{constructor(){super(new ra(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(t){const e=this.camera,n=2*Kn*t.angle*this.focus,r=this.mapSize.width/this.mapSize.height*this.aspect,i=t.distance||e.far;n===e.fov&&r===e.aspect&&i===e.far||(e.fov=n,e.aspect=r,e.far=i,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class Lc extends Ic{constructor(t,e,n=0,r=Math.PI/3,i=0,s=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy($i.DEFAULT_UP),this.updateMatrix(),this.target=new $i,this.distance=n,this.angle=r,this.penumbra=i,this.decay=s,this.map=null,this.shadow=new Dc}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const Fc=new hi,Pc=new sr,Oc=new sr;class $c extends Nc{constructor(){super(new ra(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new rr(4,2),this._viewportCount=6,this._viewports=[new Rr(2,1,1,1),new Rr(0,1,1,1),new Rr(3,1,1,1),new Rr(1,1,1,1),new Rr(3,0,1,1),new Rr(1,0,1,1)],this._cubeDirections=[new sr(1,0,0),new sr(-1,0,0),new sr(0,0,1),new sr(0,0,-1),new sr(0,1,0),new sr(0,-1,0)],this._cubeUps=[new sr(0,1,0),new sr(0,1,0),new sr(0,1,0),new sr(0,1,0),new sr(0,0,1),new sr(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,r=this.matrix,i=t.distance||n.far;i!==n.far&&(n.far=i,n.updateProjectionMatrix()),Pc.setFromMatrixPosition(t.matrixWorld),n.position.copy(Pc),Oc.copy(n.position),Oc.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(Oc),n.updateMatrixWorld(),r.makeTranslation(-Pc.x,-Pc.y,-Pc.z),Fc.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Fc)}}class Uc extends Ic{constructor(t,e,n=0,r=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new $c}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class zc extends Qs{constructor(t=-1,e=1,n=1,r=-1,i=.1,s=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=r,this.near=i,this.far=s,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,r,i,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let i=n-t,s=n+t,a=r+e,o=r-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=t*this.view.offsetX,s=i+t*this.view.width,a-=e*this.view.offsetY,o=a-e*this.view.height}this.projectionMatrix.makeOrthographic(i,s,a,o,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}class Bc extends Nc{constructor(){super(new zc(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Vc extends Ic{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy($i.DEFAULT_UP),this.updateMatrix(),this.target=new $i,this.shadow=new Bc}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class Wc extends Ic{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class Gc extends Ic{constructor(t,e,n=10,r=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class Hc{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new sr)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,r=t.y,i=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.282095),e.addScaledVector(s[1],.488603*r),e.addScaledVector(s[2],.488603*i),e.addScaledVector(s[3],.488603*n),e.addScaledVector(s[4],n*r*1.092548),e.addScaledVector(s[5],r*i*1.092548),e.addScaledVector(s[6],.315392*(3*i*i-1)),e.addScaledVector(s[7],n*i*1.092548),e.addScaledVector(s[8],.546274*(n*n-r*r)),e}getIrradianceAt(t,e){const n=t.x,r=t.y,i=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.886227),e.addScaledVector(s[1],1.023328*r),e.addScaledVector(s[2],1.023328*i),e.addScaledVector(s[3],1.023328*n),e.addScaledVector(s[4],.858086*n*r),e.addScaledVector(s[5],.858086*r*i),e.addScaledVector(s[6],.743125*i*i-.247708),e.addScaledVector(s[7],.858086*n*i),e.addScaledVector(s[8],.429043*(n*n-r*r)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(t,e+3*r);return this}toArray(t=[],e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(t,e+3*r);return t}static getBasisAt(t,e){const n=t.x,r=t.y,i=t.z;e[0]=.282095,e[1]=.488603*r,e[2]=.488603*i,e[3]=.488603*n,e[4]=1.092548*n*r,e[5]=1.092548*r*i,e[6]=.315392*(3*i*i-1),e[7]=1.092548*n*i,e[8]=.546274*(n*n-r*r)}}class jc extends Ic{constructor(t=new Hc,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class qc extends xc{constructor(t){super(t),this.textures={}}load(t,e,n,r){const i=this,s=new bc(i.manager);s.setPath(i.path),s.setRequestHeader(i.requestHeader),s.setWithCredentials(i.withCredentials),s.load(t,function(n){try{e(i.parse(JSON.parse(n)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}},n,r)}parse(t){const e=this.textures;function n(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}const r=this.createMaterialFromType(t.type);if(void 0!==t.uuid&&(r.uuid=t.uuid),void 0!==t.name&&(r.name=t.name),void 0!==t.color&&void 0!==r.color&&r.color.setHex(t.color),void 0!==t.roughness&&(r.roughness=t.roughness),void 0!==t.metalness&&(r.metalness=t.metalness),void 0!==t.sheen&&(r.sheen=t.sheen),void 0!==t.sheenColor&&(r.sheenColor=(new rs).setHex(t.sheenColor)),void 0!==t.sheenRoughness&&(r.sheenRoughness=t.sheenRoughness),void 0!==t.emissive&&void 0!==r.emissive&&r.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==r.specular&&r.specular.setHex(t.specular),void 0!==t.specularIntensity&&(r.specularIntensity=t.specularIntensity),void 0!==t.specularColor&&void 0!==r.specularColor&&r.specularColor.setHex(t.specularColor),void 0!==t.shininess&&(r.shininess=t.shininess),void 0!==t.clearcoat&&(r.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(r.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.dispersion&&(r.dispersion=t.dispersion),void 0!==t.iridescence&&(r.iridescence=t.iridescence),void 0!==t.iridescenceIOR&&(r.iridescenceIOR=t.iridescenceIOR),void 0!==t.iridescenceThicknessRange&&(r.iridescenceThicknessRange=t.iridescenceThicknessRange),void 0!==t.transmission&&(r.transmission=t.transmission),void 0!==t.thickness&&(r.thickness=t.thickness),void 0!==t.attenuationDistance&&(r.attenuationDistance=t.attenuationDistance),void 0!==t.attenuationColor&&void 0!==r.attenuationColor&&r.attenuationColor.setHex(t.attenuationColor),void 0!==t.anisotropy&&(r.anisotropy=t.anisotropy),void 0!==t.anisotropyRotation&&(r.anisotropyRotation=t.anisotropyRotation),void 0!==t.fog&&(r.fog=t.fog),void 0!==t.flatShading&&(r.flatShading=t.flatShading),void 0!==t.blending&&(r.blending=t.blending),void 0!==t.combine&&(r.combine=t.combine),void 0!==t.side&&(r.side=t.side),void 0!==t.shadowSide&&(r.shadowSide=t.shadowSide),void 0!==t.opacity&&(r.opacity=t.opacity),void 0!==t.transparent&&(r.transparent=t.transparent),void 0!==t.alphaTest&&(r.alphaTest=t.alphaTest),void 0!==t.alphaHash&&(r.alphaHash=t.alphaHash),void 0!==t.depthFunc&&(r.depthFunc=t.depthFunc),void 0!==t.depthTest&&(r.depthTest=t.depthTest),void 0!==t.depthWrite&&(r.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(r.colorWrite=t.colorWrite),void 0!==t.blendSrc&&(r.blendSrc=t.blendSrc),void 0!==t.blendDst&&(r.blendDst=t.blendDst),void 0!==t.blendEquation&&(r.blendEquation=t.blendEquation),void 0!==t.blendSrcAlpha&&(r.blendSrcAlpha=t.blendSrcAlpha),void 0!==t.blendDstAlpha&&(r.blendDstAlpha=t.blendDstAlpha),void 0!==t.blendEquationAlpha&&(r.blendEquationAlpha=t.blendEquationAlpha),void 0!==t.blendColor&&void 0!==r.blendColor&&r.blendColor.setHex(t.blendColor),void 0!==t.blendAlpha&&(r.blendAlpha=t.blendAlpha),void 0!==t.stencilWriteMask&&(r.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(r.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(r.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(r.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(r.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(r.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(r.stencilZPass=t.stencilZPass),void 0!==t.stencilWrite&&(r.stencilWrite=t.stencilWrite),void 0!==t.wireframe&&(r.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(r.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(r.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(r.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(r.rotation=t.rotation),void 0!==t.linewidth&&(r.linewidth=t.linewidth),void 0!==t.dashSize&&(r.dashSize=t.dashSize),void 0!==t.gapSize&&(r.gapSize=t.gapSize),void 0!==t.scale&&(r.scale=t.scale),void 0!==t.polygonOffset&&(r.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(r.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(r.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.dithering&&(r.dithering=t.dithering),void 0!==t.alphaToCoverage&&(r.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(r.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.forceSinglePass&&(r.forceSinglePass=t.forceSinglePass),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.toneMapped&&(r.toneMapped=t.toneMapped),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?r.vertexColors=t.vertexColors>0:r.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const e in t.uniforms){const i=t.uniforms[e];switch(r.uniforms[e]={},i.type){case"t":r.uniforms[e].value=n(i.value);break;case"c":r.uniforms[e].value=(new rs).setHex(i.value);break;case"v2":r.uniforms[e].value=(new rr).fromArray(i.value);break;case"v3":r.uniforms[e].value=(new sr).fromArray(i.value);break;case"v4":r.uniforms[e].value=(new Rr).fromArray(i.value);break;case"m3":r.uniforms[e].value=(new lr).fromArray(i.value);break;case"m4":r.uniforms[e].value=(new hi).fromArray(i.value);break;default:r.uniforms[e].value=i.value}}if(void 0!==t.defines&&(r.defines=t.defines),void 0!==t.vertexShader&&(r.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(r.fragmentShader=t.fragmentShader),void 0!==t.glslVersion&&(r.glslVersion=t.glslVersion),void 0!==t.extensions)for(const e in t.extensions)r.extensions[e]=t.extensions[e];if(void 0!==t.lights&&(r.lights=t.lights),void 0!==t.clipping&&(r.clipping=t.clipping),void 0!==t.size&&(r.size=t.size),void 0!==t.sizeAttenuation&&(r.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(r.map=n(t.map)),void 0!==t.matcap&&(r.matcap=n(t.matcap)),void 0!==t.alphaMap&&(r.alphaMap=n(t.alphaMap)),void 0!==t.bumpMap&&(r.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(r.bumpScale=t.bumpScale),void 0!==t.normalMap&&(r.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(r.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),r.normalScale=(new rr).fromArray(e)}return void 0!==t.displacementMap&&(r.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(r.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(r.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(r.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(r.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(r.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(r.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(r.specularMap=n(t.specularMap)),void 0!==t.specularIntensityMap&&(r.specularIntensityMap=n(t.specularIntensityMap)),void 0!==t.specularColorMap&&(r.specularColorMap=n(t.specularColorMap)),void 0!==t.envMap&&(r.envMap=n(t.envMap)),void 0!==t.envMapRotation&&r.envMapRotation.fromArray(t.envMapRotation),void 0!==t.envMapIntensity&&(r.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(r.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(r.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(r.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(r.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(r.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(r.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(r.gradientMap=n(t.gradientMap)),void 0!==t.clearcoatMap&&(r.clearcoatMap=n(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(r.clearcoatNormalMap=n(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(r.clearcoatNormalScale=(new rr).fromArray(t.clearcoatNormalScale)),void 0!==t.iridescenceMap&&(r.iridescenceMap=n(t.iridescenceMap)),void 0!==t.iridescenceThicknessMap&&(r.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),void 0!==t.transmissionMap&&(r.transmissionMap=n(t.transmissionMap)),void 0!==t.thicknessMap&&(r.thicknessMap=n(t.thicknessMap)),void 0!==t.anisotropyMap&&(r.anisotropyMap=n(t.anisotropyMap)),void 0!==t.sheenColorMap&&(r.sheenColorMap=n(t.sheenColorMap)),void 0!==t.sheenRoughnessMap&&(r.sheenRoughnessMap=n(t.sheenRoughnessMap)),r}setTextures(t){return this.textures=t,this}createMaterialFromType(t){return qc.createMaterialFromType(t)}static createMaterialFromType(t){return new{ShadowMaterial:Pu,SpriteMaterial:xa,RawShaderMaterial:Ou,ShaderMaterial:Js,PointsMaterial:Yo,MeshPhysicalMaterial:Uu,MeshStandardMaterial:$u,MeshPhongMaterial:zu,MeshToonMaterial:Bu,MeshNormalMaterial:Vu,MeshLambertMaterial:Wu,MeshDepthMaterial:Gu,MeshDistanceMaterial:Hu,MeshBasicMaterial:os,MeshMatcapMaterial:ju,LineDashedMaterial:qu,LineBasicMaterial:Po,Material:as}[t]}}class Xc{static extractUrlBase(t){const e=t.lastIndexOf("/");return-1===e?"./":t.slice(0,e+1)}static resolveURL(t,e){return"string"!=typeof t||""===t?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class Kc extends Ds{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class Yc extends xc{constructor(t){super(t)}load(t,e,n,r){const i=this,s=new bc(i.manager);s.setPath(i.path),s.setRequestHeader(i.requestHeader),s.setWithCredentials(i.withCredentials),s.load(t,function(n){try{e(i.parse(JSON.parse(n)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}},n,r)}parse(t){const e={},n={};function r(t,r){if(void 0!==e[r])return e[r];const i=t.interleavedBuffers[r],s=function(t,e){if(void 0!==n[e])return n[e];const r=t.arrayBuffers[e],i=new Uint32Array(r).buffer;return n[e]=i,i}(t,i.buffer),a=dr(i.type,s),o=new fa(a,i.stride);return o.uuid=i.uuid,e[r]=o,o}const i=t.isInstancedBufferGeometry?new Kc:new Ds,s=t.data.index;if(void 0!==s){const t=dr(s.type,s.array);i.setIndex(new gs(t,1))}const a=t.data.attributes;for(const e in a){const n=a[e];let s;if(n.isInterleavedBufferAttribute){const e=r(t.data,n.data);s=new ga(e,n.itemSize,n.offset,n.normalized)}else{const t=dr(n.type,n.array);s=new(n.isInstancedBufferAttribute?Za:gs)(t,n.itemSize,n.normalized)}void 0!==n.name&&(s.name=n.name),void 0!==n.usage&&s.setUsage(n.usage),i.setAttribute(e,s)}const o=t.data.morphAttributes;if(o)for(const e in o){const n=o[e],s=[];for(let e=0,i=n.length;e<i;e++){const i=n[e];let a;if(i.isInterleavedBufferAttribute){const e=r(t.data,i.data);a=new ga(e,i.itemSize,i.offset,i.normalized)}else{const t=dr(i.type,i.array);a=new gs(t,i.itemSize,i.normalized)}void 0!==i.name&&(a.name=i.name),s.push(a)}i.morphAttributes[e]=s}t.data.morphTargetsRelative&&(i.morphTargetsRelative=!0);const l=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==l)for(let t=0,e=l.length;t!==e;++t){const e=l[t];i.addGroup(e.start,e.count,e.materialIndex)}const u=t.data.boundingSphere;return void 0!==u&&(i.boundingSphere=(new ni).fromJSON(u)),t.name&&(i.name=t.name),t.userData&&(i.userData=t.userData),i}}class Zc extends xc{constructor(t){super(t)}load(t,e,n,r){const i=this,s=""===this.path?Xc.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||s;const a=new bc(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(n){let s=null;try{s=JSON.parse(n)}catch(e){return void 0!==r&&r(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}const a=s.metadata;if(void 0===a||void 0===a.type||"geometry"===a.type.toLowerCase())return void 0!==r&&r(new Error("THREE.ObjectLoader: Can't load "+t)),void console.error("THREE.ObjectLoader: Can't load "+t);i.parse(s,e)},n,r)}async loadAsync(t,e){const n=""===this.path?Xc.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||n;const r=new bc(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const i=await r.loadAsync(t,e),s=JSON.parse(i),a=s.metadata;if(void 0===a||void 0===a.type||"geometry"===a.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+t);return await this.parseAsync(s)}parse(t,e){const n=this.parseAnimations(t.animations),r=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,r),s=this.parseImages(t.images,function(){void 0!==e&&e(l)}),a=this.parseTextures(t.textures,s),o=this.parseMaterials(t.materials,a),l=this.parseObject(t.object,i,o,a,n),u=this.parseSkeletons(t.skeletons,l);if(this.bindSkeletons(l,u),this.bindLightTargets(l),void 0!==e){let t=!1;for(const e in s)if(s[e].data instanceof HTMLImageElement){t=!0;break}!1===t&&e(l)}return l}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),r=this.parseGeometries(t.geometries,n),i=await this.parseImagesAsync(t.images),s=this.parseTextures(t.textures,i),a=this.parseMaterials(t.materials,s),o=this.parseObject(t.object,r,a,s,e),l=this.parseSkeletons(t.skeletons,o);return this.bindSkeletons(o,l),this.bindLightTargets(o),o}parseShapes(t){const e={};if(void 0!==t)for(let n=0,r=t.length;n<r;n++){const r=(new Gl).fromJSON(t[n]);e[r.uuid]=r}return e}parseSkeletons(t,e){const n={},r={};if(e.traverse(function(t){t.isBone&&(r[t.uuid]=t)}),void 0!==t)for(let e=0,i=t.length;e<i;e++){const i=(new Ya).fromJSON(t[e],r);n[i.uuid]=i}return n}parseGeometries(t,e){const n={};if(void 0!==t){const r=new Yc;for(let i=0,s=t.length;i<s;i++){let s;const a=t[i];switch(a.type){case"BufferGeometry":case"InstancedBufferGeometry":s=r.parse(a);break;default:a.type in Fu?s=Fu[a.type].fromJSON(a,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${a.type}"`)}s.uuid=a.uuid,void 0!==a.name&&(s.name=a.name),void 0!==a.userData&&(s.userData=a.userData),n[a.uuid]=s}}return n}parseMaterials(t,e){const n={},r={};if(void 0!==t){const i=new qc;i.setTextures(e);for(let e=0,s=t.length;e<s;e++){const s=t[e];void 0===n[s.uuid]&&(n[s.uuid]=i.parse(s)),r[s.uuid]=n[s.uuid]}}return r}parseAnimations(t){const e={};if(void 0!==t)for(let n=0;n<t.length;n++){const r=t[n],i=dc.parse(r);e[i.uuid]=i}return e}parseImages(t,e){const n=this,r={};let i;function s(t){if("string"==typeof t){const e=t;return function(t){return n.manager.itemStart(t),i.load(t,function(){n.manager.itemEnd(t)},void 0,function(){n.manager.itemError(t),n.manager.itemEnd(t)})}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:n.resourcePath+e)}return t.data?{data:dr(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){const n=new mc(e);i=new Sc(n),i.setCrossOrigin(this.crossOrigin);for(let e=0,n=t.length;e<n;e++){const n=t[e],i=n.url;if(Array.isArray(i)){const t=[];for(let e=0,n=i.length;e<n;e++){const n=s(i[e]);null!==n&&(n instanceof HTMLImageElement?t.push(n):t.push(new qa(n.data,n.width,n.height)))}r[n.uuid]=new Er(t)}else{const t=s(n.url);r[n.uuid]=new Er(t)}}}return r}async parseImagesAsync(t){const e=this,n={};let r;async function i(t){if("string"==typeof t){const n=t,i=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n)?n:e.resourcePath+n;return await r.loadAsync(i)}return t.data?{data:dr(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){r=new Sc(this.manager),r.setCrossOrigin(this.crossOrigin);for(let e=0,r=t.length;e<r;e++){const r=t[e],s=r.url;if(Array.isArray(s)){const t=[];for(let e=0,n=s.length;e<n;e++){const n=s[e],r=await i(n);null!==r&&(r instanceof HTMLImageElement?t.push(r):t.push(new qa(r.data,r.width,r.height)))}n[r.uuid]=new Er(t)}else{const t=await i(r.url);n[r.uuid]=new Er(t)}}}return n}parseTextures(t,e){function n(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}const r={};if(void 0!==t)for(let i=0,s=t.length;i<s;i++){const s=t[i];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===e[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);const a=e[s.image],o=a.data;let l;Array.isArray(o)?(l=new aa,6===o.length&&(l.needsUpdate=!0)):(l=o&&o.data?new qa:new Ar,o&&(l.needsUpdate=!0)),l.source=a,l.uuid=s.uuid,void 0!==s.name&&(l.name=s.name),void 0!==s.mapping&&(l.mapping=n(s.mapping,Jc)),void 0!==s.channel&&(l.channel=s.channel),void 0!==s.offset&&l.offset.fromArray(s.offset),void 0!==s.repeat&&l.repeat.fromArray(s.repeat),void 0!==s.center&&l.center.fromArray(s.center),void 0!==s.rotation&&(l.rotation=s.rotation),void 0!==s.wrap&&(l.wrapS=n(s.wrap[0],Qc),l.wrapT=n(s.wrap[1],Qc)),void 0!==s.format&&(l.format=s.format),void 0!==s.internalFormat&&(l.internalFormat=s.internalFormat),void 0!==s.type&&(l.type=s.type),void 0!==s.colorSpace&&(l.colorSpace=s.colorSpace),void 0!==s.minFilter&&(l.minFilter=n(s.minFilter,th)),void 0!==s.magFilter&&(l.magFilter=n(s.magFilter,th)),void 0!==s.anisotropy&&(l.anisotropy=s.anisotropy),void 0!==s.flipY&&(l.flipY=s.flipY),void 0!==s.generateMipmaps&&(l.generateMipmaps=s.generateMipmaps),void 0!==s.premultiplyAlpha&&(l.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(l.unpackAlignment=s.unpackAlignment),void 0!==s.compareFunction&&(l.compareFunction=s.compareFunction),void 0!==s.userData&&(l.userData=s.userData),r[s.uuid]=l}return r}parseObject(t,e,n,r,i){let s,a,o;function l(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function u(t){if(void 0!==t){if(Array.isArray(t)){const e=[];for(let r=0,i=t.length;r<i;r++){const i=t[r];void 0===n[i]&&console.warn("THREE.ObjectLoader: Undefined material",i),e.push(n[i])}return e}return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),n[t]}}function c(t){return void 0===r[t]&&console.warn("THREE.ObjectLoader: Undefined texture",t),r[t]}switch(t.type){case"Scene":s=new pa,void 0!==t.background&&(Number.isInteger(t.background)?s.background=new rs(t.background):s.background=c(t.background)),void 0!==t.environment&&(s.environment=c(t.environment)),void 0!==t.fog&&("Fog"===t.fog.type?s.fog=new da(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(s.fog=new ha(t.fog.color,t.fog.density)),""!==t.fog.name&&(s.fog.name=t.fog.name)),void 0!==t.backgroundBlurriness&&(s.backgroundBlurriness=t.backgroundBlurriness),void 0!==t.backgroundIntensity&&(s.backgroundIntensity=t.backgroundIntensity),void 0!==t.backgroundRotation&&s.backgroundRotation.fromArray(t.backgroundRotation),void 0!==t.environmentIntensity&&(s.environmentIntensity=t.environmentIntensity),void 0!==t.environmentRotation&&s.environmentRotation.fromArray(t.environmentRotation);break;case"PerspectiveCamera":s=new ra(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(s.focus=t.focus),void 0!==t.zoom&&(s.zoom=t.zoom),void 0!==t.filmGauge&&(s.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(s.filmOffset=t.filmOffset),void 0!==t.view&&(s.view=Object.assign({},t.view));break;case"OrthographicCamera":s=new zc(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(s.zoom=t.zoom),void 0!==t.view&&(s.view=Object.assign({},t.view));break;case"AmbientLight":s=new Wc(t.color,t.intensity);break;case"DirectionalLight":s=new Vc(t.color,t.intensity),s.target=t.target||"";break;case"PointLight":s=new Uc(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":s=new Gc(t.color,t.intensity,t.width,t.height);break;case"SpotLight":s=new Lc(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay),s.target=t.target||"";break;case"HemisphereLight":s=new Cc(t.color,t.groundColor,t.intensity);break;case"LightProbe":s=(new jc).fromJSON(t);break;case"SkinnedMesh":a=l(t.geometry),o=u(t.material),s=new Ha(a,o),void 0!==t.bindMode&&(s.bindMode=t.bindMode),void 0!==t.bindMatrix&&s.bindMatrix.fromArray(t.bindMatrix),void 0!==t.skeleton&&(s.skeleton=t.skeleton);break;case"Mesh":a=l(t.geometry),o=u(t.material),s=new Hs(a,o);break;case"InstancedMesh":a=l(t.geometry),o=u(t.material);const e=t.count,n=t.instanceMatrix,r=t.instanceColor;s=new so(a,o,e),s.instanceMatrix=new Za(new Float32Array(n.array),16),void 0!==r&&(s.instanceColor=new Za(new Float32Array(r.array),r.itemSize));break;case"BatchedMesh":a=l(t.geometry),o=u(t.material),s=new Fo(t.maxInstanceCount,t.maxVertexCount,t.maxIndexCount,o),s.geometry=a,s.perObjectFrustumCulled=t.perObjectFrustumCulled,s.sortObjects=t.sortObjects,s._drawRanges=t.drawRanges,s._reservedRanges=t.reservedRanges,s._geometryInfo=t.geometryInfo.map(t=>{let e=null,n=null;return void 0!==t.boundingBox&&(e=(new $r).fromJSON(t.boundingBox)),void 0!==t.boundingSphere&&(n=(new ni).fromJSON(t.boundingSphere)),{...t,boundingBox:e,boundingSphere:n}}),s._instanceInfo=t.instanceInfo,s._availableInstanceIds=t._availableInstanceIds,s._availableGeometryIds=t._availableGeometryIds,s._nextIndexStart=t.nextIndexStart,s._nextVertexStart=t.nextVertexStart,s._geometryCount=t.geometryCount,s._maxInstanceCount=t.maxInstanceCount,s._maxVertexCount=t.maxVertexCount,s._maxIndexCount=t.maxIndexCount,s._geometryInitialized=t.geometryInitialized,s._matricesTexture=c(t.matricesTexture.uuid),s._indirectTexture=c(t.indirectTexture.uuid),void 0!==t.colorsTexture&&(s._colorsTexture=c(t.colorsTexture.uuid)),void 0!==t.boundingSphere&&(s.boundingSphere=(new ni).fromJSON(t.boundingSphere)),void 0!==t.boundingBox&&(s.boundingBox=(new $r).fromJSON(t.boundingBox));break;case"LOD":s=new Fa;break;case"Line":s=new Go(l(t.geometry),u(t.material));break;case"LineLoop":s=new Ko(l(t.geometry),u(t.material));break;case"LineSegments":s=new Xo(l(t.geometry),u(t.material));break;case"PointCloud":case"Points":s=new el(l(t.geometry),u(t.material));break;case"Sprite":s=new Ra(u(t.material));break;case"Group":s=new la;break;case"Bone":s=new ja;break;default:s=new $i}if(s.uuid=t.uuid,void 0!==t.name&&(s.name=t.name),void 0!==t.matrix?(s.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(s.matrixAutoUpdate=t.matrixAutoUpdate),s.matrixAutoUpdate&&s.matrix.decompose(s.position,s.quaternion,s.scale)):(void 0!==t.position&&s.position.fromArray(t.position),void 0!==t.rotation&&s.rotation.fromArray(t.rotation),void 0!==t.quaternion&&s.quaternion.fromArray(t.quaternion),void 0!==t.scale&&s.scale.fromArray(t.scale)),void 0!==t.up&&s.up.fromArray(t.up),void 0!==t.castShadow&&(s.castShadow=t.castShadow),void 0!==t.receiveShadow&&(s.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.intensity&&(s.shadow.intensity=t.shadow.intensity),void 0!==t.shadow.bias&&(s.shadow.bias=t.shadow.bias),void 0!==t.shadow.normalBias&&(s.shadow.normalBias=t.shadow.normalBias),void 0!==t.shadow.radius&&(s.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&s.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(s.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(s.visible=t.visible),void 0!==t.frustumCulled&&(s.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(s.renderOrder=t.renderOrder),void 0!==t.userData&&(s.userData=t.userData),void 0!==t.layers&&(s.layers.mask=t.layers),void 0!==t.children){const a=t.children;for(let t=0;t<a.length;t++)s.add(this.parseObject(a[t],e,n,r,i))}if(void 0!==t.animations){const e=t.animations;for(let t=0;t<e.length;t++){const n=e[t];s.animations.push(i[n])}}if("LOD"===t.type){void 0!==t.autoUpdate&&(s.autoUpdate=t.autoUpdate);const e=t.levels;for(let t=0;t<e.length;t++){const n=e[t],r=s.getObjectByProperty("uuid",n.object);void 0!==r&&s.addLevel(r,n.distance,n.hysteresis)}}return s}bindSkeletons(t,e){0!==Object.keys(e).length&&t.traverse(function(t){if(!0===t.isSkinnedMesh&&void 0!==t.skeleton){const n=e[t.skeleton];void 0===n?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",t.skeleton):t.bind(n,t.bindMatrix)}})}bindLightTargets(t){t.traverse(function(e){if(e.isDirectionalLight||e.isSpotLight){const n=e.target,r=t.getObjectByProperty("uuid",n);e.target=void 0!==r?r:new $i}})}}const Jc={UVMapping:pt,CubeReflectionMapping:ft,CubeRefractionMapping:mt,EquirectangularReflectionMapping:gt,EquirectangularRefractionMapping:xt,CubeUVReflectionMapping:yt},Qc={RepeatWrapping:vt,ClampToEdgeWrapping:bt,MirroredRepeatWrapping:wt},th={NearestFilter:_t,NearestMipmapNearestFilter:St,NearestMipmapLinearFilter:Mt,LinearFilter:It,LinearMipmapNearestFilter:Ct,LinearMipmapLinearFilter:At},eh=new WeakMap;class nh extends xc{constructor(t){super(t),this.isImageBitmapLoader=!0,"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,s=fc.get(t);if(void 0!==s)return i.manager.itemStart(t),s.then?void s.then(n=>{if(!0!==eh.has(s))return e&&e(n),i.manager.itemEnd(t),n;r&&r(eh.get(s)),i.manager.itemError(t),i.manager.itemEnd(t)}):(setTimeout(function(){e&&e(s),i.manager.itemEnd(t)},0),s);const a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",a.headers=this.requestHeader;const o=fetch(t,a).then(function(t){return t.blob()}).then(function(t){return createImageBitmap(t,Object.assign(i.options,{colorSpaceConversion:"none"}))}).then(function(n){return fc.add(t,n),e&&e(n),i.manager.itemEnd(t),n}).catch(function(e){r&&r(e),eh.set(o,e),fc.remove(t),i.manager.itemError(t),i.manager.itemEnd(t)});fc.add(t,o),i.manager.itemStart(t)}}let rh;class ih{static getContext(){return void 0===rh&&(rh=new(window.AudioContext||window.webkitAudioContext)),rh}static setContext(t){rh=t}}class sh extends xc{constructor(t){super(t)}load(t,e,n,r){const i=this,s=new bc(this.manager);function a(e){r?r(e):console.error(e),i.manager.itemError(t)}s.setResponseType("arraybuffer"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,function(t){try{const n=t.slice(0);ih.getContext().decodeAudioData(n,function(t){e(t)}).catch(a)}catch(t){a(t)}},n,r)}}const ah=new hi,oh=new hi,lh=new hi;class uh{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new ra,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new ra,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,lh.copy(t.projectionMatrix);const n=e.eyeSep/2,r=n*e.near/e.focus,i=e.near*Math.tan(Xn*e.fov*.5)/e.zoom;let s,a;oh.elements[12]=-n,ah.elements[12]=n,s=-i*e.aspect+r,a=i*e.aspect+r,lh.elements[0]=2*e.near/(a-s),lh.elements[8]=(a+s)/(a-s),this.cameraL.projectionMatrix.copy(lh),s=-i*e.aspect-r,a=i*e.aspect-r,lh.elements[0]=2*e.near/(a-s),lh.elements[8]=(a+s)/(a-s),this.cameraR.projectionMatrix.copy(lh)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(oh),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(ah)}}class ch extends ra{constructor(t=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=t}}class hh{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=dh(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=dh();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function dh(){return performance.now()}const ph=new sr,fh=new ir,mh=new sr,gh=new sr,xh=new sr;class yh extends $i{constructor(){super(),this.type="AudioListener",this.context=ih.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new hh}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(ph,fh,mh),gh.set(0,0,-1).applyQuaternion(fh),xh.set(0,1,0).applyQuaternion(fh),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(ph.x,t),e.positionY.linearRampToValueAtTime(ph.y,t),e.positionZ.linearRampToValueAtTime(ph.z,t),e.forwardX.linearRampToValueAtTime(gh.x,t),e.forwardY.linearRampToValueAtTime(gh.y,t),e.forwardZ.linearRampToValueAtTime(gh.z,t),e.upX.linearRampToValueAtTime(xh.x,t),e.upY.linearRampToValueAtTime(xh.y,t),e.upZ.linearRampToValueAtTime(xh.z,t)}else e.setPosition(ph.x,ph.y,ph.z),e.setOrientation(gh.x,gh.y,gh.z,xh.x,xh.y,xh.z)}}class vh extends $i{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(t=0){if(!1!==this.hasPlaybackControl)return this._progress=0,null!==this.source&&(this.source.stop(this.context.currentTime+t),this.source.onended=null),this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(!1!==this._connected){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){return this.detune=t,!0===this.isPlaying&&void 0!==this.source.detune&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}copy(t,e){return super.copy(t,e),"buffer"!==t.sourceType?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=t.autoplay,this.buffer=t.buffer,this.detune=t.detune,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.offset=t.offset,this.duration=t.duration,this.playbackRate=t.playbackRate,this.hasPlaybackControl=t.hasPlaybackControl,this.sourceType=t.sourceType,this.filters=t.filters.slice(),this)}clone(t){return new this.constructor(this.listener).copy(this,t)}}const bh=new sr,wh=new ir,_h=new sr,Sh=new sr;class Th extends vh{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(bh,wh,_h),Sh.set(0,0,1).applyQuaternion(wh);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(bh.x,t),e.positionY.linearRampToValueAtTime(bh.y,t),e.positionZ.linearRampToValueAtTime(bh.z,t),e.orientationX.linearRampToValueAtTime(Sh.x,t),e.orientationY.linearRampToValueAtTime(Sh.y,t),e.orientationZ.linearRampToValueAtTime(Sh.z,t)}else e.setPosition(bh.x,bh.y,bh.z),e.setOrientation(Sh.x,Sh.y,Sh.z)}}class Mh{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class Eh{constructor(t,e,n){let r,i,s;switch(this.binding=t,this.valueSize=n,e){case"quaternion":r=this._slerp,i=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":r=this._select,i=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:r=this._lerp,i=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=i,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,r=this.valueSize,i=t*r+r;let s=this.cumulativeWeight;if(0===s){for(let t=0;t!==r;++t)n[i+t]=n[t];s=e}else{s+=e;const t=e/s;this._mixBufferRegion(n,i,0,t,r)}this.cumulativeWeight=s}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,r=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,r,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,r=t*e+e,i=this.cumulativeWeight,s=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,i<1){const t=e*this._origIndex;this._mixBufferRegion(n,r,t,1-i,e)}s>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*e,1,e);for(let t=e,i=e+e;t!==i;++t)if(n[t]!==n[t+e]){a.setValue(n,r);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,r=n*this._origIndex;t.getValue(e,r);for(let t=n,i=r;t!==i;++t)e[t]=e[r+t%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,r,i){if(r>=.5)for(let r=0;r!==i;++r)t[e+r]=t[n+r]}_slerp(t,e,n,r){ir.slerpFlat(t,e,t,e,t,n,r)}_slerpAdditive(t,e,n,r,i){const s=this._workIndex*i;ir.multiplyQuaternionsFlat(t,s,t,e,t,n),ir.slerpFlat(t,e,t,e,t,s,r)}_lerp(t,e,n,r,i){const s=1-r;for(let a=0;a!==i;++a){const i=e+a;t[i]=t[i]*s+t[n+a]*r}}_lerpAdditive(t,e,n,r,i){for(let s=0;s!==i;++s){const i=e+s;t[i]=t[i]+t[n+s]*r}}}const Ih="\\[\\]\\.:\\/",Ch=new RegExp("["+Ih+"]","g"),kh="[^"+Ih+"]",Ah="[^"+Ih.replace("\\.","")+"]",Rh=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",kh)+/(WCOD+)?/.source.replace("WCOD",Ah)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",kh)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",kh)+"$"),Nh=["material","materials","bones","map"];class Dh{constructor(t,e,n){this.path=e,this.parsedPath=n||Dh.parseTrackName(e),this.node=Dh.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Dh.Composite(t,e,n):new Dh(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(Ch,"")}static parseTrackName(t){const e=Rh.exec(t);if(null===e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const t=n.nodeName.substring(r+1);-1!==Nh.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(void 0===e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let r=0;r<t.length;r++){const i=t[r];if(i.name===e||i.uuid===e)return i;const s=n(i.children);if(s)return s}return null},r=n(t.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)t[e++]=n[r]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,r=e.propertyName;let i=e.propertyIndex;if(t||(t=Dh.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");if(n){let r=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===r){r=e;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);t=t.material.map;break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==r){if(void 0===t[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[r]}}const s=t[r];if(void 0===s){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn't found.",t)}let a=this.Versioning.None;this.targetObject=t,!0===t.isMaterial?a=this.Versioning.NeedsUpdate:!0===t.isObject3D&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===r){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[i]&&(i=t.morphTargetDictionary[i])}o=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=i}else void 0!==s.fromArray&&void 0!==s.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(o=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Dh.Composite=class{constructor(t,e,n){const r=n||Dh.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,r)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}},Dh.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Dh.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Dh.prototype.GetterByBindingType=[Dh.prototype._getValue_direct,Dh.prototype._getValue_array,Dh.prototype._getValue_arrayElement,Dh.prototype._getValue_toArray],Dh.prototype.SetterByBindingTypeAndVersioning=[[Dh.prototype._setValue_direct,Dh.prototype._setValue_direct_setNeedsUpdate,Dh.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Dh.prototype._setValue_array,Dh.prototype._setValue_array_setNeedsUpdate,Dh.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Dh.prototype._setValue_arrayElement,Dh.prototype._setValue_arrayElement_setNeedsUpdate,Dh.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Dh.prototype._setValue_fromArray,Dh.prototype._setValue_fromArray_setNeedsUpdate,Dh.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Lh{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Yn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let e=0,n=arguments.length;e!==n;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,r=this._parsedPaths,i=this._bindings,s=i.length;let a,o=t.length,l=this.nCachedObjects_;for(let u=0,c=arguments.length;u!==c;++u){const c=arguments[u],h=c.uuid;let d=e[h];if(void 0===d){d=o++,e[h]=d,t.push(c);for(let t=0,e=s;t!==e;++t)i[t].push(new Dh(c,n[t],r[t]))}else if(d<l){a=t[d];const o=--l,u=t[o];e[u.uuid]=d,t[d]=u,e[h]=o,t[o]=c;for(let t=0,e=s;t!==e;++t){const e=i[t],s=e[o];let a=e[d];e[d]=s,void 0===a&&(a=new Dh(c,n[t],r[t])),e[o]=a}}else t[d]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let i=this.nCachedObjects_;for(let s=0,a=arguments.length;s!==a;++s){const a=arguments[s],o=a.uuid,l=e[o];if(void 0!==l&&l>=i){const s=i++,u=t[s];e[u.uuid]=l,t[l]=u,e[o]=s,t[s]=a;for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[s],i=e[l];e[l]=r,e[s]=i}}}this.nCachedObjects_=i}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let i=this.nCachedObjects_,s=t.length;for(let a=0,o=arguments.length;a!==o;++a){const o=arguments[a].uuid,l=e[o];if(void 0!==l)if(delete e[o],l<i){const a=--i,o=t[a],u=--s,c=t[u];e[o.uuid]=l,t[l]=o,e[c.uuid]=a,t[a]=c,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[a],i=e[u];e[l]=r,e[a]=i,e.pop()}}else{const i=--s,a=t[i];i>0&&(e[a.uuid]=l),t[l]=a,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t];e[l]=e[i],e.pop()}}}this.nCachedObjects_=i}subscribe_(t,e){const n=this._bindingsIndicesByPath;let r=n[t];const i=this._bindings;if(void 0!==r)return i[r];const s=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,u=this.nCachedObjects_,c=new Array(l);r=i.length,n[t]=r,s.push(t),a.push(e),i.push(c);for(let n=u,r=o.length;n!==r;++n){const r=o[n];c[n]=new Dh(r,t,e)}return c}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(void 0!==n){const r=this._paths,i=this._parsedPaths,s=this._bindings,a=s.length-1,o=s[a];e[t[a]]=n,s[n]=o,s.pop(),i[n]=i[a],i.pop(),r[n]=r[a],r.pop()}}}class Fh{constructor(t,e,n=null,r=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=r;const i=e.tracks,s=i.length,a=new Array(s),o={endingStart:Ue,endingEnd:Ue};for(let t=0;t!==s;++t){const e=i[t].createInterpolant(null);a[t]=e,e.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Le,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n=!1){if(t.fadeOut(e),this.fadeIn(e),!0===n){const n=this._clip.duration,r=t._clip.duration,i=r/n,s=n/r;t.warp(1,i,e),this.warp(s,1,e)}return this}crossFadeTo(t,e,n=!1){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const r=this._mixer,i=r.time,s=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=i,o[1]=i+n,l[0]=t/s,l[1]=e/s,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,r){if(!this.enabled)return void this._updateWeight(t);const i=this._startTime;if(null!==i){const r=(t-i)*n;r<0||0===n?e=0:(this._startTime=null,e=n*r)}e*=this._updateTimeScale(t);const s=this._updateTime(e),a=this._updateWeight(t);if(a>0){const t=this._interpolants,e=this._propertyBindings;if(this.blendMode===We)for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(s),e[n].accumulateAdditive(a);else for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(s),e[n].accumulate(r,a)}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const r=n.evaluate(t)[0];e*=r,t>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;null!==n&&(e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let r=this.time+t,i=this._loopCount;const s=n===Fe;if(0===t)return-1===i||!s||1&~i?r:e-r;if(n===De){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(r>=e)r=e;else{if(!(r<0)){this.time=r;break t}r=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===i&&(t>=0?(i=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),r>=e||r<0){const n=Math.floor(r/e);r-=e*n,i+=Math.abs(n);const a=this.repetitions-i;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=t>0?e:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===a){const e=t<0;this._setEndings(e,!e,s)}else this._setEndings(!1,!1,s);this._loopCount=i,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=r;if(s&&!(1&~i))return e-r}return r}_setEndings(t,e,n){const r=this._interpolantSettings;n?(r.endingStart=ze,r.endingEnd=ze):(r.endingStart=t?this.zeroSlopeAtStart?ze:Ue:Be,r.endingEnd=e?this.zeroSlopeAtEnd?ze:Ue:Be)}_scheduleFading(t,e,n){const r=this._mixer,i=r.time;let s=this._weightInterpolant;null===s&&(s=r._lendControlInterpolant(),this._weightInterpolant=s);const a=s.parameterPositions,o=s.sampleValues;return a[0]=i,o[0]=e,a[1]=i+t,o[1]=n,this}}const Ph=new Float32Array(1);class Oh extends Hn{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,r=t._clip.tracks,i=r.length,s=t._propertyBindings,a=t._interpolants,o=n.uuid,l=this._bindingsByRootAndName;let u=l[o];void 0===u&&(u={},l[o]=u);for(let t=0;t!==i;++t){const i=r[t],l=i.name;let c=u[l];if(void 0!==c)++c.referenceCount,s[t]=c;else{if(c=s[t],void 0!==c){null===c._cacheIndex&&(++c.referenceCount,this._addInactiveBinding(c,o,l));continue}const r=e&&e._propertyBindings[t].binding.parsedPath;c=new Eh(Dh.create(n,l,r),i.ValueTypeName,i.getValueSize()),++c.referenceCount,this._addInactiveBinding(c,o,l),s[t]=c}a[t].resultBuffer=c.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,r=this._actionsByClip[n];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0===n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0===--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const r=this._actions,i=this._actionsByClip;let s=i[e];if(void 0===s)s={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,i[e]=s;else{const e=s.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=r.length,r.push(t),s.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],r=t._cacheIndex;n._cacheIndex=r,e[r]=n,e.pop(),t._cacheIndex=null;const i=t._clip.uuid,s=this._actionsByClip,a=s[i],o=a.knownActions,l=o[o.length-1],u=t._byClipCacheIndex;l._byClipCacheIndex=u,o[u]=l,o.pop(),t._byClipCacheIndex=null,delete a.actionByRoot[(t._localRoot||this._root).uuid],0===o.length&&delete s[i],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0===--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,r=this._nActiveActions++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,r=--this._nActiveActions,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_addInactiveBinding(t,e,n){const r=this._bindingsByRootAndName,i=this._bindings;let s=r[e];void 0===s&&(s={},r[e]=s),s[n]=t,t._cacheIndex=i.length,i.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,r=n.rootNode.uuid,i=n.path,s=this._bindingsByRootAndName,a=s[r],o=e[e.length-1],l=t._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete a[i],0===Object.keys(a).length&&delete s[r]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,r=this._nActiveBindings++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,r=--this._nActiveBindings,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new nc(new Float32Array(2),new Float32Array(2),1,Ph),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,r=--this._nActiveControlInterpolants,i=e[r];t.__cacheIndex=r,e[r]=t,i.__cacheIndex=n,e[n]=i}clipAction(t,e,n){const r=e||this._root,i=r.uuid;let s="string"==typeof t?dc.findByName(r,t):t;const a=null!==s?s.uuid:t,o=this._actionsByClip[a];let l=null;if(void 0===n&&(n=null!==s?s.blendMode:Ve),void 0!==o){const t=o.actionByRoot[i];if(void 0!==t&&t.blendMode===n)return t;l=o.knownActions[0],null===s&&(s=l._clip)}if(null===s)return null;const u=new Fh(this,s,e,n);return this._bindAction(u,l),this._addInactiveAction(u,a,i),u}existingAction(t,e){const n=e||this._root,r=n.uuid,i="string"==typeof t?dc.findByName(n,t):t,s=i?i.uuid:t,a=this._actionsByClip[s];return void 0!==a&&a.actionByRoot[r]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,r=this.time+=t,i=Math.sign(t),s=this._accuIndex^=1;for(let a=0;a!==n;++a)e[a]._update(r,t,i,s);const a=this._bindings,o=this._nActiveBindings;for(let t=0;t!==o;++t)a[t].apply(s);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,r=this._actionsByClip,i=r[n];if(void 0!==i){const t=i.knownActions;for(let n=0,r=t.length;n!==r;++n){const r=t[n];this._deactivateAction(r);const i=r._cacheIndex,s=e[e.length-1];r._cacheIndex=null,r._byClipCacheIndex=null,s._cacheIndex=i,e[i]=s,e.pop(),this._removeInactiveBindingsForAction(r)}delete r[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const r=n[t].actionByRoot[e];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}const r=this._bindingsByRootAndName[e];if(void 0!==r)for(const t in r){const e=r[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class $h extends Nr{constructor(t=1,e=1,n=1,r={}){super(t,e,r),this.isRenderTarget3D=!0,this.depth=n,this.texture=new Pr(null,t,e,n),this._setTextureOptions(r),this.texture.isRenderTargetTexture=!0}}class Uh{constructor(t){this.value=t}clone(){return new Uh(void 0===this.value.clone?this.value:this.value.clone())}}let zh=0;class Bh extends Hn{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:zh++}),this.name="",this.usage=kn,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return-1!==e&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let t=0,n=e.length;t<n;t++){const n=Array.isArray(e[t])?e[t]:[e[t]];for(let t=0;t<n.length;t++)this.uniforms.push(n[t].clone())}return this}clone(){return(new this.constructor).copy(this)}}class Vh extends fa{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class Wh{constructor(t,e,n,r,i){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=r,this.count=i,this.version=0}set needsUpdate(t){!0===t&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}const Gh=new hi;class Hh{constructor(t,e,n=0,r=1/0){this.ray=new ci(t,e),this.near=n,this.far=r,this.camera=null,this.layers=new _i,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return Gh.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Gh),this}intersectObject(t,e=!0,n=[]){return qh(t,this,n,e),n.sort(jh),n}intersectObjects(t,e=!0,n=[]){for(let r=0,i=t.length;r<i;r++)qh(t[r],this,n,e);return n.sort(jh),n}}function jh(t,e){return t.distance-e.distance}function qh(t,e,n,r){let i=!0;if(t.layers.test(e.layers)&&!1===t.raycast(e,n)&&(i=!1),!0===i&&!0===r){const r=t.children;for(let t=0,i=r.length;t<i;t++)qh(r[t],e,n,!0)}}class Xh{constructor(t=1,e=0,n=0){this.radius=t,this.phi=e,this.theta=n}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=Zn(this.phi,t,Math.PI-t),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(Zn(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class Kh{constructor(t=1,e=0,n=0){this.radius=t,this.theta=e,this.y=n}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return(new this.constructor).copy(this)}}class Yh{constructor(t,e,n,r){Yh.prototype.isMatrix2=!0,this.elements=[1,0,0,1],void 0!==t&&this.set(t,e,n,r)}identity(){return this.set(1,0,0,1),this}fromArray(t,e=0){for(let n=0;n<4;n++)this.elements[n]=t[n+e];return this}set(t,e,n,r){const i=this.elements;return i[0]=t,i[2]=e,i[1]=n,i[3]=r,this}}const Zh=new rr;class Jh{constructor(t=new rr(1/0,1/0),e=new rr(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Zh.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Zh).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Qh=new sr,td=new sr;class ed{constructor(t=new sr,e=new sr){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){Qh.subVectors(t,this.start),td.subVectors(this.end,this.start);const n=td.dot(td);let r=td.dot(Qh)/n;return e&&(r=Zn(r,0,1)),r}closestPointToPoint(t,e,n){const r=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const nd=new sr;class rd extends $i{constructor(t,e){super(),this.light=t,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const n=new Ds,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let t=0,e=1,n=32;t<n;t++,e++){const i=t/n*Math.PI*2,s=e/n*Math.PI*2;r.push(Math.cos(i),Math.sin(i),1,Math.cos(s),Math.sin(s),1)}n.setAttribute("position",new Ms(r,3));const i=new Po({fog:!1,toneMapped:!1});this.cone=new Xo(n,i),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),nd.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(nd),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const id=new sr,sd=new hi,ad=new hi;class od extends Xo{constructor(t){const e=ld(t),n=new Ds,r=[],i=[],s=new rs(0,0,1),a=new rs(0,1,0);for(let t=0;t<e.length;t++){const n=e[t];n.parent&&n.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(s.r,s.g,s.b),i.push(a.r,a.g,a.b))}n.setAttribute("position",new Ms(r,3)),n.setAttribute("color",new Ms(i,3)),super(n,new Po({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,r=n.getAttribute("position");ad.copy(this.root.matrixWorld).invert();for(let t=0,n=0;t<e.length;t++){const i=e[t];i.parent&&i.parent.isBone&&(sd.multiplyMatrices(ad,i.matrixWorld),id.setFromMatrixPosition(sd),r.setXYZ(n,id.x,id.y,id.z),sd.multiplyMatrices(ad,i.parent.matrixWorld),id.setFromMatrixPosition(sd),r.setXYZ(n+1,id.x,id.y,id.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose()}}function ld(t){const e=[];!0===t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push(...ld(t.children[n]));return e}class ud extends Hs{constructor(t,e,n){super(new Cu(e,4,2),new os({wireframe:!0,fog:!1,toneMapped:!1})),this.light=t,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const cd=new sr,hd=new rs,dd=new rs;class pd extends $i{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const r=new Tu(e);r.rotateY(.5*Math.PI),this.material=new os({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const i=r.getAttribute("position"),s=new Float32Array(3*i.count);r.setAttribute("color",new gs(s,3)),this.add(new Hs(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");hd.copy(this.light.color),dd.copy(this.light.groundColor);for(let t=0,n=e.count;t<n;t++){const r=t<n/2?hd:dd;e.setXYZ(t,r.r,r.g,r.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(cd.setFromMatrixPosition(this.light.matrixWorld).negate())}}class fd extends Xo{constructor(t=10,e=10,n=4473924,r=8947848){n=new rs(n),r=new rs(r);const i=e/2,s=t/e,a=t/2,o=[],l=[];for(let t=0,u=0,c=-a;t<=e;t++,c+=s){o.push(-a,0,c,a,0,c),o.push(c,0,-a,c,0,a);const e=t===i?n:r;e.toArray(l,u),u+=3,e.toArray(l,u),u+=3,e.toArray(l,u),u+=3,e.toArray(l,u),u+=3}const u=new Ds;u.setAttribute("position",new Ms(o,3)),u.setAttribute("color",new Ms(l,3)),super(u,new Po({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class md extends Xo{constructor(t=10,e=16,n=8,r=64,i=4473924,s=8947848){i=new rs(i),s=new rs(s);const a=[],o=[];if(e>1)for(let n=0;n<e;n++){const r=n/e*(2*Math.PI),l=Math.sin(r)*t,u=Math.cos(r)*t;a.push(0,0,0),a.push(l,0,u);const c=1&n?i:s;o.push(c.r,c.g,c.b),o.push(c.r,c.g,c.b)}for(let e=0;e<n;e++){const l=1&e?i:s,u=t-t/n*e;for(let t=0;t<r;t++){let e=t/r*(2*Math.PI),n=Math.sin(e)*u,i=Math.cos(e)*u;a.push(n,0,i),o.push(l.r,l.g,l.b),e=(t+1)/r*(2*Math.PI),n=Math.sin(e)*u,i=Math.cos(e)*u,a.push(n,0,i),o.push(l.r,l.g,l.b)}}const l=new Ds;l.setAttribute("position",new Ms(a,3)),l.setAttribute("color",new Ms(o,3)),super(l,new Po({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const gd=new sr,xd=new sr,yd=new sr;class vd extends $i{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",void 0===e&&(e=1);let r=new Ds;r.setAttribute("position",new Ms([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const i=new Po({fog:!1,toneMapped:!1});this.lightPlane=new Go(r,i),this.add(this.lightPlane),r=new Ds,r.setAttribute("position",new Ms([0,0,0,0,0,1],3)),this.targetLine=new Go(r,i),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),gd.setFromMatrixPosition(this.light.matrixWorld),xd.setFromMatrixPosition(this.light.target.matrixWorld),yd.subVectors(xd,gd),this.lightPlane.lookAt(xd),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(xd),this.targetLine.scale.z=yd.length()}}const bd=new sr,wd=new Qs;class _d extends Xo{constructor(t){const e=new Ds,n=new Po({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],i=[],s={};function a(t,e){o(t),o(e)}function o(t){r.push(0,0,0),i.push(0,0,0),void 0===s[t]&&(s[t]=[]),s[t].push(r.length/3-1)}a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4"),e.setAttribute("position",new Ms(r,3)),e.setAttribute("color",new Ms(i,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update();const l=new rs(16755200),u=new rs(16711680),c=new rs(43775),h=new rs(16777215),d=new rs(3355443);this.setColors(l,u,c,h,d)}setColors(t,e,n,r,i){const s=this.geometry.getAttribute("color");s.setXYZ(0,t.r,t.g,t.b),s.setXYZ(1,t.r,t.g,t.b),s.setXYZ(2,t.r,t.g,t.b),s.setXYZ(3,t.r,t.g,t.b),s.setXYZ(4,t.r,t.g,t.b),s.setXYZ(5,t.r,t.g,t.b),s.setXYZ(6,t.r,t.g,t.b),s.setXYZ(7,t.r,t.g,t.b),s.setXYZ(8,t.r,t.g,t.b),s.setXYZ(9,t.r,t.g,t.b),s.setXYZ(10,t.r,t.g,t.b),s.setXYZ(11,t.r,t.g,t.b),s.setXYZ(12,t.r,t.g,t.b),s.setXYZ(13,t.r,t.g,t.b),s.setXYZ(14,t.r,t.g,t.b),s.setXYZ(15,t.r,t.g,t.b),s.setXYZ(16,t.r,t.g,t.b),s.setXYZ(17,t.r,t.g,t.b),s.setXYZ(18,t.r,t.g,t.b),s.setXYZ(19,t.r,t.g,t.b),s.setXYZ(20,t.r,t.g,t.b),s.setXYZ(21,t.r,t.g,t.b),s.setXYZ(22,t.r,t.g,t.b),s.setXYZ(23,t.r,t.g,t.b),s.setXYZ(24,e.r,e.g,e.b),s.setXYZ(25,e.r,e.g,e.b),s.setXYZ(26,e.r,e.g,e.b),s.setXYZ(27,e.r,e.g,e.b),s.setXYZ(28,e.r,e.g,e.b),s.setXYZ(29,e.r,e.g,e.b),s.setXYZ(30,e.r,e.g,e.b),s.setXYZ(31,e.r,e.g,e.b),s.setXYZ(32,n.r,n.g,n.b),s.setXYZ(33,n.r,n.g,n.b),s.setXYZ(34,n.r,n.g,n.b),s.setXYZ(35,n.r,n.g,n.b),s.setXYZ(36,n.r,n.g,n.b),s.setXYZ(37,n.r,n.g,n.b),s.setXYZ(38,r.r,r.g,r.b),s.setXYZ(39,r.r,r.g,r.b),s.setXYZ(40,i.r,i.g,i.b),s.setXYZ(41,i.r,i.g,i.b),s.setXYZ(42,i.r,i.g,i.b),s.setXYZ(43,i.r,i.g,i.b),s.setXYZ(44,i.r,i.g,i.b),s.setXYZ(45,i.r,i.g,i.b),s.setXYZ(46,i.r,i.g,i.b),s.setXYZ(47,i.r,i.g,i.b),s.setXYZ(48,i.r,i.g,i.b),s.setXYZ(49,i.r,i.g,i.b),s.needsUpdate=!0}update(){const t=this.geometry,e=this.pointMap;wd.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const n=this.camera.coordinateSystem===zn?-1:0;Sd("c",e,t,wd,0,0,n),Sd("t",e,t,wd,0,0,1),Sd("n1",e,t,wd,-1,-1,n),Sd("n2",e,t,wd,1,-1,n),Sd("n3",e,t,wd,-1,1,n),Sd("n4",e,t,wd,1,1,n),Sd("f1",e,t,wd,-1,-1,1),Sd("f2",e,t,wd,1,-1,1),Sd("f3",e,t,wd,-1,1,1),Sd("f4",e,t,wd,1,1,1),Sd("u1",e,t,wd,.7,1.1,n),Sd("u2",e,t,wd,-.7,1.1,n),Sd("u3",e,t,wd,0,2,n),Sd("cf1",e,t,wd,-1,0,1),Sd("cf2",e,t,wd,1,0,1),Sd("cf3",e,t,wd,0,-1,1),Sd("cf4",e,t,wd,0,1,1),Sd("cn1",e,t,wd,-1,0,n),Sd("cn2",e,t,wd,1,0,n),Sd("cn3",e,t,wd,0,-1,n),Sd("cn4",e,t,wd,0,1,n),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Sd(t,e,n,r,i,s,a){bd.set(i,s,a).unproject(r);const o=e[t];if(void 0!==o){const t=n.getAttribute("position");for(let e=0,n=o.length;e<n;e++)t.setXYZ(o[e],bd.x,bd.y,bd.z)}}const Td=new $r;class Md extends Xo{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),i=new Ds;i.setIndex(new gs(n,1)),i.setAttribute("position",new gs(r,3)),super(i,new Po({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(void 0!==this.object&&Td.setFromObject(this.object),Td.isEmpty())return;const t=Td.min,e=Td.max,n=this.geometry.attributes.position,r=n.array;r[0]=e.x,r[1]=e.y,r[2]=e.z,r[3]=t.x,r[4]=e.y,r[5]=e.z,r[6]=t.x,r[7]=t.y,r[8]=e.z,r[9]=e.x,r[10]=t.y,r[11]=e.z,r[12]=e.x,r[13]=e.y,r[14]=t.z,r[15]=t.x,r[16]=e.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=e.x,r[22]=t.y,r[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Ed extends Xo{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Ds;r.setIndex(new gs(n,1)),r.setAttribute("position",new Ms([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(r,new Po({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}class Id extends Go{constructor(t,e=1,n=16776960){const r=n,i=new Ds;i.setAttribute("position",new Ms([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),i.computeBoundingSphere(),super(i,new Po({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const s=new Ds;s.setAttribute("position",new Ms([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),s.computeBoundingSphere(),this.add(new Hs(s,new os({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const Cd=new sr;let kd,Ad;class Rd extends $i{constructor(t=new sr(0,0,1),e=new sr(0,0,0),n=1,r=16776960,i=.2*n,s=.2*i){super(),this.type="ArrowHelper",void 0===kd&&(kd=new Ds,kd.setAttribute("position",new Ms([0,0,0,0,1,0],3)),Ad=new fl(.5,1,5,1),Ad.translate(0,-.5,0)),this.position.copy(e),this.line=new Go(kd,new Po({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Hs(Ad,new os({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,i,s)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{Cd.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(Cd,e)}}setLength(t,e=.2*t,n=.2*e){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class Nd extends Xo{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=new Ds;n.setAttribute("position",new Ms(e,3)),n.setAttribute("color",new Ms([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(n,new Po({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(t,e,n){const r=new rs,i=this.geometry.attributes.color.array;return r.set(t),r.toArray(i,0),r.toArray(i,3),r.set(e),r.toArray(i,6),r.toArray(i,9),r.set(n),r.toArray(i,12),r.toArray(i,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Dd{constructor(){this.type="ShapePath",this.color=new rs,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Wl,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,r){return this.currentPath.quadraticCurveTo(t,e,n,r),this}bezierCurveTo(t,e,n,r,i,s){return this.currentPath.bezierCurveTo(t,e,n,r,i,s),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(t,e){const n=e.length;let r=!1;for(let i=n-1,s=0;s<n;i=s++){let n=e[i],a=e[s],o=a.x-n.x,l=a.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(n=e[s],o=-o,a=e[i],l=-l),t.y<n.y||t.y>a.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=l*(t.x-n.x)-o*(t.y-n.y);if(0===e)return!0;if(e<0)continue;r=!r}}else{if(t.y!==n.y)continue;if(a.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=a.x)return!0}}return r}const n=xu.isClockWise,r=this.subPaths;if(0===r.length)return[];let i,s,a;const o=[];if(1===r.length)return s=r[0],a=new Gl,a.curves=s.curves,o.push(a),o;let l=!n(r[0].getPoints());l=t?!l:l;const u=[],c=[];let h,d,p=[],f=0;c[f]=void 0,p[f]=[];for(let e=0,a=r.length;e<a;e++)s=r[e],h=s.getPoints(),i=n(h),i=t?!i:i,i?(!l&&c[f]&&f++,c[f]={s:new Gl,p:h},c[f].s.curves=s.curves,l&&f++,p[f]=[]):p[f].push({h:s,p:h[0]});if(!c[0])return function(t){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n],i=new Gl;i.curves=r.curves,e.push(i)}return e}(r);if(c.length>1){let t=!1,n=0;for(let t=0,e=c.length;t<e;t++)u[t]=[];for(let r=0,i=c.length;r<i;r++){const i=p[r];for(let s=0;s<i.length;s++){const a=i[s];let o=!0;for(let i=0;i<c.length;i++)e(a.p,c[i].p)&&(r!==i&&n++,o?(o=!1,u[i].push(a)):t=!0);o&&u[r].push(a)}}n>0&&!1===t&&(p=u)}for(let t=0,e=c.length;t<e;t++){a=c[t].s,o.push(a),d=p[t];for(let t=0,e=d.length;t<e;t++)a.holes.push(d[t].h)}return o}}class Ld extends Hn{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(t){void 0!==t?(null!==this.domElement&&this.disconnect(),this.domElement=t):console.warn("THREE.Controls: connect() now requires an element.")}disconnect(){}dispose(){}update(){}}function Fd(t,e,n,r){const i=function(t){switch(t){case Nt:case Dt:return{byteLength:1,components:1};case Ft:case Lt:case Ut:return{byteLength:2,components:1};case zt:case Bt:return{byteLength:2,components:4};case Ot:case Pt:case $t:return{byteLength:4,components:1};case Wt:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${t}.`)}(r);switch(n){case Gt:return t*e;case Kt:case Yt:return t*e/i.components*i.byteLength;case Zt:case Jt:return t*e*2/i.components*i.byteLength;case Ht:return t*e*3/i.components*i.byteLength;case jt:case te:return t*e*4/i.components*i.byteLength;case ee:case ne:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*8;case re:case ie:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*16;case ae:case le:return Math.max(t,16)*Math.max(e,8)/4;case se:case oe:return Math.max(t,8)*Math.max(e,8)/2;case ue:case ce:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*8;case he:case de:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*16;case pe:return Math.floor((t+4)/5)*Math.floor((e+3)/4)*16;case fe:return Math.floor((t+4)/5)*Math.floor((e+4)/5)*16;case me:return Math.floor((t+5)/6)*Math.floor((e+4)/5)*16;case ge:return Math.floor((t+5)/6)*Math.floor((e+5)/6)*16;case xe:return Math.floor((t+7)/8)*Math.floor((e+4)/5)*16;case ye:return Math.floor((t+7)/8)*Math.floor((e+5)/6)*16;case ve:return Math.floor((t+7)/8)*Math.floor((e+7)/8)*16;case be:return Math.floor((t+9)/10)*Math.floor((e+4)/5)*16;case we:return Math.floor((t+9)/10)*Math.floor((e+5)/6)*16;case _e:return Math.floor((t+9)/10)*Math.floor((e+7)/8)*16;case Se:return Math.floor((t+9)/10)*Math.floor((e+9)/10)*16;case Te:return Math.floor((t+11)/12)*Math.floor((e+9)/10)*16;case Me:return Math.floor((t+11)/12)*Math.floor((e+11)/12)*16;case Ee:case Ie:case Ce:return Math.ceil(t/4)*Math.ceil(e/4)*16;case ke:case Ae:return Math.ceil(t/4)*Math.ceil(e/4)*8;case Re:case Ne:return Math.ceil(t/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${n} format.`)}class Pd{static contain(t,e){return function(t,e){const n=t.image&&t.image.width?t.image.width/t.image.height:1;return n>e?(t.repeat.x=1,t.repeat.y=n/e,t.offset.x=0,t.offset.y=(1-t.repeat.y)/2):(t.repeat.x=e/n,t.repeat.y=1,t.offset.x=(1-t.repeat.x)/2,t.offset.y=0),t}(t,e)}static cover(t,e){return function(t,e){const n=t.image&&t.image.width?t.image.width/t.image.height:1;return n>e?(t.repeat.x=e/n,t.repeat.y=1,t.offset.x=(1-t.repeat.x)/2,t.offset.y=0):(t.repeat.x=1,t.repeat.y=n/e,t.offset.x=0,t.offset.y=(1-t.repeat.y)/2),t}(t,e)}static fill(t){return function(t){return t.repeat.x=1,t.repeat.y=1,t.offset.x=0,t.offset.y=0,t}(t)}static getByteLength(t,e,n,r){return Fd(t,e,n,r)}}function Od(){let t=null,e=!1,n=null,r=null;function i(e,s){n(e,s),r=t.requestAnimationFrame(i)}return{start:function(){!0!==e&&null!==n&&(r=t.requestAnimationFrame(i),e=!0)},stop:function(){t.cancelAnimationFrame(r),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function $d(t){const e=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),e.get(t)},remove:function(n){n.isInterleavedBufferAttribute&&(n=n.data);const r=e.get(n);r&&(t.deleteBuffer(r.buffer),e.delete(n))},update:function(n,r){if(n.isInterleavedBufferAttribute&&(n=n.data),n.isGLBufferAttribute){const t=e.get(n);return void((!t||t.version<n.version)&&e.set(n,{buffer:n.buffer,type:n.type,bytesPerElement:n.elementSize,version:n.version}))}const i=e.get(n);if(void 0===i)e.set(n,function(e,n){const r=e.array,i=e.usage,s=r.byteLength,a=t.createBuffer();let o;if(t.bindBuffer(n,a),t.bufferData(n,r,i),e.onUploadCallback(),r instanceof Float32Array)o=t.FLOAT;else if(r instanceof Uint16Array)o=e.isFloat16BufferAttribute?t.HALF_FLOAT:t.UNSIGNED_SHORT;else if(r instanceof Int16Array)o=t.SHORT;else if(r instanceof Uint32Array)o=t.UNSIGNED_INT;else if(r instanceof Int32Array)o=t.INT;else if(r instanceof Int8Array)o=t.BYTE;else if(r instanceof Uint8Array)o=t.UNSIGNED_BYTE;else{if(!(r instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+r);o=t.UNSIGNED_BYTE}return{buffer:a,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version,size:s}}(n,r));else if(i.version<n.version){if(i.size!==n.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");!function(e,n,r){const i=n.array,s=n.updateRanges;if(t.bindBuffer(r,e),0===s.length)t.bufferSubData(r,0,i);else{s.sort((t,e)=>t.start-e.start);let e=0;for(let t=1;t<s.length;t++){const n=s[e],r=s[t];r.start<=n.start+n.count+1?n.count=Math.max(n.count,r.start+r.count-n.start):(++e,s[e]=r)}s.length=e+1;for(let e=0,n=s.length;e<n;e++){const n=s[e];t.bufferSubData(r,n.start*i.BYTES_PER_ELEMENT,i,n.start,n.count)}n.clearUpdateRanges()}n.onUploadCallback()}(i.buffer,n,r),i.version=n.version}}}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:a}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=a);const Ud={alphahash_fragment:"#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE = 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv = max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales = vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha = vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases = vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\t#ifdef ALPHA_TO_COVERAGE\n\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\tif ( diffuseColor.a < alphaTest ) discard;\n\t#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_CLEARCOAT ) \n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_SHEEN ) \n\t\tsheenSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n\t#if ! defined( GL_ANGLE_multi_draw )\n\t#define gl_DrawID _gl_DrawID\n\tuniform int _gl_DrawID;\n\t#endif\n\tuniform highp sampler2D batchingTexture;\n\tuniform highp usampler2D batchingIdTexture;\n\tmat4 getBatchingMatrix( const in float i ) {\n\t\tint size = textureSize( batchingTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n\tfloat getIndirectIndex( const in int i ) {\n\t\tint size = textureSize( batchingIdTexture, 0 ).x;\n\t\tint x = i % size;\n\t\tint y = i / size;\n\t\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\n\t}\n#endif\n#ifdef USE_BATCHING_COLOR\n\tuniform sampler2D batchingColorTexture;\n\tvec3 getBatchingColor( const in float i ) {\n\t\tint size = textureSize( batchingColorTexture, 0 ).x;\n\t\tint j = int( i );\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\n\t}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\treturn vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#ifdef ALPHA_TO_COVERAGE\n\t\tfloat distanceToPlane, distanceGradient;\n\t\tfloat clipOpacity = 1.0;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\tif ( clipOpacity == 0.0 ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tfloat unionClipOpacity = 1.0;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\t\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tclipOpacity *= 1.0 - unionClipOpacity;\n\t\t#endif\n\t\tdiffuseColor.a *= clipOpacity;\n\t\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tbool clipped = true;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tif ( clipped ) discard;\n\t\t#endif\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif\n#ifdef USE_BATCHING_COLOR\n\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\n\tvColor.xyz *= batchingColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n\tmat3 bm = mat3( batchingMatrix );\n\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n\ttransformedNormal = bm * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = bm * transformedTangent;\n\t#endif\n#endif\n#ifdef USE_INSTANCING\n\tmat3 im = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n\ttransformedNormal = im * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = im * transformedTangent;\n\t#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE\n\t\temissiveColor = sRGBTransferEOTF( emissiveColor );\n\t#endif\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"vec4 LinearTransferOETF( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBTransferEOTF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform mat3 envMapRotation;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n\tuniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif ( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_DISPERSION\n\tmaterial.dispersion = dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tif( material.anisotropy == 0.0 ) {\n\t\tanisotropyV = vec2( 1.0, 0.0 );\n\t} else {\n\t\tanisotropyV /= material.anisotropy;\n\t\tmaterial.anisotropy = saturate( material.anisotropy );\n\t}\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\tfloat dispersion;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometryNormal;\n\t\tvec3 viewDir = geometryViewDir;\n\t\tvec3 position = geometryPosition;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n\tgeometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if defined( USE_LIGHT_PROBES )\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvFragDepth = 1.0 + gl_Position.w;\n\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphinstance_vertex:"#ifdef USE_INSTANCING_MORPH\n\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n\t}\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_INSTANCING_MORPH\n\t\tuniform float morphTargetBaseInfluence;\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t#endif\n\tuniform sampler2DArray morphTargetsTexture;\n\tuniform ivec2 morphTargetsTextureSize;\n\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t}\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\nconst float Inv255 = 1. / 255.;\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\nvec4 packDepthToRGBA( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec4( 0., 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec4( 1., 1., 1., 1. );\n\tfloat vuf;\n\tfloat af = modf( v * PackFactors.a, vuf );\n\tfloat bf = modf( vuf * ShiftRight8, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\n}\nvec3 packDepthToRGB( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec3( 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec3( 1., 1., 1. );\n\tfloat vuf;\n\tfloat bf = modf( v * PackFactors.b, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\n}\nvec2 packDepthToRG( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec2( 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec2( 1., 1. );\n\tfloat vuf;\n\tfloat gf = modf( v * 256., vuf );\n\treturn vec2( vuf * Inv255, gf );\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors4 );\n}\nfloat unpackRGBToDepth( const in vec3 v ) {\n\treturn dot( v, UnpackFactors3 );\n}\nfloat unpackRGToDepth( const in vec2 v ) {\n\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\n}\nvec4 pack2HalfToRGBA( const in vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( const in vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n\tmvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tfloat shadow = 1.0;\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\t\n\t\tfloat lightToPositionLength = length( lightToPosition );\n\t\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\n\t\t\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\t\tdp += shadowBias;\n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\t\tshadow = (\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t\t) * ( 1.0 / 9.0 );\n\t\t\t#else\n\t\t\t\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tint size = textureSize( boneTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 CineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.6605, - 0.1246, - 0.0182 ),\n\tvec3( - 0.5876, 1.1329, - 0.1006 ),\n\tvec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n\tvec3( 0.6274, 0.0691, 0.0164 ),\n\tvec3( 0.3293, 0.9195, 0.0880 ),\n\tvec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n\tvec3 x2 = x * x;\n\tvec3 x4 = x2 * x2;\n\treturn + 15.5 * x4 * x2\n\t\t- 40.14 * x4 * x\n\t\t+ 31.96 * x4\n\t\t- 6.868 * x2 * x\n\t\t+ 0.4298 * x2\n\t\t+ 0.1191 * x\n\t\t- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n\tconst mat3 AgXInsetMatrix = mat3(\n\t\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n\t\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n\t\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n\t);\n\tconst mat3 AgXOutsetMatrix = mat3(\n\t\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n\t\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n\t\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n\t);\n\tconst float AgxMinEv = - 12.47393;\tconst float AgxMaxEv = 4.026069;\n\tcolor *= toneMappingExposure;\n\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n\tcolor = AgXInsetMatrix * color;\n\tcolor = max( color, 1e-10 );\tcolor = log2( color );\n\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n\tcolor = clamp( color, 0.0, 1.0 );\n\tcolor = agxDefaultContrastApprox( color );\n\tcolor = AgXOutsetMatrix * color;\n\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n\tcolor = clamp( color, 0.0, 1.0 );\n\treturn color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n\tconst float StartCompression = 0.8 - 0.04;\n\tconst float Desaturation = 0.15;\n\tcolor *= toneMappingExposure;\n\tfloat x = min( color.r, min( color.g, color.b ) );\n\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n\tcolor -= offset;\n\tfloat peak = max( color.r, max( color.g, color.b ) );\n\tif ( peak < StartCompression ) return color;\n\tfloat d = 1. - StartCompression;\n\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\n\tcolor *= newPeak / peak;\n\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\n\treturn mix( color, vec3( newPeak ), g );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec4 transmittedLight;\n\t\tvec3 transmittance;\n\t\t#ifdef USE_DISPERSION\n\t\t\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\n\t\t\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\n\t\t\tfor ( int i = 0; i < 3; i ++ ) {\n\t\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\n\t\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\t\trefractionCoords += 1.0;\n\t\t\t\trefractionCoords /= 2.0;\n\t\t\t\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\n\t\t\t\ttransmittedLight[ i ] = transmissionSample[ i ];\n\t\t\t\ttransmittedLight.a += transmissionSample.a;\n\t\t\t\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\n\t\t\t}\n\t\t\ttransmittedLight.a /= 3.0;\n\t\t#else\n\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\trefractionCoords += 1.0;\n\t\t\trefractionCoords /= 2.0;\n\t\t\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\t\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\t#endif\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_BATCHING\n\t\tworldPosition = batchingMatrix * worldPosition;\n\t#endif\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#elif DEPTH_PACKING == 3202\n\t\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\n\t#elif DEPTH_PACKING == 3203\n\t\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n\tuniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n\t#endif\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix[ 3 ];\n\tvec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}"},zd={common:{diffuse:{value:new rs(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new lr},alphaMap:{value:null},alphaMapTransform:{value:new lr},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new lr}},envmap:{envMap:{value:null},envMapRotation:{value:new lr},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new lr}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new lr}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new lr},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new lr},normalScale:{value:new rr(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new lr},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new lr}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new lr}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new lr}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new rs(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new rs(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new lr},alphaTest:{value:0},uvTransform:{value:new lr}},sprite:{diffuse:{value:new rs(16777215)},opacity:{value:1},center:{value:new rr(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new lr},alphaMap:{value:null},alphaMapTransform:{value:new lr},alphaTest:{value:0}}},Bd={basic:{uniforms:Ks([zd.common,zd.specularmap,zd.envmap,zd.aomap,zd.lightmap,zd.fog]),vertexShader:Ud.meshbasic_vert,fragmentShader:Ud.meshbasic_frag},lambert:{uniforms:Ks([zd.common,zd.specularmap,zd.envmap,zd.aomap,zd.lightmap,zd.emissivemap,zd.bumpmap,zd.normalmap,zd.displacementmap,zd.fog,zd.lights,{emissive:{value:new rs(0)}}]),vertexShader:Ud.meshlambert_vert,fragmentShader:Ud.meshlambert_frag},phong:{uniforms:Ks([zd.common,zd.specularmap,zd.envmap,zd.aomap,zd.lightmap,zd.emissivemap,zd.bumpmap,zd.normalmap,zd.displacementmap,zd.fog,zd.lights,{emissive:{value:new rs(0)},specular:{value:new rs(1118481)},shininess:{value:30}}]),vertexShader:Ud.meshphong_vert,fragmentShader:Ud.meshphong_frag},standard:{uniforms:Ks([zd.common,zd.envmap,zd.aomap,zd.lightmap,zd.emissivemap,zd.bumpmap,zd.normalmap,zd.displacementmap,zd.roughnessmap,zd.metalnessmap,zd.fog,zd.lights,{emissive:{value:new rs(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ud.meshphysical_vert,fragmentShader:Ud.meshphysical_frag},toon:{uniforms:Ks([zd.common,zd.aomap,zd.lightmap,zd.emissivemap,zd.bumpmap,zd.normalmap,zd.displacementmap,zd.gradientmap,zd.fog,zd.lights,{emissive:{value:new rs(0)}}]),vertexShader:Ud.meshtoon_vert,fragmentShader:Ud.meshtoon_frag},matcap:{uniforms:Ks([zd.common,zd.bumpmap,zd.normalmap,zd.displacementmap,zd.fog,{matcap:{value:null}}]),vertexShader:Ud.meshmatcap_vert,fragmentShader:Ud.meshmatcap_frag},points:{uniforms:Ks([zd.points,zd.fog]),vertexShader:Ud.points_vert,fragmentShader:Ud.points_frag},dashed:{uniforms:Ks([zd.common,zd.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ud.linedashed_vert,fragmentShader:Ud.linedashed_frag},depth:{uniforms:Ks([zd.common,zd.displacementmap]),vertexShader:Ud.depth_vert,fragmentShader:Ud.depth_frag},normal:{uniforms:Ks([zd.common,zd.bumpmap,zd.normalmap,zd.displacementmap,{opacity:{value:1}}]),vertexShader:Ud.meshnormal_vert,fragmentShader:Ud.meshnormal_frag},sprite:{uniforms:Ks([zd.sprite,zd.fog]),vertexShader:Ud.sprite_vert,fragmentShader:Ud.sprite_frag},background:{uniforms:{uvTransform:{value:new lr},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Ud.background_vert,fragmentShader:Ud.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new lr}},vertexShader:Ud.backgroundCube_vert,fragmentShader:Ud.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ud.cube_vert,fragmentShader:Ud.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ud.equirect_vert,fragmentShader:Ud.equirect_frag},distanceRGBA:{uniforms:Ks([zd.common,zd.displacementmap,{referencePosition:{value:new sr},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ud.distanceRGBA_vert,fragmentShader:Ud.distanceRGBA_frag},shadow:{uniforms:Ks([zd.lights,zd.fog,{color:{value:new rs(0)},opacity:{value:1}}]),vertexShader:Ud.shadow_vert,fragmentShader:Ud.shadow_frag}};Bd.physical={uniforms:Ks([Bd.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new lr},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new lr},clearcoatNormalScale:{value:new rr(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new lr},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new lr},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new lr},sheen:{value:0},sheenColor:{value:new rs(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new lr},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new lr},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new lr},transmissionSamplerSize:{value:new rr},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new lr},attenuationDistance:{value:0},attenuationColor:{value:new rs(0)},specularColor:{value:new rs(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new lr},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new lr},anisotropyVector:{value:new rr},anisotropyMap:{value:null},anisotropyMapTransform:{value:new lr}}]),vertexShader:Ud.meshphysical_vert,fragmentShader:Ud.meshphysical_frag};const Vd={r:0,b:0,g:0},Wd=new wi,Gd=new hi;function Hd(t,e,n,r,i,s,a){const o=new rs(0);let l,u,c=!0===s?0:1,h=null,d=0,p=null;function f(t){let r=!0===t.isScene?t.background:null;return r&&r.isTexture&&(r=(t.backgroundBlurriness>0?n:e).get(r)),r}function m(e,n){e.getRGB(Vd,Ys(t)),r.buffers.color.setClear(Vd.r,Vd.g,Vd.b,n,a)}return{getClearColor:function(){return o},setClearColor:function(t,e=1){o.set(t),c=e,m(o,c)},getClearAlpha:function(){return c},setClearAlpha:function(t){c=t,m(o,c)},render:function(e){let n=!1;const i=f(e);null===i?m(o,c):i&&i.isColor&&(m(i,1),n=!0);const s=t.xr.getEnvironmentBlendMode();"additive"===s?r.buffers.color.setClear(0,0,0,1,a):"alpha-blend"===s&&r.buffers.color.setClear(0,0,0,0,a),(t.autoClear||n)&&(r.buffers.depth.setTest(!0),r.buffers.depth.setMask(!0),r.buffers.color.setMask(!0),t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil))},addToRenderList:function(e,n){const r=f(n);r&&(r.isCubeTexture||r.mapping===yt)?(void 0===u&&(u=new Hs(new qs(1,1,1),new Js({name:"BackgroundCubeMaterial",uniforms:Xs(Bd.backgroundCube.uniforms),vertexShader:Bd.backgroundCube.vertexShader,fragmentShader:Bd.backgroundCube.fragmentShader,side:y,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),Wd.copy(n.backgroundRotation),Wd.x*=-1,Wd.y*=-1,Wd.z*=-1,r.isCubeTexture&&!1===r.isRenderTargetTexture&&(Wd.y*=-1,Wd.z*=-1),u.material.uniforms.envMap.value=r,u.material.uniforms.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,u.material.uniforms.backgroundBlurriness.value=n.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=n.backgroundIntensity,u.material.uniforms.backgroundRotation.value.setFromMatrix4(Gd.makeRotationFromEuler(Wd)),u.material.toneMapped=br.getTransfer(r.colorSpace)!==rn,h===r&&d===r.version&&p===t.toneMapping||(u.material.needsUpdate=!0,h=r,d=r.version,p=t.toneMapping),u.layers.enableAll(),e.unshift(u,u.geometry,u.material,0,0,null)):r&&r.isTexture&&(void 0===l&&(l=new Hs(new Mu(2,2),new Js({name:"BackgroundMaterial",uniforms:Xs(Bd.background.uniforms),vertexShader:Bd.background.vertexShader,fragmentShader:Bd.background.fragmentShader,side:x,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=r,l.material.uniforms.backgroundIntensity.value=n.backgroundIntensity,l.material.toneMapped=br.getTransfer(r.colorSpace)!==rn,!0===r.matrixAutoUpdate&&r.updateMatrix(),l.material.uniforms.uvTransform.value.copy(r.matrix),h===r&&d===r.version&&p===t.toneMapping||(l.material.needsUpdate=!0,h=r,d=r.version,p=t.toneMapping),l.layers.enableAll(),e.unshift(l,l.geometry,l.material,0,0,null))},dispose:function(){void 0!==u&&(u.geometry.dispose(),u.material.dispose(),u=void 0),void 0!==l&&(l.geometry.dispose(),l.material.dispose(),l=void 0)}}}function jd(t,e){const n=t.getParameter(t.MAX_VERTEX_ATTRIBS),r={},i=u(null);let s=i,a=!1;function o(e){return t.bindVertexArray(e)}function l(e){return t.deleteVertexArray(e)}function u(t){const e=[],r=[],i=[];for(let t=0;t<n;t++)e[t]=0,r[t]=0,i[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:r,attributeDivisors:i,object:t,attributes:{},index:null}}function c(){const t=s.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function h(t){d(t,0)}function d(e,n){const r=s.newAttributes,i=s.enabledAttributes,a=s.attributeDivisors;r[e]=1,0===i[e]&&(t.enableVertexAttribArray(e),i[e]=1),a[e]!==n&&(t.vertexAttribDivisor(e,n),a[e]=n)}function p(){const e=s.newAttributes,n=s.enabledAttributes;for(let r=0,i=n.length;r<i;r++)n[r]!==e[r]&&(t.disableVertexAttribArray(r),n[r]=0)}function f(e,n,r,i,s,a,o){!0===o?t.vertexAttribIPointer(e,n,r,s,a):t.vertexAttribPointer(e,n,r,i,s,a)}function m(){g(),a=!0,s!==i&&(s=i,o(s.object))}function g(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:function(n,i,l,m,g){let x=!1;const y=function(e,n,i){const s=!0===i.wireframe;let a=r[e.id];void 0===a&&(a={},r[e.id]=a);let o=a[n.id];void 0===o&&(o={},a[n.id]=o);let l=o[s];return void 0===l&&(l=u(t.createVertexArray()),o[s]=l),l}(m,l,i);s!==y&&(s=y,o(s.object)),x=function(t,e,n,r){const i=s.attributes,a=e.attributes;let o=0;const l=n.getAttributes();for(const e in l)if(l[e].location>=0){const n=i[e];let r=a[e];if(void 0===r&&("instanceMatrix"===e&&t.instanceMatrix&&(r=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(r=t.instanceColor)),void 0===n)return!0;if(n.attribute!==r)return!0;if(r&&n.data!==r.data)return!0;o++}return s.attributesNum!==o||s.index!==r}(n,m,l,g),x&&function(t,e,n,r){const i={},a=e.attributes;let o=0;const l=n.getAttributes();for(const e in l)if(l[e].location>=0){let n=a[e];void 0===n&&("instanceMatrix"===e&&t.instanceMatrix&&(n=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(n=t.instanceColor));const r={};r.attribute=n,n&&n.data&&(r.data=n.data),i[e]=r,o++}s.attributes=i,s.attributesNum=o,s.index=r}(n,m,l,g),null!==g&&e.update(g,t.ELEMENT_ARRAY_BUFFER),(x||a)&&(a=!1,function(n,r,i,s){c();const a=s.attributes,o=i.getAttributes(),l=r.defaultAttributeValues;for(const r in o){const i=o[r];if(i.location>=0){let o=a[r];if(void 0===o&&("instanceMatrix"===r&&n.instanceMatrix&&(o=n.instanceMatrix),"instanceColor"===r&&n.instanceColor&&(o=n.instanceColor)),void 0!==o){const r=o.normalized,a=o.itemSize,l=e.get(o);if(void 0===l)continue;const u=l.buffer,c=l.type,p=l.bytesPerElement,m=c===t.INT||c===t.UNSIGNED_INT||o.gpuType===Pt;if(o.isInterleavedBufferAttribute){const e=o.data,l=e.stride,g=o.offset;if(e.isInstancedInterleavedBuffer){for(let t=0;t<i.locationSize;t++)d(i.location+t,e.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=e.meshPerAttribute*e.count)}else for(let t=0;t<i.locationSize;t++)h(i.location+t);t.bindBuffer(t.ARRAY_BUFFER,u);for(let t=0;t<i.locationSize;t++)f(i.location+t,a/i.locationSize,c,r,l*p,(g+a/i.locationSize*t)*p,m)}else{if(o.isInstancedBufferAttribute){for(let t=0;t<i.locationSize;t++)d(i.location+t,o.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=o.meshPerAttribute*o.count)}else for(let t=0;t<i.locationSize;t++)h(i.location+t);t.bindBuffer(t.ARRAY_BUFFER,u);for(let t=0;t<i.locationSize;t++)f(i.location+t,a/i.locationSize,c,r,a*p,a/i.locationSize*t*p,m)}}else if(void 0!==l){const e=l[r];if(void 0!==e)switch(e.length){case 2:t.vertexAttrib2fv(i.location,e);break;case 3:t.vertexAttrib3fv(i.location,e);break;case 4:t.vertexAttrib4fv(i.location,e);break;default:t.vertexAttrib1fv(i.location,e)}}}}p()}(n,i,l,m),null!==g&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,e.get(g).buffer))},reset:m,resetDefaultState:g,dispose:function(){m();for(const t in r){const e=r[t];for(const t in e){const n=e[t];for(const t in n)l(n[t].object),delete n[t];delete e[t]}delete r[t]}},releaseStatesOfGeometry:function(t){if(void 0===r[t.id])return;const e=r[t.id];for(const t in e){const n=e[t];for(const t in n)l(n[t].object),delete n[t];delete e[t]}delete r[t.id]},releaseStatesOfProgram:function(t){for(const e in r){const n=r[e];if(void 0===n[t.id])continue;const i=n[t.id];for(const t in i)l(i[t].object),delete i[t];delete n[t.id]}},initAttributes:c,enableAttribute:h,disableUnusedAttributes:p}}function qd(t,e,n){let r;function i(e,i,s){0!==s&&(t.drawArraysInstanced(r,e,i,s),n.update(i,r,s))}this.setMode=function(t){r=t},this.render=function(e,i){t.drawArrays(r,e,i),n.update(i,r,1)},this.renderInstances=i,this.renderMultiDraw=function(t,i,s){if(0===s)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(r,t,0,i,0,s);let a=0;for(let t=0;t<s;t++)a+=i[t];n.update(a,r,1)},this.renderMultiDrawInstances=function(t,s,a,o){if(0===a)return;const l=e.get("WEBGL_multi_draw");if(null===l)for(let e=0;e<t.length;e++)i(t[e],s[e],o[e]);else{l.multiDrawArraysInstancedWEBGL(r,t,0,s,0,o,0,a);let e=0;for(let t=0;t<a;t++)e+=s[t]*o[t];n.update(e,r,1)}}}function Xd(t,e,n,r){let i;function s(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let a=void 0!==n.precision?n.precision:"highp";const o=s(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);const l=!0===n.logarithmicDepthBuffer,u=!0===n.reverseDepthBuffer&&e.has("EXT_clip_control"),c=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),h=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS);return{isWebGL2:!0,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");i=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:s,textureFormatReadable:function(e){return e===jt||r.convert(e)===t.getParameter(t.IMPLEMENTATION_COLOR_READ_FORMAT)},textureTypeReadable:function(n){const i=n===Ut&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(n!==Nt&&r.convert(n)!==t.getParameter(t.IMPLEMENTATION_COLOR_READ_TYPE)&&n!==$t&&!i)},precision:a,logarithmicDepthBuffer:l,reverseDepthBuffer:u,maxTextures:c,maxVertexTextures:h,maxTextureSize:t.getParameter(t.MAX_TEXTURE_SIZE),maxCubemapSize:t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),maxAttributes:t.getParameter(t.MAX_VERTEX_ATTRIBS),maxVertexUniforms:t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),maxVaryings:t.getParameter(t.MAX_VARYING_VECTORS),maxFragmentUniforms:t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),vertexTextures:h>0,maxSamples:t.getParameter(t.MAX_SAMPLES)}}function Kd(t){const e=this;let n=null,r=0,i=!1,s=!1;const a=new uo,o=new lr,l={value:null,needsUpdate:!1};function u(t,n,r,i){const s=null!==t?t.length:0;let u=null;if(0!==s){if(u=l.value,!0!==i||null===u){const e=r+4*s,i=n.matrixWorldInverse;o.getNormalMatrix(i),(null===u||u.length<e)&&(u=new Float32Array(e));for(let e=0,n=r;e!==s;++e,n+=4)a.copy(t[e]).applyMatrix4(i,o),a.normal.toArray(u,n),u[n+3]=a.constant}l.value=u,l.needsUpdate=!0}return e.numPlanes=s,e.numIntersection=0,u}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e){const n=0!==t.length||e||0!==r||i;return i=e,r=t.length,n},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(t,e){n=u(t,e,0)},this.setState=function(a,o,c){const h=a.clippingPlanes,d=a.clipIntersection,p=a.clipShadows,f=t.get(a);if(!i||null===h||0===h.length||s&&!p)s?u(null):(l.value!==n&&(l.value=n,l.needsUpdate=r>0),e.numPlanes=r,e.numIntersection=0);else{const t=s?0:r,e=4*t;let i=f.clippingState||null;l.value=i,i=u(h,o,e,c);for(let t=0;t!==e;++t)i[t]=n[t];f.clippingState=i,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function Yd(t){let e=new WeakMap;function n(t,e){return e===gt?t.mapping=ft:e===xt&&(t.mapping=mt),t}function r(t){const n=t.target;n.removeEventListener("dispose",r);const i=e.get(n);void 0!==i&&(e.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture){const s=i.mapping;if(s===gt||s===xt){if(e.has(i))return n(e.get(i).texture,i.mapping);{const s=i.image;if(s&&s.height>0){const a=new oa(s.height);return a.fromEquirectangularTexture(t,i),e.set(i,a),i.addEventListener("dispose",r),n(a.texture,i.mapping)}return null}}}return i},dispose:function(){e=new WeakMap}}}const Zd=[.125,.215,.35,.446,.526,.582],Jd=new zc,Qd=new rs;let tp=null,ep=0,np=0,rp=!1;const ip=(1+Math.sqrt(5))/2,sp=1/ip,ap=[new sr(-ip,sp,0),new sr(ip,sp,0),new sr(-sp,0,ip),new sr(sp,0,ip),new sr(0,ip,-sp),new sr(0,ip,sp),new sr(-1,1,-1),new sr(1,1,-1),new sr(-1,1,1),new sr(1,1,1)],op=new sr;class lp{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,r=100,i={}){const{size:s=256,position:a=op}=i;tp=this._renderer.getRenderTarget(),ep=this._renderer.getActiveCubeFace(),np=this._renderer.getActiveMipmapLevel(),rp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(s);const o=this._allocateTargets();return o.depthBuffer=!0,this._sceneToCubeUV(t,n,r,o,a),e>0&&this._blur(o,0,0,e),this._applyPMREM(o),this._cleanup(o),o}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=dp(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=hp(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(tp,ep,np),this._renderer.xr.enabled=rp,t.scissorTest=!1,cp(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===ft||t.mapping===mt?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),tp=this._renderer.getRenderTarget(),ep=this._renderer.getActiveCubeFace(),np=this._renderer.getActiveMipmapLevel(),rp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:It,minFilter:It,generateMipmaps:!1,type:Ut,format:jt,colorSpace:en,depthBuffer:!1},r=up(t,e,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=up(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(t){const e=[],n=[],r=[];let i=t;const s=t-4+1+Zd.length;for(let a=0;a<s;a++){const s=Math.pow(2,i);n.push(s);let o=1/s;a>t-4?o=Zd[a-t+4-1]:0===a&&(o=0),r.push(o);const l=1/(s-2),u=-l,c=1+l,h=[u,u,c,u,c,c,u,u,c,c,u,c],d=6,p=6,f=3,m=2,g=1,x=new Float32Array(f*p*d),y=new Float32Array(m*p*d),v=new Float32Array(g*p*d);for(let t=0;t<d;t++){const e=t%3*2/3-1,n=t>2?0:-1,r=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];x.set(r,f*p*t),y.set(h,m*p*t);const i=[t,t,t,t,t,t];v.set(i,g*p*t)}const b=new Ds;b.setAttribute("position",new gs(x,f)),b.setAttribute("uv",new gs(y,m)),b.setAttribute("faceIndex",new gs(v,g)),e.push(b),i>4&&i--}return{lodPlanes:e,sizeLods:n,sigmas:r}}(r)),this._blurMaterial=function(t,e,n){const r=new Float32Array(20),i=new sr(0,1,0);return new Js({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:b,depthTest:!1,depthWrite:!1})}(r,t,e)}return r}_compileMaterial(t){const e=new Hs(this._lodPlanes[0],t);this._renderer.compile(e,Jd)}_sceneToCubeUV(t,e,n,r,i){const s=new ra(90,1,e,n),a=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],l=this._renderer,u=l.autoClear,c=l.toneMapping;l.getClearColor(Qd),l.toneMapping=rt,l.autoClear=!1;const h=new os({name:"PMREM.Background",side:y,depthWrite:!1,depthTest:!1}),d=new Hs(new qs,h);let p=!1;const f=t.background;f?f.isColor&&(h.color.copy(f),t.background=null,p=!0):(h.color.copy(Qd),p=!0);for(let e=0;e<6;e++){const n=e%3;0===n?(s.up.set(0,a[e],0),s.position.set(i.x,i.y,i.z),s.lookAt(i.x+o[e],i.y,i.z)):1===n?(s.up.set(0,0,a[e]),s.position.set(i.x,i.y,i.z),s.lookAt(i.x,i.y+o[e],i.z)):(s.up.set(0,a[e],0),s.position.set(i.x,i.y,i.z),s.lookAt(i.x,i.y,i.z+o[e]));const u=this._cubeSize;cp(r,n*u,e>2?u:0,u,u),l.setRenderTarget(r),p&&l.render(d,s),l.render(t,s)}d.geometry.dispose(),d.material.dispose(),l.toneMapping=c,l.autoClear=u,t.background=f}_textureToCubeUV(t,e){const n=this._renderer,r=t.mapping===ft||t.mapping===mt;r?(null===this._cubemapMaterial&&(this._cubemapMaterial=dp()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=hp());const i=r?this._cubemapMaterial:this._equirectMaterial,s=new Hs(this._lodPlanes[0],i);i.uniforms.envMap.value=t;const a=this._cubeSize;cp(e,0,0,3*a,2*a),n.setRenderTarget(e),n.render(s,Jd)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const r=this._lodPlanes.length;for(let e=1;e<r;e++){const n=Math.sqrt(this._sigmas[e]*this._sigmas[e]-this._sigmas[e-1]*this._sigmas[e-1]),i=ap[(r-e-1)%ap.length];this._blur(t,e-1,e,n,i)}e.autoClear=n}_blur(t,e,n,r,i){const s=this._pingPongRenderTarget;this._halfBlur(t,s,e,n,r,"latitudinal",i),this._halfBlur(s,t,n,n,r,"longitudinal",i)}_halfBlur(t,e,n,r,i,s,a){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==s&&"longitudinal"!==s&&console.error("blur direction must be either latitudinal or longitudinal!");const u=new Hs(this._lodPlanes[r],l),c=l.uniforms,h=this._sizeLods[n]-1,d=isFinite(i)?Math.PI/(2*h):2*Math.PI/39,p=i/d,f=isFinite(i)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);const m=[];let g=0;for(let t=0;t<20;++t){const e=t/p,n=Math.exp(-e*e/2);m.push(n),0===t?g+=n:t<f&&(g+=2*n)}for(let t=0;t<m.length;t++)m[t]=m[t]/g;c.envMap.value=t.texture,c.samples.value=f,c.weights.value=m,c.latitudinal.value="latitudinal"===s,a&&(c.poleAxis.value=a);const{_lodMax:x}=this;c.dTheta.value=d,c.mipInt.value=x-n;const y=this._sizeLods[r];cp(e,3*y*(r>x-4?r-x+4:0),4*(this._cubeSize-y),3*y,2*y),o.setRenderTarget(e),o.render(u,Jd)}}function up(t,e,n){const r=new Dr(t,e,n);return r.texture.mapping=yt,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function cp(t,e,n,r,i){t.viewport.set(e,n,r,i),t.scissor.set(e,n,r,i)}function hp(){return new Js({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:b,depthTest:!1,depthWrite:!1})}function dp(){return new Js({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:b,depthTest:!1,depthWrite:!1})}function pp(t){let e=new WeakMap,n=null;function r(t){const n=t.target;n.removeEventListener("dispose",r);const i=e.get(n);void 0!==i&&(e.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture){const s=i.mapping,a=s===gt||s===xt,o=s===ft||s===mt;if(a||o){let s=e.get(i);const l=void 0!==s?s.texture.pmremVersion:0;if(i.isRenderTargetTexture&&i.pmremVersion!==l)return null===n&&(n=new lp(t)),s=a?n.fromEquirectangular(i,s):n.fromCubemap(i,s),s.texture.pmremVersion=i.pmremVersion,e.set(i,s),s.texture;if(void 0!==s)return s.texture;{const l=i.image;return a&&l&&l.height>0||o&&l&&function(t){let e=0;for(let n=0;n<6;n++)void 0!==t[n]&&e++;return 6===e}(l)?(null===n&&(n=new lp(t)),s=a?n.fromEquirectangular(i):n.fromCubemap(i),s.texture.pmremVersion=i.pmremVersion,e.set(i,s),i.addEventListener("dispose",r),s.texture):null}}}return i},dispose:function(){e=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function fp(t){const e={};function n(n){if(void 0!==e[n])return e[n];let r;switch(n){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(n)}return e[n]=r,r}return{has:function(t){return null!==n(t)},init:function(){n("EXT_color_buffer_float"),n("WEBGL_clip_cull_distance"),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture"),n("WEBGL_render_shared_exponent")},get:function(t){const e=n(t);return null===e&&gr("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function mp(t,e,n,r){const i={},s=new WeakMap;function a(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const t in o.attributes)e.remove(o.attributes[t]);o.removeEventListener("dispose",a),delete i[o.id];const l=s.get(o);l&&(e.remove(l),s.delete(o)),r.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t){const n=[],r=t.index,i=t.attributes.position;let a=0;if(null!==r){const t=r.array;a=r.version;for(let e=0,r=t.length;e<r;e+=3){const r=t[e+0],i=t[e+1],s=t[e+2];n.push(r,i,i,s,s,r)}}else{if(void 0===i)return;{const t=i.array;a=i.version;for(let e=0,r=t.length/3-1;e<r;e+=3){const t=e+0,r=e+1,i=e+2;n.push(t,r,r,i,i,t)}}}const o=new(cr(n)?Ss:ws)(n,1);o.version=a;const l=s.get(t);l&&e.remove(l),s.set(t,o)}return{get:function(t,e){return!0===i[e.id]||(e.addEventListener("dispose",a),i[e.id]=!0,n.memory.geometries++),e},update:function(n){const r=n.attributes;for(const n in r)e.update(r[n],t.ARRAY_BUFFER)},getWireframeAttribute:function(t){const e=s.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&o(t)}else o(t);return s.get(t)}}}function gp(t,e,n){let r,i,s;function a(e,a,o){0!==o&&(t.drawElementsInstanced(r,a,i,e*s,o),n.update(a,r,o))}this.setMode=function(t){r=t},this.setIndex=function(t){i=t.type,s=t.bytesPerElement},this.render=function(e,a){t.drawElements(r,a,i,e*s),n.update(a,r,1)},this.renderInstances=a,this.renderMultiDraw=function(t,s,a){if(0===a)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(r,s,0,i,t,0,a);let o=0;for(let t=0;t<a;t++)o+=s[t];n.update(o,r,1)},this.renderMultiDrawInstances=function(t,o,l,u){if(0===l)return;const c=e.get("WEBGL_multi_draw");if(null===c)for(let e=0;e<t.length;e++)a(t[e]/s,o[e],u[e]);else{c.multiDrawElementsInstancedWEBGL(r,o,0,i,t,0,u,0,l);let e=0;for(let t=0;t<l;t++)e+=o[t]*u[t];n.update(e,r,1)}}}function xp(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(n,r,i){switch(e.calls++,r){case t.TRIANGLES:e.triangles+=i*(n/3);break;case t.LINES:e.lines+=i*(n/2);break;case t.LINE_STRIP:e.lines+=i*(n-1);break;case t.LINE_LOOP:e.lines+=i*n;break;case t.POINTS:e.points+=i*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r)}}}}function yp(t,e,n){const r=new WeakMap,i=new Rr;return{update:function(s,a,o){const l=s.morphTargetInfluences,u=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,c=void 0!==u?u.length:0;let h=r.get(a);if(void 0===h||h.count!==c){void 0!==h&&h.texture.dispose();const d=void 0!==a.morphAttributes.position,p=void 0!==a.morphAttributes.normal,f=void 0!==a.morphAttributes.color,m=a.morphAttributes.position||[],g=a.morphAttributes.normal||[],x=a.morphAttributes.color||[];let y=0;!0===d&&(y=1),!0===p&&(y=2),!0===f&&(y=3);let v=a.attributes.position.count*y,b=1;v>e.maxTextureSize&&(b=Math.ceil(v/e.maxTextureSize),v=e.maxTextureSize);const w=new Float32Array(v*b*4*c),_=new Lr(w,v,b,c);_.type=$t,_.needsUpdate=!0;const S=4*y;for(let M=0;M<c;M++){const E=m[M],I=g[M],C=x[M],k=v*b*4*M;for(let A=0;A<E.count;A++){const R=A*S;!0===d&&(i.fromBufferAttribute(E,A),w[k+R+0]=i.x,w[k+R+1]=i.y,w[k+R+2]=i.z,w[k+R+3]=0),!0===p&&(i.fromBufferAttribute(I,A),w[k+R+4]=i.x,w[k+R+5]=i.y,w[k+R+6]=i.z,w[k+R+7]=0),!0===f&&(i.fromBufferAttribute(C,A),w[k+R+8]=i.x,w[k+R+9]=i.y,w[k+R+10]=i.z,w[k+R+11]=4===C.itemSize?i.w:1)}}function T(){_.dispose(),r.delete(a),a.removeEventListener("dispose",T)}h={count:c,texture:_,size:new rr(v,b)},r.set(a,h),a.addEventListener("dispose",T)}if(!0===s.isInstancedMesh&&null!==s.morphTexture)o.getUniforms().setValue(t,"morphTexture",s.morphTexture,n);else{let N=0;for(let L=0;L<l.length;L++)N+=l[L];const D=a.morphTargetsRelative?1:1-N;o.getUniforms().setValue(t,"morphTargetBaseInfluence",D),o.getUniforms().setValue(t,"morphTargetInfluences",l)}o.getUniforms().setValue(t,"morphTargetsTexture",h.texture,n),o.getUniforms().setValue(t,"morphTargetsTextureSize",h.size)}}}function vp(t,e,n,r){let i=new WeakMap;function s(t){const e=t.target;e.removeEventListener("dispose",s),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(a){const o=r.render.frame,l=a.geometry,u=e.get(a,l);if(i.get(u)!==o&&(e.update(u),i.set(u,o)),a.isInstancedMesh&&(!1===a.hasEventListener("dispose",s)&&a.addEventListener("dispose",s),i.get(a)!==o&&(n.update(a.instanceMatrix,t.ARRAY_BUFFER),null!==a.instanceColor&&n.update(a.instanceColor,t.ARRAY_BUFFER),i.set(a,o))),a.isSkinnedMesh){const t=a.skeleton;i.get(t)!==o&&(t.update(),i.set(t,o))}return u},dispose:function(){i=new WeakMap}}}const bp=new Ar,wp=new cl(1,1),_p=new Lr,Sp=new Pr,Tp=new aa,Mp=[],Ep=[],Ip=new Float32Array(16),Cp=new Float32Array(9),kp=new Float32Array(4);function Ap(t,e,n){const r=t[0];if(r<=0||r>0)return t;const i=e*n;let s=Mp[i];if(void 0===s&&(s=new Float32Array(i),Mp[i]=s),0!==e){r.toArray(s,0);for(let r=1,i=0;r!==e;++r)i+=n,t[r].toArray(s,i)}return s}function Rp(t,e){if(t.length!==e.length)return!1;for(let n=0,r=t.length;n<r;n++)if(t[n]!==e[n])return!1;return!0}function Np(t,e){for(let n=0,r=e.length;n<r;n++)t[n]=e[n]}function Dp(t,e){let n=Ep[e];void 0===n&&(n=new Int32Array(e),Ep[e]=n);for(let r=0;r!==e;++r)n[r]=t.allocateTextureUnit();return n}function Lp(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function Fp(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Rp(n,e))return;t.uniform2fv(this.addr,e),Np(n,e)}}function Pp(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Rp(n,e))return;t.uniform3fv(this.addr,e),Np(n,e)}}function Op(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Rp(n,e))return;t.uniform4fv(this.addr,e),Np(n,e)}}function $p(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(Rp(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Np(n,e)}else{if(Rp(n,r))return;kp.set(r),t.uniformMatrix2fv(this.addr,!1,kp),Np(n,r)}}function Up(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(Rp(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Np(n,e)}else{if(Rp(n,r))return;Cp.set(r),t.uniformMatrix3fv(this.addr,!1,Cp),Np(n,r)}}function zp(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(Rp(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Np(n,e)}else{if(Rp(n,r))return;Ip.set(r),t.uniformMatrix4fv(this.addr,!1,Ip),Np(n,r)}}function Bp(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function Vp(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2i(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Rp(n,e))return;t.uniform2iv(this.addr,e),Np(n,e)}}function Wp(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3i(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(Rp(n,e))return;t.uniform3iv(this.addr,e),Np(n,e)}}function Gp(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4i(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Rp(n,e))return;t.uniform4iv(this.addr,e),Np(n,e)}}function Hp(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function jp(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2ui(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Rp(n,e))return;t.uniform2uiv(this.addr,e),Np(n,e)}}function qp(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3ui(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(Rp(n,e))return;t.uniform3uiv(this.addr,e),Np(n,e)}}function Xp(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4ui(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Rp(n,e))return;t.uniform4uiv(this.addr,e),Np(n,e)}}function Kp(t,e,n){const r=this.cache,i=n.allocateTextureUnit();let s;r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),this.type===t.SAMPLER_2D_SHADOW?(wp.compareFunction=Tn,s=wp):s=bp,n.setTexture2D(e||s,i)}function Yp(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(e||Sp,i)}function Zp(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTextureCube(e||Tp,i)}function Jp(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(e||_p,i)}function Qp(t,e){t.uniform1fv(this.addr,e)}function tf(t,e){const n=Ap(e,this.size,2);t.uniform2fv(this.addr,n)}function ef(t,e){const n=Ap(e,this.size,3);t.uniform3fv(this.addr,n)}function nf(t,e){const n=Ap(e,this.size,4);t.uniform4fv(this.addr,n)}function rf(t,e){const n=Ap(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function sf(t,e){const n=Ap(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function af(t,e){const n=Ap(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function of(t,e){t.uniform1iv(this.addr,e)}function lf(t,e){t.uniform2iv(this.addr,e)}function uf(t,e){t.uniform3iv(this.addr,e)}function cf(t,e){t.uniform4iv(this.addr,e)}function hf(t,e){t.uniform1uiv(this.addr,e)}function df(t,e){t.uniform2uiv(this.addr,e)}function pf(t,e){t.uniform3uiv(this.addr,e)}function ff(t,e){t.uniform4uiv(this.addr,e)}function mf(t,e,n){const r=this.cache,i=e.length,s=Dp(n,i);Rp(r,s)||(t.uniform1iv(this.addr,s),Np(r,s));for(let t=0;t!==i;++t)n.setTexture2D(e[t]||bp,s[t])}function gf(t,e,n){const r=this.cache,i=e.length,s=Dp(n,i);Rp(r,s)||(t.uniform1iv(this.addr,s),Np(r,s));for(let t=0;t!==i;++t)n.setTexture3D(e[t]||Sp,s[t])}function xf(t,e,n){const r=this.cache,i=e.length,s=Dp(n,i);Rp(r,s)||(t.uniform1iv(this.addr,s),Np(r,s));for(let t=0;t!==i;++t)n.setTextureCube(e[t]||Tp,s[t])}function yf(t,e,n){const r=this.cache,i=e.length,s=Dp(n,i);Rp(r,s)||(t.uniform1iv(this.addr,s),Np(r,s));for(let t=0;t!==i;++t)n.setTexture2DArray(e[t]||_p,s[t])}class vf{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=function(t){switch(t){case 5126:return Lp;case 35664:return Fp;case 35665:return Pp;case 35666:return Op;case 35674:return $p;case 35675:return Up;case 35676:return zp;case 5124:case 35670:return Bp;case 35667:case 35671:return Vp;case 35668:case 35672:return Wp;case 35669:case 35673:return Gp;case 5125:return Hp;case 36294:return jp;case 36295:return qp;case 36296:return Xp;case 35678:case 36198:case 36298:case 36306:case 35682:return Kp;case 35679:case 36299:case 36307:return Yp;case 35680:case 36300:case 36308:case 36293:return Zp;case 36289:case 36303:case 36311:case 36292:return Jp}}(e.type)}}class bf{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Qp;case 35664:return tf;case 35665:return ef;case 35666:return nf;case 35674:return rf;case 35675:return sf;case 35676:return af;case 5124:case 35670:return of;case 35667:case 35671:return lf;case 35668:case 35672:return uf;case 35669:case 35673:return cf;case 5125:return hf;case 36294:return df;case 36295:return pf;case 36296:return ff;case 35678:case 36198:case 36298:case 36306:case 35682:return mf;case 35679:case 36299:case 36307:return gf;case 35680:case 36300:case 36308:case 36293:return xf;case 36289:case 36303:case 36311:case 36292:return yf}}(e.type)}}class wf{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const r=this.seq;for(let i=0,s=r.length;i!==s;++i){const s=r[i];s.setValue(t,e[s.id],n)}}}const _f=/(\w+)(\])?(\[|\.)?/g;function Sf(t,e){t.seq.push(e),t.map[e.id]=e}function Tf(t,e,n){const r=t.name,i=r.length;for(_f.lastIndex=0;;){const s=_f.exec(r),a=_f.lastIndex;let o=s[1];const l="]"===s[2],u=s[3];if(l&&(o|=0),void 0===u||"["===u&&a+2===i){Sf(n,void 0===u?new vf(o,t,e):new bf(o,t,e));break}{let t=n.map[o];void 0===t&&(t=new wf(o),Sf(n,t)),n=t}}}class Mf{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let r=0;r<n;++r){const n=t.getActiveUniform(e,r);Tf(n,t.getUniformLocation(e,n.name),this)}}setValue(t,e,n,r){const i=this.map[e];void 0!==i&&i.setValue(t,n,r)}setOptional(t,e,n){const r=e[n];void 0!==r&&this.setValue(t,n,r)}static upload(t,e,n,r){for(let i=0,s=e.length;i!==s;++i){const s=e[i],a=n[s.id];!1!==a.needsUpdate&&s.setValue(t,a.value,r)}}static seqWithValue(t,e){const n=[];for(let r=0,i=t.length;r!==i;++r){const i=t[r];i.id in e&&n.push(i)}return n}}function Ef(t,e,n){const r=t.createShader(e);return t.shaderSource(r,n),t.compileShader(r),r}let If=0;const Cf=new lr;function kf(t,e,n){const r=t.getShaderParameter(e,t.COMPILE_STATUS),i=t.getShaderInfoLog(e).trim();if(r&&""===i)return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const r=parseInt(s[1]);return n.toUpperCase()+"\n\n"+i+"\n\n"+function(t,e){const n=t.split("\n"),r=[],i=Math.max(e-6,0),s=Math.min(e+6,n.length);for(let t=i;t<s;t++){const i=t+1;r.push(`${i===e?">":" "} ${i}: ${n[t]}`)}return r.join("\n")}(t.getShaderSource(e),r)}return i}function Af(t,e){const n=function(t){br._getMatrix(Cf,br.workingColorSpace,t);const e=`mat3( ${Cf.elements.map(t=>t.toFixed(4))} )`;switch(br.getTransfer(t)){case nn:return[e,"LinearTransferOETF"];case rn:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",t),[e,"LinearTransferOETF"]}}(e);return[`vec4 ${t}( vec4 value ) {`,`\treturn ${n[1]}( vec4( value.rgb * ${n[0]}, value.a ) );`,"}"].join("\n")}function Rf(t,e){let n;switch(e){case it:n="Linear";break;case st:n="Reinhard";break;case at:n="Cineon";break;case ot:n="ACESFilmic";break;case ut:n="AgX";break;case ct:n="Neutral";break;case lt:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}const Nf=new sr;function Df(t){return""!==t}function Lf(t,e){const n=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Ff(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Pf=/^[ \t]*#include +<([\w\d./]+)>/gm;function Of(t){return t.replace(Pf,Uf)}const $f=new Map;function Uf(t,e){let n=Ud[e];if(void 0===n){const t=$f.get(e);if(void 0===t)throw new Error("Can not resolve #include <"+e+">");n=Ud[t],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,t)}return Of(n)}const zf=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Bf(t){return t.replace(zf,Vf)}function Vf(t,e,n,r){let i="";for(let t=parseInt(e);t<parseInt(n);t++)i+=r.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return i}function Wf(t){let e=`precision ${t.precision} float;\n\tprecision ${t.precision} int;\n\tprecision ${t.precision} sampler2D;\n\tprecision ${t.precision} samplerCube;\n\tprecision ${t.precision} sampler3D;\n\tprecision ${t.precision} sampler2DArray;\n\tprecision ${t.precision} sampler2DShadow;\n\tprecision ${t.precision} samplerCubeShadow;\n\tprecision ${t.precision} sampler2DArrayShadow;\n\tprecision ${t.precision} isampler2D;\n\tprecision ${t.precision} isampler3D;\n\tprecision ${t.precision} isamplerCube;\n\tprecision ${t.precision} isampler2DArray;\n\tprecision ${t.precision} usampler2D;\n\tprecision ${t.precision} usampler3D;\n\tprecision ${t.precision} usamplerCube;\n\tprecision ${t.precision} usampler2DArray;\n\t`;return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Gf(t,e,n,r){const i=t.getContext(),s=n.defines;let a=n.vertexShader,o=n.fragmentShader;const l=function(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===f?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===m?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===g&&(e="SHADOWMAP_TYPE_VSM"),e}(n),u=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case ft:case mt:e="ENVMAP_TYPE_CUBE";break;case yt:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),c=function(t){let e="ENVMAP_MODE_REFLECTION";return t.envMap&&t.envMapMode===mt&&(e="ENVMAP_MODE_REFRACTION"),e}(n),h=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case tt:e="ENVMAP_BLENDING_MULTIPLY";break;case et:e="ENVMAP_BLENDING_MIX";break;case nt:e="ENVMAP_BLENDING_ADD"}return e}(n),d=function(t){const e=t.envMapCubeUVHeight;if(null===e)return null;const n=Math.log2(e)-2,r=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:r,maxMip:n}}(n),p=function(t){return[t.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",t.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Df).join("\n")}(n),x=function(t){const e=[];for(const n in t){const r=t[n];!1!==r&&e.push("#define "+n+" "+r)}return e.join("\n")}(s),y=i.createProgram();let v,b,w=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(v=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,x].filter(Df).join("\n"),v.length>0&&(v+="\n"),b=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,x].filter(Df).join("\n"),b.length>0&&(b+="\n")):(v=[Wf(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,x,n.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",n.batching?"#define USE_BATCHING":"",n.batchingColor?"#define USE_BATCHING_COLOR":"",n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.instancingMorph?"#define USE_INSTANCING_MORPH":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","\tuniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Df).join("\n"),b=[Wf(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,x,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.dispersion?"#define USE_DISPERSION":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor||n.batchingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==rt?"#define TONE_MAPPING":"",n.toneMapping!==rt?Ud.tonemapping_pars_fragment:"",n.toneMapping!==rt?Rf("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Ud.colorspace_pars_fragment,Af("linearToOutputTexel",n.outputColorSpace),(br.getLuminanceCoefficients(Nf),["float luminance( const in vec3 rgb ) {",`\tconst vec3 weights = vec3( ${Nf.x.toFixed(4)}, ${Nf.y.toFixed(4)}, ${Nf.z.toFixed(4)} );`,"\treturn dot( weights, rgb );","}"].join("\n")),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Df).join("\n")),a=Of(a),a=Lf(a,n),a=Ff(a,n),o=Of(o),o=Lf(o,n),o=Ff(o,n),a=Bf(a),o=Bf(o),!0!==n.isRawShaderMaterial&&(w="#version 300 es\n",v=[p,"#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+v,b=["#define varying in",n.glslVersion===Un?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===Un?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+b);const _=w+v+a,S=w+b+o,T=Ef(i,i.VERTEX_SHADER,_),M=Ef(i,i.FRAGMENT_SHADER,S);function E(e){if(t.debug.checkShaderErrors){const n=i.getProgramInfoLog(y).trim(),r=i.getShaderInfoLog(T).trim(),s=i.getShaderInfoLog(M).trim();let a=!0,o=!0;if(!1===i.getProgramParameter(y,i.LINK_STATUS))if(a=!1,"function"==typeof t.debug.onShaderError)t.debug.onShaderError(i,y,T,M);else{const t=kf(i,T,"vertex"),r=kf(i,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(y,i.VALIDATE_STATUS)+"\n\nMaterial Name: "+e.name+"\nMaterial Type: "+e.type+"\n\nProgram Info Log: "+n+"\n"+t+"\n"+r)}else""!==n?console.warn("THREE.WebGLProgram: Program Info Log:",n):""!==r&&""!==s||(o=!1);o&&(e.diagnostics={runnable:a,programLog:n,vertexShader:{log:r,prefix:v},fragmentShader:{log:s,prefix:b}})}i.deleteShader(T),i.deleteShader(M),I=new Mf(i,y),C=function(t,e){const n={},r=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES);for(let i=0;i<r;i++){const r=t.getActiveAttrib(e,i),s=r.name;let a=1;r.type===t.FLOAT_MAT2&&(a=2),r.type===t.FLOAT_MAT3&&(a=3),r.type===t.FLOAT_MAT4&&(a=4),n[s]={type:r.type,location:t.getAttribLocation(e,s),locationSize:a}}return n}(i,y)}let I,C;i.attachShader(y,T),i.attachShader(y,M),void 0!==n.index0AttributeName?i.bindAttribLocation(y,0,n.index0AttributeName):!0===n.morphTargets&&i.bindAttribLocation(y,0,"position"),i.linkProgram(y),this.getUniforms=function(){return void 0===I&&E(this),I},this.getAttributes=function(){return void 0===C&&E(this),C};let k=!1===n.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===k&&(k=i.getProgramParameter(y,37297)),k},this.destroy=function(){r.releaseStatesOfProgram(this),i.deleteProgram(y),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=If++,this.cacheKey=e,this.usedTimes=1,this.program=y,this.vertexShader=T,this.fragmentShader=M,this}let Hf=0;class jf{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,r=this._getShaderStage(e),i=this._getShaderStage(n),s=this._getShaderCacheForMaterial(t);return!1===s.has(r)&&(s.add(r),r.usedTimes++),!1===s.has(i)&&(s.add(i),i.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const t of e)t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return void 0===n&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return void 0===n&&(n=new qf(t),e.set(t,n)),n}}class qf{constructor(t){this.id=Hf++,this.code=t,this.usedTimes=0}}function Xf(t,e,n,r,i,s,a){const o=new _i,l=new jf,u=new Set,c=[],h=i.logarithmicDepthBuffer,d=i.vertexTextures;let p=i.precision;const f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function m(t){return u.add(t),0===t?"uv":`uv${t}`}return{getParameters:function(s,o,c,g,x){const b=g.fog,_=x.geometry,S=s.isMeshStandardMaterial?g.environment:null,T=(s.isMeshStandardMaterial?n:e).get(s.envMap||S),M=T&&T.mapping===yt?T.image.height:null,E=f[s.type];null!==s.precision&&(p=i.getMaxPrecision(s.precision),p!==s.precision&&console.warn("THREE.WebGLProgram.getParameters:",s.precision,"not supported, using",p,"instead."));const I=_.morphAttributes.position||_.morphAttributes.normal||_.morphAttributes.color,C=void 0!==I?I.length:0;let k,A,R,N,D=0;if(void 0!==_.morphAttributes.position&&(D=1),void 0!==_.morphAttributes.normal&&(D=2),void 0!==_.morphAttributes.color&&(D=3),E){const t=Bd[E];k=t.vertexShader,A=t.fragmentShader}else k=s.vertexShader,A=s.fragmentShader,l.update(s),R=l.getVertexShaderID(s),N=l.getFragmentShaderID(s);const L=t.getRenderTarget(),F=t.state.buffers.depth.getReversed(),P=!0===x.isInstancedMesh,O=!0===x.isBatchedMesh,$=!!s.map,U=!!s.matcap,z=!!T,B=!!s.aoMap,V=!!s.lightMap,W=!!s.bumpMap,G=!!s.normalMap,H=!!s.displacementMap,j=!!s.emissiveMap,q=!!s.metalnessMap,X=!!s.roughnessMap,K=s.anisotropy>0,Y=s.clearcoat>0,Z=s.dispersion>0,J=s.iridescence>0,Q=s.sheen>0,tt=s.transmission>0,et=K&&!!s.anisotropyMap,nt=Y&&!!s.clearcoatMap,it=Y&&!!s.clearcoatNormalMap,st=Y&&!!s.clearcoatRoughnessMap,at=J&&!!s.iridescenceMap,ot=J&&!!s.iridescenceThicknessMap,lt=Q&&!!s.sheenColorMap,ut=Q&&!!s.sheenRoughnessMap,ct=!!s.specularMap,ht=!!s.specularColorMap,dt=!!s.specularIntensityMap,pt=tt&&!!s.transmissionMap,ft=tt&&!!s.thicknessMap,mt=!!s.gradientMap,gt=!!s.alphaMap,xt=s.alphaTest>0,vt=!!s.alphaHash,bt=!!s.extensions;let wt=rt;s.toneMapped&&(null!==L&&!0!==L.isXRRenderTarget||(wt=t.toneMapping));const _t={shaderID:E,shaderType:s.type,shaderName:s.name,vertexShader:k,fragmentShader:A,defines:s.defines,customVertexShaderID:R,customFragmentShaderID:N,isRawShaderMaterial:!0===s.isRawShaderMaterial,glslVersion:s.glslVersion,precision:p,batching:O,batchingColor:O&&null!==x._colorsTexture,instancing:P,instancingColor:P&&null!==x.instanceColor,instancingMorph:P&&null!==x.morphTexture,supportsVertexTextures:d,outputColorSpace:null===L?t.outputColorSpace:!0===L.isXRRenderTarget?L.texture.colorSpace:en,alphaToCoverage:!!s.alphaToCoverage,map:$,matcap:U,envMap:z,envMapMode:z&&T.mapping,envMapCubeUVHeight:M,aoMap:B,lightMap:V,bumpMap:W,normalMap:G,displacementMap:d&&H,emissiveMap:j,normalMapObjectSpace:G&&s.normalMapType===Je,normalMapTangentSpace:G&&s.normalMapType===Ze,metalnessMap:q,roughnessMap:X,anisotropy:K,anisotropyMap:et,clearcoat:Y,clearcoatMap:nt,clearcoatNormalMap:it,clearcoatRoughnessMap:st,dispersion:Z,iridescence:J,iridescenceMap:at,iridescenceThicknessMap:ot,sheen:Q,sheenColorMap:lt,sheenRoughnessMap:ut,specularMap:ct,specularColorMap:ht,specularIntensityMap:dt,transmission:tt,transmissionMap:pt,thicknessMap:ft,gradientMap:mt,opaque:!1===s.transparent&&s.blending===w&&!1===s.alphaToCoverage,alphaMap:gt,alphaTest:xt,alphaHash:vt,combine:s.combine,mapUv:$&&m(s.map.channel),aoMapUv:B&&m(s.aoMap.channel),lightMapUv:V&&m(s.lightMap.channel),bumpMapUv:W&&m(s.bumpMap.channel),normalMapUv:G&&m(s.normalMap.channel),displacementMapUv:H&&m(s.displacementMap.channel),emissiveMapUv:j&&m(s.emissiveMap.channel),metalnessMapUv:q&&m(s.metalnessMap.channel),roughnessMapUv:X&&m(s.roughnessMap.channel),anisotropyMapUv:et&&m(s.anisotropyMap.channel),clearcoatMapUv:nt&&m(s.clearcoatMap.channel),clearcoatNormalMapUv:it&&m(s.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:st&&m(s.clearcoatRoughnessMap.channel),iridescenceMapUv:at&&m(s.iridescenceMap.channel),iridescenceThicknessMapUv:ot&&m(s.iridescenceThicknessMap.channel),sheenColorMapUv:lt&&m(s.sheenColorMap.channel),sheenRoughnessMapUv:ut&&m(s.sheenRoughnessMap.channel),specularMapUv:ct&&m(s.specularMap.channel),specularColorMapUv:ht&&m(s.specularColorMap.channel),specularIntensityMapUv:dt&&m(s.specularIntensityMap.channel),transmissionMapUv:pt&&m(s.transmissionMap.channel),thicknessMapUv:ft&&m(s.thicknessMap.channel),alphaMapUv:gt&&m(s.alphaMap.channel),vertexTangents:!!_.attributes.tangent&&(G||K),vertexColors:s.vertexColors,vertexAlphas:!0===s.vertexColors&&!!_.attributes.color&&4===_.attributes.color.itemSize,pointsUvs:!0===x.isPoints&&!!_.attributes.uv&&($||gt),fog:!!b,useFog:!0===s.fog,fogExp2:!!b&&b.isFogExp2,flatShading:!0===s.flatShading,sizeAttenuation:!0===s.sizeAttenuation,logarithmicDepthBuffer:h,reverseDepthBuffer:F,skinning:!0===x.isSkinnedMesh,morphTargets:void 0!==_.morphAttributes.position,morphNormals:void 0!==_.morphAttributes.normal,morphColors:void 0!==_.morphAttributes.color,morphTargetsCount:C,morphTextureStride:D,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numLightProbes:o.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:s.dithering,shadowMapEnabled:t.shadowMap.enabled&&c.length>0,shadowMapType:t.shadowMap.type,toneMapping:wt,decodeVideoTexture:$&&!0===s.map.isVideoTexture&&br.getTransfer(s.map.colorSpace)===rn,decodeVideoTextureEmissive:j&&!0===s.emissiveMap.isVideoTexture&&br.getTransfer(s.emissiveMap.colorSpace)===rn,premultipliedAlpha:s.premultipliedAlpha,doubleSided:s.side===v,flipSided:s.side===y,useDepthPacking:s.depthPacking>=0,depthPacking:s.depthPacking||0,index0AttributeName:s.index0AttributeName,extensionClipCullDistance:bt&&!0===s.extensions.clipCullDistance&&r.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(bt&&!0===s.extensions.multiDraw||O)&&r.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:r.has("KHR_parallel_shader_compile"),customProgramCacheKey:s.customProgramCacheKey()};return _t.vertexUv1s=u.has(1),_t.vertexUv2s=u.has(2),_t.vertexUv3s=u.has(3),u.clear(),_t},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.customVertexShaderID),n.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(function(t,e){t.push(e.precision),t.push(e.outputColorSpace),t.push(e.envMapMode),t.push(e.envMapCubeUVHeight),t.push(e.mapUv),t.push(e.alphaMapUv),t.push(e.lightMapUv),t.push(e.aoMapUv),t.push(e.bumpMapUv),t.push(e.normalMapUv),t.push(e.displacementMapUv),t.push(e.emissiveMapUv),t.push(e.metalnessMapUv),t.push(e.roughnessMapUv),t.push(e.anisotropyMapUv),t.push(e.clearcoatMapUv),t.push(e.clearcoatNormalMapUv),t.push(e.clearcoatRoughnessMapUv),t.push(e.iridescenceMapUv),t.push(e.iridescenceThicknessMapUv),t.push(e.sheenColorMapUv),t.push(e.sheenRoughnessMapUv),t.push(e.specularMapUv),t.push(e.specularColorMapUv),t.push(e.specularIntensityMapUv),t.push(e.transmissionMapUv),t.push(e.thicknessMapUv),t.push(e.combine),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.morphTargetsCount),t.push(e.morphAttributeCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numSpotLightMaps),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.numSpotLightShadowsWithMaps),t.push(e.numLightProbes),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection),t.push(e.depthPacking)}(n,e),function(t,e){o.disableAll(),e.supportsVertexTextures&&o.enable(0),e.instancing&&o.enable(1),e.instancingColor&&o.enable(2),e.instancingMorph&&o.enable(3),e.matcap&&o.enable(4),e.envMap&&o.enable(5),e.normalMapObjectSpace&&o.enable(6),e.normalMapTangentSpace&&o.enable(7),e.clearcoat&&o.enable(8),e.iridescence&&o.enable(9),e.alphaTest&&o.enable(10),e.vertexColors&&o.enable(11),e.vertexAlphas&&o.enable(12),e.vertexUv1s&&o.enable(13),e.vertexUv2s&&o.enable(14),e.vertexUv3s&&o.enable(15),e.vertexTangents&&o.enable(16),e.anisotropy&&o.enable(17),e.alphaHash&&o.enable(18),e.batching&&o.enable(19),e.dispersion&&o.enable(20),e.batchingColor&&o.enable(21),t.push(o.mask),o.disableAll(),e.fog&&o.enable(0),e.useFog&&o.enable(1),e.flatShading&&o.enable(2),e.logarithmicDepthBuffer&&o.enable(3),e.reverseDepthBuffer&&o.enable(4),e.skinning&&o.enable(5),e.morphTargets&&o.enable(6),e.morphNormals&&o.enable(7),e.morphColors&&o.enable(8),e.premultipliedAlpha&&o.enable(9),e.shadowMapEnabled&&o.enable(10),e.doubleSided&&o.enable(11),e.flipSided&&o.enable(12),e.useDepthPacking&&o.enable(13),e.dithering&&o.enable(14),e.transmission&&o.enable(15),e.sheen&&o.enable(16),e.opaque&&o.enable(17),e.pointsUvs&&o.enable(18),e.decodeVideoTexture&&o.enable(19),e.decodeVideoTextureEmissive&&o.enable(20),e.alphaToCoverage&&o.enable(21),t.push(o.mask)}(n,e),n.push(t.outputColorSpace)),n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=f[t.type];let n;if(e){const t=Bd[e];n=Zs.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let r;for(let t=0,e=c.length;t<e;t++){const e=c[t];if(e.cacheKey===n){r=e,++r.usedTimes;break}}return void 0===r&&(r=new Gf(t,n,e,s),c.push(r)),r},releaseProgram:function(t){if(0===--t.usedTimes){const e=c.indexOf(t);c[e]=c[c.length-1],c.pop(),t.destroy()}},releaseShaderCache:function(t){l.remove(t)},programs:c,dispose:function(){l.dispose()}}}function Kf(){let t=new WeakMap;return{has:function(e){return t.has(e)},get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,r){t.get(e)[n]=r},dispose:function(){t=new WeakMap}}}function Yf(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Zf(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Jf(){const t=[];let e=0;const n=[],r=[],i=[];function s(n,r,i,s,a,o){let l=t[e];return void 0===l?(l={id:n.id,object:n,geometry:r,material:i,groupOrder:s,renderOrder:n.renderOrder,z:a,group:o},t[e]=l):(l.id=n.id,l.object=n,l.geometry=r,l.material=i,l.groupOrder=s,l.renderOrder=n.renderOrder,l.z=a,l.group=o),e++,l}return{opaque:n,transmissive:r,transparent:i,init:function(){e=0,n.length=0,r.length=0,i.length=0},push:function(t,e,a,o,l,u){const c=s(t,e,a,o,l,u);a.transmission>0?r.push(c):!0===a.transparent?i.push(c):n.push(c)},unshift:function(t,e,a,o,l,u){const c=s(t,e,a,o,l,u);a.transmission>0?r.unshift(c):!0===a.transparent?i.unshift(c):n.unshift(c)},finish:function(){for(let n=e,r=t.length;n<r;n++){const e=t[n];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(t,e){n.length>1&&n.sort(t||Yf),r.length>1&&r.sort(e||Zf),i.length>1&&i.sort(e||Zf)}}}function Qf(){let t=new WeakMap;return{get:function(e,n){const r=t.get(e);let i;return void 0===r?(i=new Jf,t.set(e,[i])):n>=r.length?(i=new Jf,r.push(i)):i=r[n],i},dispose:function(){t=new WeakMap}}}function tm(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new sr,color:new rs};break;case"SpotLight":n={position:new sr,direction:new sr,color:new rs,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new sr,color:new rs,distance:0,decay:0};break;case"HemisphereLight":n={direction:new sr,skyColor:new rs,groundColor:new rs};break;case"RectAreaLight":n={color:new rs,position:new sr,halfWidth:new sr,halfHeight:new sr}}return t[e.id]=n,n}}}let em=0;function nm(t,e){return(e.castShadow?2:0)-(t.castShadow?2:0)+(e.map?1:0)-(t.map?1:0)}function rm(t){const e=new tm,n=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new rr};break;case"PointLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new rr,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let t=0;t<9;t++)r.probe.push(new sr);const i=new sr,s=new hi,a=new hi;return{setup:function(i){let s=0,a=0,o=0;for(let t=0;t<9;t++)r.probe[t].set(0,0,0);let l=0,u=0,c=0,h=0,d=0,p=0,f=0,m=0,g=0,x=0,y=0;i.sort(nm);for(let t=0,v=i.length;t<v;t++){const v=i[t],b=v.color,w=v.intensity,_=v.distance,S=v.shadow&&v.shadow.map?v.shadow.map.texture:null;if(v.isAmbientLight)s+=b.r*w,a+=b.g*w,o+=b.b*w;else if(v.isLightProbe){for(let t=0;t<9;t++)r.probe[t].addScaledVector(v.sh.coefficients[t],w);y++}else if(v.isDirectionalLight){const t=e.get(v);if(t.color.copy(v.color).multiplyScalar(v.intensity),v.castShadow){const t=v.shadow,e=n.get(v);e.shadowIntensity=t.intensity,e.shadowBias=t.bias,e.shadowNormalBias=t.normalBias,e.shadowRadius=t.radius,e.shadowMapSize=t.mapSize,r.directionalShadow[l]=e,r.directionalShadowMap[l]=S,r.directionalShadowMatrix[l]=v.shadow.matrix,p++}r.directional[l]=t,l++}else if(v.isSpotLight){const t=e.get(v);t.position.setFromMatrixPosition(v.matrixWorld),t.color.copy(b).multiplyScalar(w),t.distance=_,t.coneCos=Math.cos(v.angle),t.penumbraCos=Math.cos(v.angle*(1-v.penumbra)),t.decay=v.decay,r.spot[c]=t;const i=v.shadow;if(v.map&&(r.spotLightMap[g]=v.map,g++,i.updateMatrices(v),v.castShadow&&x++),r.spotLightMatrix[c]=i.matrix,v.castShadow){const t=n.get(v);t.shadowIntensity=i.intensity,t.shadowBias=i.bias,t.shadowNormalBias=i.normalBias,t.shadowRadius=i.radius,t.shadowMapSize=i.mapSize,r.spotShadow[c]=t,r.spotShadowMap[c]=S,m++}c++}else if(v.isRectAreaLight){const t=e.get(v);t.color.copy(b).multiplyScalar(w),t.halfWidth.set(.5*v.width,0,0),t.halfHeight.set(0,.5*v.height,0),r.rectArea[h]=t,h++}else if(v.isPointLight){const t=e.get(v);if(t.color.copy(v.color).multiplyScalar(v.intensity),t.distance=v.distance,t.decay=v.decay,v.castShadow){const t=v.shadow,e=n.get(v);e.shadowIntensity=t.intensity,e.shadowBias=t.bias,e.shadowNormalBias=t.normalBias,e.shadowRadius=t.radius,e.shadowMapSize=t.mapSize,e.shadowCameraNear=t.camera.near,e.shadowCameraFar=t.camera.far,r.pointShadow[u]=e,r.pointShadowMap[u]=S,r.pointShadowMatrix[u]=v.shadow.matrix,f++}r.point[u]=t,u++}else if(v.isHemisphereLight){const t=e.get(v);t.skyColor.copy(v.color).multiplyScalar(w),t.groundColor.copy(v.groundColor).multiplyScalar(w),r.hemi[d]=t,d++}}h>0&&(!0===t.has("OES_texture_float_linear")?(r.rectAreaLTC1=zd.LTC_FLOAT_1,r.rectAreaLTC2=zd.LTC_FLOAT_2):(r.rectAreaLTC1=zd.LTC_HALF_1,r.rectAreaLTC2=zd.LTC_HALF_2)),r.ambient[0]=s,r.ambient[1]=a,r.ambient[2]=o;const v=r.hash;v.directionalLength===l&&v.pointLength===u&&v.spotLength===c&&v.rectAreaLength===h&&v.hemiLength===d&&v.numDirectionalShadows===p&&v.numPointShadows===f&&v.numSpotShadows===m&&v.numSpotMaps===g&&v.numLightProbes===y||(r.directional.length=l,r.spot.length=c,r.rectArea.length=h,r.point.length=u,r.hemi.length=d,r.directionalShadow.length=p,r.directionalShadowMap.length=p,r.pointShadow.length=f,r.pointShadowMap.length=f,r.spotShadow.length=m,r.spotShadowMap.length=m,r.directionalShadowMatrix.length=p,r.pointShadowMatrix.length=f,r.spotLightMatrix.length=m+g-x,r.spotLightMap.length=g,r.numSpotLightShadowsWithMaps=x,r.numLightProbes=y,v.directionalLength=l,v.pointLength=u,v.spotLength=c,v.rectAreaLength=h,v.hemiLength=d,v.numDirectionalShadows=p,v.numPointShadows=f,v.numSpotShadows=m,v.numSpotMaps=g,v.numLightProbes=y,r.version=em++)},setupView:function(t,e){let n=0,o=0,l=0,u=0,c=0;const h=e.matrixWorldInverse;for(let e=0,d=t.length;e<d;e++){const d=t[e];if(d.isDirectionalLight){const t=r.directional[n];t.direction.setFromMatrixPosition(d.matrixWorld),i.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(i),t.direction.transformDirection(h),n++}else if(d.isSpotLight){const t=r.spot[l];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(h),t.direction.setFromMatrixPosition(d.matrixWorld),i.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(i),t.direction.transformDirection(h),l++}else if(d.isRectAreaLight){const t=r.rectArea[u];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(h),a.identity(),s.copy(d.matrixWorld),s.premultiply(h),a.extractRotation(s),t.halfWidth.set(.5*d.width,0,0),t.halfHeight.set(0,.5*d.height,0),t.halfWidth.applyMatrix4(a),t.halfHeight.applyMatrix4(a),u++}else if(d.isPointLight){const t=r.point[o];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(h),o++}else if(d.isHemisphereLight){const t=r.hemi[c];t.direction.setFromMatrixPosition(d.matrixWorld),t.direction.transformDirection(h),c++}}},state:r}}function im(t){const e=new rm(t),n=[],r=[],i={lightsArray:n,shadowsArray:r,camera:null,lights:e,transmissionRenderTarget:{}};return{init:function(t){i.camera=t,n.length=0,r.length=0},state:i,setupLights:function(){e.setup(n)},setupLightsView:function(t){e.setupView(n,t)},pushLight:function(t){n.push(t)},pushShadow:function(t){r.push(t)}}}function sm(t){let e=new WeakMap;return{get:function(n,r=0){const i=e.get(n);let s;return void 0===i?(s=new im(t),e.set(n,[s])):r>=i.length?(s=new im(t),i.push(s)):s=i[r],s},dispose:function(){e=new WeakMap}}}function am(t,e,n){let r=new po;const i=new rr,s=new rr,a=new Rr,o=new Gu({depthPacking:Xe}),l=new Hu,u={},c=n.maxTextureSize,h={[x]:y,[y]:x,[v]:v},d=new Js({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new rr},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=d.clone();p.defines.HORIZONTAL_PASS=1;const m=new Ds;m.setAttribute("position",new gs(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const w=new Hs(m,d),_=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=f;let S=this.type;function T(n,r){const s=e.update(w);d.defines.VSM_SAMPLES!==n.blurSamples&&(d.defines.VSM_SAMPLES=n.blurSamples,p.defines.VSM_SAMPLES=n.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new Dr(i.x,i.y)),d.uniforms.shadow_pass.value=n.map.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(r,null,s,d,w,null),p.uniforms.shadow_pass.value=n.mapPass.texture,p.uniforms.resolution.value=n.mapSize,p.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(r,null,s,p,w,null)}function M(e,n,r,i){let s=null;const a=!0===r.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(void 0!==a)s=a;else if(s=!0===r.isPointLight?l:o,t.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0||!0===n.alphaToCoverage){const t=s.uuid,e=n.uuid;let r=u[t];void 0===r&&(r={},u[t]=r);let i=r[e];void 0===i&&(i=s.clone(),r[e]=i,n.addEventListener("dispose",I)),s=i}return s.visible=n.visible,s.wireframe=n.wireframe,s.side=i===g?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:h[n.side],s.alphaMap=n.alphaMap,s.alphaTest=!0===n.alphaToCoverage?.5:n.alphaTest,s.map=n.map,s.clipShadows=n.clipShadows,s.clippingPlanes=n.clippingPlanes,s.clipIntersection=n.clipIntersection,s.displacementMap=n.displacementMap,s.displacementScale=n.displacementScale,s.displacementBias=n.displacementBias,s.wireframeLinewidth=n.wireframeLinewidth,s.linewidth=n.linewidth,!0===r.isPointLight&&!0===s.isMeshDistanceMaterial&&(t.properties.get(s).light=r),s}function E(n,i,s,a,o){if(!1===n.visible)return;if(n.layers.test(i.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&o===g)&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,n.matrixWorld);const r=e.update(n),l=n.material;if(Array.isArray(l)){const e=r.groups;for(let u=0,c=e.length;u<c;u++){const c=e[u],h=l[c.materialIndex];if(h&&h.visible){const e=M(n,h,a,o);n.onBeforeShadow(t,n,i,s,r,e,c),t.renderBufferDirect(s,null,r,e,n,c),n.onAfterShadow(t,n,i,s,r,e,c)}}}else if(l.visible){const e=M(n,l,a,o);n.onBeforeShadow(t,n,i,s,r,e,null),t.renderBufferDirect(s,null,r,e,n,null),n.onAfterShadow(t,n,i,s,r,e,null)}}const l=n.children;for(let t=0,e=l.length;t<e;t++)E(l[t],i,s,a,o)}function I(t){t.target.removeEventListener("dispose",I);for(const e in u){const n=u[e],r=t.target.uuid;r in n&&(n[r].dispose(),delete n[r])}}this.render=function(e,n,o){if(!1===_.enabled)return;if(!1===_.autoUpdate&&!1===_.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),u=t.getActiveCubeFace(),h=t.getActiveMipmapLevel(),d=t.state;d.setBlending(b),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);const p=S!==g&&this.type===g,f=S===g&&this.type!==g;for(let l=0,u=e.length;l<u;l++){const u=e[l],h=u.shadow;if(void 0===h){console.warn("THREE.WebGLShadowMap:",u,"has no shadow.");continue}if(!1===h.autoUpdate&&!1===h.needsUpdate)continue;i.copy(h.mapSize);const m=h.getFrameExtents();if(i.multiply(m),s.copy(h.mapSize),(i.x>c||i.y>c)&&(i.x>c&&(s.x=Math.floor(c/m.x),i.x=s.x*m.x,h.mapSize.x=s.x),i.y>c&&(s.y=Math.floor(c/m.y),i.y=s.y*m.y,h.mapSize.y=s.y)),null===h.map||!0===p||!0===f){const t=this.type!==g?{minFilter:_t,magFilter:_t}:{};null!==h.map&&h.map.dispose(),h.map=new Dr(i.x,i.y,t),h.map.texture.name=u.name+".shadowMap",h.camera.updateProjectionMatrix()}t.setRenderTarget(h.map),t.clear();const x=h.getViewportCount();for(let t=0;t<x;t++){const e=h.getViewport(t);a.set(s.x*e.x,s.y*e.y,s.x*e.z,s.y*e.w),d.viewport(a),h.updateMatrices(u,t),r=h.getFrustum(),E(n,o,h.camera,u,this.type)}!0!==h.isPointLightShadow&&this.type===g&&T(h,o),h.needsUpdate=!1}S=this.type,_.needsUpdate=!1,t.setRenderTarget(l,u,h)}}const om={[j]:q,[X]:J,[Y]:Q,[K]:Z,[q]:j,[J]:X,[Q]:Y,[Z]:K};function lm(t,e){const n=new function(){let e=!1;const n=new Rr;let r=null;const i=new Rr(0,0,0,0);return{setMask:function(n){r===n||e||(t.colorMask(n,n,n,n),r=n)},setLocked:function(t){e=t},setClear:function(e,r,s,a,o){!0===o&&(e*=a,r*=a,s*=a),n.set(e,r,s,a),!1===i.equals(n)&&(t.clearColor(e,r,s,a),i.copy(n))},reset:function(){e=!1,r=null,i.set(-1,0,0,0)}}},r=new function(){let n=!1,r=!1,i=null,s=null,a=null;return{setReversed:function(t){if(r!==t){const n=e.get("EXT_clip_control");t?n.clipControlEXT(n.LOWER_LEFT_EXT,n.ZERO_TO_ONE_EXT):n.clipControlEXT(n.LOWER_LEFT_EXT,n.NEGATIVE_ONE_TO_ONE_EXT),r=t;const i=a;a=null,this.setClear(i)}},getReversed:function(){return r},setTest:function(e){e?Mt(t.DEPTH_TEST):Et(t.DEPTH_TEST)},setMask:function(e){i===e||n||(t.depthMask(e),i=e)},setFunc:function(e){if(r&&(e=om[e]),s!==e){switch(e){case j:t.depthFunc(t.NEVER);break;case q:t.depthFunc(t.ALWAYS);break;case X:t.depthFunc(t.LESS);break;case K:t.depthFunc(t.LEQUAL);break;case Y:t.depthFunc(t.EQUAL);break;case Z:t.depthFunc(t.GEQUAL);break;case J:t.depthFunc(t.GREATER);break;case Q:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}s=e}},setLocked:function(t){n=t},setClear:function(e){a!==e&&(r&&(e=1-e),t.clearDepth(e),a=e)},reset:function(){n=!1,i=null,s=null,a=null,r=!1}}},i=new function(){let e=!1,n=null,r=null,i=null,s=null,a=null,o=null,l=null,u=null;return{setTest:function(n){e||(n?Mt(t.STENCIL_TEST):Et(t.STENCIL_TEST))},setMask:function(r){n===r||e||(t.stencilMask(r),n=r)},setFunc:function(e,n,a){r===e&&i===n&&s===a||(t.stencilFunc(e,n,a),r=e,i=n,s=a)},setOp:function(e,n,r){a===e&&o===n&&l===r||(t.stencilOp(e,n,r),a=e,o=n,l=r)},setLocked:function(t){e=t},setClear:function(e){u!==e&&(t.clearStencil(e),u=e)},reset:function(){e=!1,n=null,r=null,i=null,s=null,a=null,o=null,l=null,u=null}}},s=new WeakMap,a=new WeakMap;let o={},l={},d=new WeakMap,p=[],f=null,m=!1,g=null,x=null,tt=null,et=null,nt=null,rt=null,it=null,st=new rs(0,0,0),at=0,ot=!1,lt=null,ut=null,ct=null,ht=null,dt=null;const pt=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let ft=!1,mt=0;const gt=t.getParameter(t.VERSION);-1!==gt.indexOf("WebGL")?(mt=parseFloat(/^WebGL (\d)/.exec(gt)[1]),ft=mt>=1):-1!==gt.indexOf("OpenGL ES")&&(mt=parseFloat(/^OpenGL ES (\d)/.exec(gt)[1]),ft=mt>=2);let xt=null,yt={};const vt=t.getParameter(t.SCISSOR_BOX),bt=t.getParameter(t.VIEWPORT),wt=(new Rr).fromArray(vt),_t=(new Rr).fromArray(bt);function St(e,n,r,i){const s=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(let a=0;a<r;a++)e===t.TEXTURE_3D||e===t.TEXTURE_2D_ARRAY?t.texImage3D(n,0,t.RGBA,1,1,i,0,t.RGBA,t.UNSIGNED_BYTE,s):t.texImage2D(n+a,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,s);return a}const Tt={};function Mt(e){!0!==o[e]&&(t.enable(e),o[e]=!0)}function Et(e){!1!==o[e]&&(t.disable(e),o[e]=!1)}Tt[t.TEXTURE_2D]=St(t.TEXTURE_2D,t.TEXTURE_2D,1),Tt[t.TEXTURE_CUBE_MAP]=St(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),Tt[t.TEXTURE_2D_ARRAY]=St(t.TEXTURE_2D_ARRAY,t.TEXTURE_2D_ARRAY,1,1),Tt[t.TEXTURE_3D]=St(t.TEXTURE_3D,t.TEXTURE_3D,1,1),n.setClear(0,0,0,1),r.setClear(1),i.setClear(0),Mt(t.DEPTH_TEST),r.setFunc(K),At(!1),Rt(c),Mt(t.CULL_FACE),kt(b);const It={[E]:t.FUNC_ADD,[I]:t.FUNC_SUBTRACT,[C]:t.FUNC_REVERSE_SUBTRACT};It[k]=t.MIN,It[A]=t.MAX;const Ct={[R]:t.ZERO,[N]:t.ONE,[D]:t.SRC_COLOR,[F]:t.SRC_ALPHA,[B]:t.SRC_ALPHA_SATURATE,[U]:t.DST_COLOR,[O]:t.DST_ALPHA,[L]:t.ONE_MINUS_SRC_COLOR,[P]:t.ONE_MINUS_SRC_ALPHA,[z]:t.ONE_MINUS_DST_COLOR,[$]:t.ONE_MINUS_DST_ALPHA,[V]:t.CONSTANT_COLOR,[W]:t.ONE_MINUS_CONSTANT_COLOR,[G]:t.CONSTANT_ALPHA,[H]:t.ONE_MINUS_CONSTANT_ALPHA};function kt(e,n,r,i,s,a,o,l,u,c){if(e!==b){if(!1===m&&(Mt(t.BLEND),m=!0),e===M)s=s||n,a=a||r,o=o||i,n===x&&s===nt||(t.blendEquationSeparate(It[n],It[s]),x=n,nt=s),r===tt&&i===et&&a===rt&&o===it||(t.blendFuncSeparate(Ct[r],Ct[i],Ct[a],Ct[o]),tt=r,et=i,rt=a,it=o),!1!==l.equals(st)&&u===at||(t.blendColor(l.r,l.g,l.b,u),st.copy(l),at=u),g=e,ot=!1;else if(e!==g||c!==ot){if(x===E&&nt===E||(t.blendEquation(t.FUNC_ADD),x=E,nt=E),c)switch(e){case w:t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case _:t.blendFunc(t.ONE,t.ONE);break;case S:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case T:t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case w:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case _:t.blendFunc(t.SRC_ALPHA,t.ONE);break;case S:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case T:t.blendFunc(t.ZERO,t.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}tt=null,et=null,rt=null,it=null,st.set(0,0,0),at=0,g=e,ot=c}}else!0===m&&(Et(t.BLEND),m=!1)}function At(e){lt!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),lt=e)}function Rt(e){e!==u?(Mt(t.CULL_FACE),e!==ut&&(e===c?t.cullFace(t.BACK):e===h?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):Et(t.CULL_FACE),ut=e}function Nt(e,n,r){e?(Mt(t.POLYGON_OFFSET_FILL),ht===n&&dt===r||(t.polygonOffset(n,r),ht=n,dt=r)):Et(t.POLYGON_OFFSET_FILL)}return{buffers:{color:n,depth:r,stencil:i},enable:Mt,disable:Et,bindFramebuffer:function(e,n){return l[e]!==n&&(t.bindFramebuffer(e,n),l[e]=n,e===t.DRAW_FRAMEBUFFER&&(l[t.FRAMEBUFFER]=n),e===t.FRAMEBUFFER&&(l[t.DRAW_FRAMEBUFFER]=n),!0)},drawBuffers:function(e,n){let r=p,i=!1;if(e){r=d.get(n),void 0===r&&(r=[],d.set(n,r));const s=e.textures;if(r.length!==s.length||r[0]!==t.COLOR_ATTACHMENT0){for(let e=0,n=s.length;e<n;e++)r[e]=t.COLOR_ATTACHMENT0+e;r.length=s.length,i=!0}}else r[0]!==t.BACK&&(r[0]=t.BACK,i=!0);i&&t.drawBuffers(r)},useProgram:function(e){return f!==e&&(t.useProgram(e),f=e,!0)},setBlending:kt,setMaterial:function(e,s){e.side===v?Et(t.CULL_FACE):Mt(t.CULL_FACE);let a=e.side===y;s&&(a=!a),At(a),e.blending===w&&!1===e.transparent?kt(b):kt(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.blendColor,e.blendAlpha,e.premultipliedAlpha),r.setFunc(e.depthFunc),r.setTest(e.depthTest),r.setMask(e.depthWrite),n.setMask(e.colorWrite);const o=e.stencilWrite;i.setTest(o),o&&(i.setMask(e.stencilWriteMask),i.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),i.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),Nt(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?Mt(t.SAMPLE_ALPHA_TO_COVERAGE):Et(t.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:At,setCullFace:Rt,setLineWidth:function(e){e!==ct&&(ft&&t.lineWidth(e),ct=e)},setPolygonOffset:Nt,setScissorTest:function(e){e?Mt(t.SCISSOR_TEST):Et(t.SCISSOR_TEST)},activeTexture:function(e){void 0===e&&(e=t.TEXTURE0+pt-1),xt!==e&&(t.activeTexture(e),xt=e)},bindTexture:function(e,n,r){void 0===r&&(r=null===xt?t.TEXTURE0+pt-1:xt);let i=yt[r];void 0===i&&(i={type:void 0,texture:void 0},yt[r]=i),i.type===e&&i.texture===n||(xt!==r&&(t.activeTexture(r),xt=r),t.bindTexture(e,n||Tt[e]),i.type=e,i.texture=n)},unbindTexture:function(){const e=yt[xt];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexImage3D:function(){try{t.compressedTexImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},updateUBOMapping:function(e,n){let r=a.get(n);void 0===r&&(r=new WeakMap,a.set(n,r));let i=r.get(e);void 0===i&&(i=t.getUniformBlockIndex(n,e.name),r.set(e,i))},uniformBlockBinding:function(e,n){const r=a.get(n).get(e);s.get(n)!==r&&(t.uniformBlockBinding(n,r,e.__bindingPointIndex),s.set(n,r))},texStorage2D:function(){try{t.texStorage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function(){try{t.texStorage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{t.texSubImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function(){try{t.texSubImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function(){try{t.compressedTexSubImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage3D:function(){try{t.compressedTexSubImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===wt.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),wt.copy(e))},viewport:function(e){!1===_t.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),_t.copy(e))},reset:function(){t.disable(t.BLEND),t.disable(t.CULL_FACE),t.disable(t.DEPTH_TEST),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ZERO),t.blendFuncSeparate(t.ONE,t.ZERO,t.ONE,t.ZERO),t.blendColor(0,0,0,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(t.LESS),r.setReversed(!1),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(t.ALWAYS,0,4294967295),t.stencilOp(t.KEEP,t.KEEP,t.KEEP),t.clearStencil(0),t.cullFace(t.BACK),t.frontFace(t.CCW),t.polygonOffset(0,0),t.activeTexture(t.TEXTURE0),t.bindFramebuffer(t.FRAMEBUFFER,null),t.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),t.bindFramebuffer(t.READ_FRAMEBUFFER,null),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),o={},xt=null,yt={},l={},d=new WeakMap,p=[],f=null,m=!1,g=null,x=null,tt=null,et=null,nt=null,rt=null,it=null,st=new rs(0,0,0),at=0,ot=!1,lt=null,ut=null,ct=null,ht=null,dt=null,wt.set(0,0,t.canvas.width,t.canvas.height),_t.set(0,0,t.canvas.width,t.canvas.height),n.reset(),r.reset(),i.reset()}}}function um(t,e,n,r,i,s,a){const o=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),u=new rr,c=new WeakMap;let h;const d=new WeakMap;let p=!1;try{p="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function f(t,e){return p?new OffscreenCanvas(t,e):pr("canvas")}function m(t,e,n){let r=1;const i=W(t);if((i.width>n||i.height>n)&&(r=n/Math.max(i.width,i.height)),r<1){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap||"undefined"!=typeof VideoFrame&&t instanceof VideoFrame){const n=Math.floor(r*i.width),s=Math.floor(r*i.height);void 0===h&&(h=f(n,s));const a=e?f(n,s):h;return a.width=n,a.height=s,a.getContext("2d").drawImage(t,0,0,n,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+i.width+"x"+i.height+") to ("+n+"x"+s+")."),a}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+i.width+"x"+i.height+")."),t}return t}function g(t){return t.generateMipmaps}function x(e){t.generateMipmap(e)}function y(e){return e.isWebGLCubeRenderTarget?t.TEXTURE_CUBE_MAP:e.isWebGL3DRenderTarget?t.TEXTURE_3D:e.isWebGLArrayRenderTarget||e.isCompressedArrayTexture?t.TEXTURE_2D_ARRAY:t.TEXTURE_2D}function v(n,r,i,s,a=!1){if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let o=r;if(r===t.RED&&(i===t.FLOAT&&(o=t.R32F),i===t.HALF_FLOAT&&(o=t.R16F),i===t.UNSIGNED_BYTE&&(o=t.R8)),r===t.RED_INTEGER&&(i===t.UNSIGNED_BYTE&&(o=t.R8UI),i===t.UNSIGNED_SHORT&&(o=t.R16UI),i===t.UNSIGNED_INT&&(o=t.R32UI),i===t.BYTE&&(o=t.R8I),i===t.SHORT&&(o=t.R16I),i===t.INT&&(o=t.R32I)),r===t.RG&&(i===t.FLOAT&&(o=t.RG32F),i===t.HALF_FLOAT&&(o=t.RG16F),i===t.UNSIGNED_BYTE&&(o=t.RG8)),r===t.RG_INTEGER&&(i===t.UNSIGNED_BYTE&&(o=t.RG8UI),i===t.UNSIGNED_SHORT&&(o=t.RG16UI),i===t.UNSIGNED_INT&&(o=t.RG32UI),i===t.BYTE&&(o=t.RG8I),i===t.SHORT&&(o=t.RG16I),i===t.INT&&(o=t.RG32I)),r===t.RGB_INTEGER&&(i===t.UNSIGNED_BYTE&&(o=t.RGB8UI),i===t.UNSIGNED_SHORT&&(o=t.RGB16UI),i===t.UNSIGNED_INT&&(o=t.RGB32UI),i===t.BYTE&&(o=t.RGB8I),i===t.SHORT&&(o=t.RGB16I),i===t.INT&&(o=t.RGB32I)),r===t.RGBA_INTEGER&&(i===t.UNSIGNED_BYTE&&(o=t.RGBA8UI),i===t.UNSIGNED_SHORT&&(o=t.RGBA16UI),i===t.UNSIGNED_INT&&(o=t.RGBA32UI),i===t.BYTE&&(o=t.RGBA8I),i===t.SHORT&&(o=t.RGBA16I),i===t.INT&&(o=t.RGBA32I)),r===t.RGB&&i===t.UNSIGNED_INT_5_9_9_9_REV&&(o=t.RGB9_E5),r===t.RGBA){const e=a?nn:br.getTransfer(s);i===t.FLOAT&&(o=t.RGBA32F),i===t.HALF_FLOAT&&(o=t.RGBA16F),i===t.UNSIGNED_BYTE&&(o=e===rn?t.SRGB8_ALPHA8:t.RGBA8),i===t.UNSIGNED_SHORT_4_4_4_4&&(o=t.RGBA4),i===t.UNSIGNED_SHORT_5_5_5_1&&(o=t.RGB5_A1)}return o!==t.R16F&&o!==t.R32F&&o!==t.RG16F&&o!==t.RG32F&&o!==t.RGBA16F&&o!==t.RGBA32F||e.get("EXT_color_buffer_float"),o}function b(e,n){let r;return e?null===n||n===Ot||n===Vt?r=t.DEPTH24_STENCIL8:n===$t?r=t.DEPTH32F_STENCIL8:n===Ft&&(r=t.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):null===n||n===Ot||n===Vt?r=t.DEPTH_COMPONENT24:n===$t?r=t.DEPTH_COMPONENT32F:n===Ft&&(r=t.DEPTH_COMPONENT16),r}function w(t,e){return!0===g(t)||t.isFramebufferTexture&&t.minFilter!==_t&&t.minFilter!==It?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function _(t){const e=t.target;e.removeEventListener("dispose",_),function(t){const e=r.get(t);if(void 0===e.__webglInit)return;const n=t.source,i=d.get(n);if(i){const r=i[e.__cacheKey];r.usedTimes--,0===r.usedTimes&&T(t),0===Object.keys(i).length&&d.delete(n)}r.remove(t)}(e),e.isVideoTexture&&c.delete(e)}function S(e){const n=e.target;n.removeEventListener("dispose",S),function(e){const n=r.get(e);if(e.depthTexture&&(e.depthTexture.dispose(),r.remove(e.depthTexture)),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++){if(Array.isArray(n.__webglFramebuffer[e]))for(let r=0;r<n.__webglFramebuffer[e].length;r++)t.deleteFramebuffer(n.__webglFramebuffer[e][r]);else t.deleteFramebuffer(n.__webglFramebuffer[e]);n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer[e])}else{if(Array.isArray(n.__webglFramebuffer))for(let e=0;e<n.__webglFramebuffer.length;e++)t.deleteFramebuffer(n.__webglFramebuffer[e]);else t.deleteFramebuffer(n.__webglFramebuffer);if(n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&t.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer)for(let e=0;e<n.__webglColorRenderbuffer.length;e++)n.__webglColorRenderbuffer[e]&&t.deleteRenderbuffer(n.__webglColorRenderbuffer[e]);n.__webglDepthRenderbuffer&&t.deleteRenderbuffer(n.__webglDepthRenderbuffer)}const i=e.textures;for(let e=0,n=i.length;e<n;e++){const n=r.get(i[e]);n.__webglTexture&&(t.deleteTexture(n.__webglTexture),a.memory.textures--),r.remove(i[e])}r.remove(e)}(n)}function T(e){const n=r.get(e);t.deleteTexture(n.__webglTexture);const i=e.source;delete d.get(i)[n.__cacheKey],a.memory.textures--}let M=0;function E(e,i){const s=r.get(e);if(e.isVideoTexture&&function(t){const e=a.render.frame;c.get(t)!==e&&(c.set(t,e),t.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&s.__version!==e.version){const t=e.image;if(null===t)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==t.complete)return void D(s,e,i);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.bindTexture(t.TEXTURE_2D,s.__webglTexture,t.TEXTURE0+i)}const I={[vt]:t.REPEAT,[bt]:t.CLAMP_TO_EDGE,[wt]:t.MIRRORED_REPEAT},C={[_t]:t.NEAREST,[St]:t.NEAREST_MIPMAP_NEAREST,[Mt]:t.NEAREST_MIPMAP_LINEAR,[It]:t.LINEAR,[Ct]:t.LINEAR_MIPMAP_NEAREST,[At]:t.LINEAR_MIPMAP_LINEAR},k={[wn]:t.NEVER,[Cn]:t.ALWAYS,[_n]:t.LESS,[Tn]:t.LEQUAL,[Sn]:t.EQUAL,[In]:t.GEQUAL,[Mn]:t.GREATER,[En]:t.NOTEQUAL};function A(n,s){if(s.type!==$t||!1!==e.has("OES_texture_float_linear")||s.magFilter!==It&&s.magFilter!==Ct&&s.magFilter!==Mt&&s.magFilter!==At&&s.minFilter!==It&&s.minFilter!==Ct&&s.minFilter!==Mt&&s.minFilter!==At||console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),t.texParameteri(n,t.TEXTURE_WRAP_S,I[s.wrapS]),t.texParameteri(n,t.TEXTURE_WRAP_T,I[s.wrapT]),n!==t.TEXTURE_3D&&n!==t.TEXTURE_2D_ARRAY||t.texParameteri(n,t.TEXTURE_WRAP_R,I[s.wrapR]),t.texParameteri(n,t.TEXTURE_MAG_FILTER,C[s.magFilter]),t.texParameteri(n,t.TEXTURE_MIN_FILTER,C[s.minFilter]),s.compareFunction&&(t.texParameteri(n,t.TEXTURE_COMPARE_MODE,t.COMPARE_REF_TO_TEXTURE),t.texParameteri(n,t.TEXTURE_COMPARE_FUNC,k[s.compareFunction])),!0===e.has("EXT_texture_filter_anisotropic")){if(s.magFilter===_t)return;if(s.minFilter!==Mt&&s.minFilter!==At)return;if(s.type===$t&&!1===e.has("OES_texture_float_linear"))return;if(s.anisotropy>1||r.get(s).__currentAnisotropy){const a=e.get("EXT_texture_filter_anisotropic");t.texParameterf(n,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(s.anisotropy,i.getMaxAnisotropy())),r.get(s).__currentAnisotropy=s.anisotropy}}}function R(e,n){let r=!1;void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",_));const i=n.source;let s=d.get(i);void 0===s&&(s={},d.set(i,s));const o=function(t){const e=[];return e.push(t.wrapS),e.push(t.wrapT),e.push(t.wrapR||0),e.push(t.magFilter),e.push(t.minFilter),e.push(t.anisotropy),e.push(t.internalFormat),e.push(t.format),e.push(t.type),e.push(t.generateMipmaps),e.push(t.premultiplyAlpha),e.push(t.flipY),e.push(t.unpackAlignment),e.push(t.colorSpace),e.join()}(n);if(o!==e.__cacheKey){void 0===s[o]&&(s[o]={texture:t.createTexture(),usedTimes:0},a.memory.textures++,r=!0),s[o].usedTimes++;const i=s[e.__cacheKey];void 0!==i&&(s[e.__cacheKey].usedTimes--,0===i.usedTimes&&T(n)),e.__cacheKey=o,e.__webglTexture=s[o].texture}return r}function N(t,e,n){return Math.floor(Math.floor(t/n)/e)}function D(e,a,o){let l=t.TEXTURE_2D;(a.isDataArrayTexture||a.isCompressedArrayTexture)&&(l=t.TEXTURE_2D_ARRAY),a.isData3DTexture&&(l=t.TEXTURE_3D);const u=R(e,a),c=a.source;n.bindTexture(l,e.__webglTexture,t.TEXTURE0+o);const h=r.get(c);if(c.version!==h.__version||!0===u){n.activeTexture(t.TEXTURE0+o);const e=br.getPrimaries(br.workingColorSpace),r=a.colorSpace===Qe?null:br.getPrimaries(a.colorSpace),d=a.colorSpace===Qe||e===r?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,a.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,a.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,d);let p=m(a.image,!1,i.maxTextureSize);p=V(a,p);const f=s.convert(a.format,a.colorSpace),y=s.convert(a.type);let _,S=v(a.internalFormat,f,y,a.colorSpace,a.isVideoTexture);A(l,a);const T=a.mipmaps,M=!0!==a.isVideoTexture,E=void 0===h.__version||!0===u,I=c.dataReady,C=w(a,p);if(a.isDepthTexture)S=b(a.format===Xt,a.type),E&&(M?n.texStorage2D(t.TEXTURE_2D,1,S,p.width,p.height):n.texImage2D(t.TEXTURE_2D,0,S,p.width,p.height,0,f,y,null));else if(a.isDataTexture)if(T.length>0){M&&E&&n.texStorage2D(t.TEXTURE_2D,C,S,T[0].width,T[0].height);for(let e=0,r=T.length;e<r;e++)_=T[e],M?I&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,_.width,_.height,f,y,_.data):n.texImage2D(t.TEXTURE_2D,e,S,_.width,_.height,0,f,y,_.data);a.generateMipmaps=!1}else M?(E&&n.texStorage2D(t.TEXTURE_2D,C,S,p.width,p.height),I&&function(e,r,i,s){const a=e.updateRanges;if(0===a.length)n.texSubImage2D(t.TEXTURE_2D,0,0,0,r.width,r.height,i,s,r.data);else{a.sort((t,e)=>t.start-e.start);let o=0;for(let t=1;t<a.length;t++){const e=a[o],n=a[t],i=e.start+e.count,s=N(n.start,r.width,4),l=N(e.start,r.width,4);n.start<=i+1&&s===l&&N(n.start+n.count-1,r.width,4)===s?e.count=Math.max(e.count,n.start+n.count-e.start):(++o,a[o]=n)}a.length=o+1;const l=t.getParameter(t.UNPACK_ROW_LENGTH),u=t.getParameter(t.UNPACK_SKIP_PIXELS),c=t.getParameter(t.UNPACK_SKIP_ROWS);t.pixelStorei(t.UNPACK_ROW_LENGTH,r.width);for(let e=0,o=a.length;e<o;e++){const o=a[e],l=Math.floor(o.start/4),u=Math.ceil(o.count/4),c=l%r.width,h=Math.floor(l/r.width),d=u,p=1;t.pixelStorei(t.UNPACK_SKIP_PIXELS,c),t.pixelStorei(t.UNPACK_SKIP_ROWS,h),n.texSubImage2D(t.TEXTURE_2D,0,c,h,d,p,i,s,r.data)}e.clearUpdateRanges(),t.pixelStorei(t.UNPACK_ROW_LENGTH,l),t.pixelStorei(t.UNPACK_SKIP_PIXELS,u),t.pixelStorei(t.UNPACK_SKIP_ROWS,c)}}(a,p,f,y)):n.texImage2D(t.TEXTURE_2D,0,S,p.width,p.height,0,f,y,p.data);else if(a.isCompressedTexture)if(a.isCompressedArrayTexture){M&&E&&n.texStorage3D(t.TEXTURE_2D_ARRAY,C,S,T[0].width,T[0].height,p.depth);for(let e=0,r=T.length;e<r;e++)if(_=T[e],a.format!==jt)if(null!==f)if(M){if(I)if(a.layerUpdates.size>0){const r=Fd(_.width,_.height,a.format,a.type);for(const i of a.layerUpdates){const s=_.data.subarray(i*r/_.data.BYTES_PER_ELEMENT,(i+1)*r/_.data.BYTES_PER_ELEMENT);n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,i,_.width,_.height,1,f,s)}a.clearLayerUpdates()}else n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,_.width,_.height,p.depth,f,_.data)}else n.compressedTexImage3D(t.TEXTURE_2D_ARRAY,e,S,_.width,_.height,p.depth,0,_.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else M?I&&n.texSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,_.width,_.height,p.depth,f,y,_.data):n.texImage3D(t.TEXTURE_2D_ARRAY,e,S,_.width,_.height,p.depth,0,f,y,_.data)}else{M&&E&&n.texStorage2D(t.TEXTURE_2D,C,S,T[0].width,T[0].height);for(let e=0,r=T.length;e<r;e++)_=T[e],a.format!==jt?null!==f?M?I&&n.compressedTexSubImage2D(t.TEXTURE_2D,e,0,0,_.width,_.height,f,_.data):n.compressedTexImage2D(t.TEXTURE_2D,e,S,_.width,_.height,0,_.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):M?I&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,_.width,_.height,f,y,_.data):n.texImage2D(t.TEXTURE_2D,e,S,_.width,_.height,0,f,y,_.data)}else if(a.isDataArrayTexture)if(M){if(E&&n.texStorage3D(t.TEXTURE_2D_ARRAY,C,S,p.width,p.height,p.depth),I)if(a.layerUpdates.size>0){const e=Fd(p.width,p.height,a.format,a.type);for(const r of a.layerUpdates){const i=p.data.subarray(r*e/p.data.BYTES_PER_ELEMENT,(r+1)*e/p.data.BYTES_PER_ELEMENT);n.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,r,p.width,p.height,1,f,y,i)}a.clearLayerUpdates()}else n.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,0,p.width,p.height,p.depth,f,y,p.data)}else n.texImage3D(t.TEXTURE_2D_ARRAY,0,S,p.width,p.height,p.depth,0,f,y,p.data);else if(a.isData3DTexture)M?(E&&n.texStorage3D(t.TEXTURE_3D,C,S,p.width,p.height,p.depth),I&&n.texSubImage3D(t.TEXTURE_3D,0,0,0,0,p.width,p.height,p.depth,f,y,p.data)):n.texImage3D(t.TEXTURE_3D,0,S,p.width,p.height,p.depth,0,f,y,p.data);else if(a.isFramebufferTexture){if(E)if(M)n.texStorage2D(t.TEXTURE_2D,C,S,p.width,p.height);else{let e=p.width,r=p.height;for(let i=0;i<C;i++)n.texImage2D(t.TEXTURE_2D,i,S,e,r,0,f,y,null),e>>=1,r>>=1}}else if(T.length>0){if(M&&E){const e=W(T[0]);n.texStorage2D(t.TEXTURE_2D,C,S,e.width,e.height)}for(let e=0,r=T.length;e<r;e++)_=T[e],M?I&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,f,y,_):n.texImage2D(t.TEXTURE_2D,e,S,f,y,_);a.generateMipmaps=!1}else if(M){if(E){const e=W(p);n.texStorage2D(t.TEXTURE_2D,C,S,e.width,e.height)}I&&n.texSubImage2D(t.TEXTURE_2D,0,0,0,f,y,p)}else n.texImage2D(t.TEXTURE_2D,0,S,f,y,p);g(a)&&x(l),h.__version=c.version,a.onUpdate&&a.onUpdate(a)}e.__version=a.version}function L(e,i,a,l,u,c){const h=s.convert(a.format,a.colorSpace),d=s.convert(a.type),p=v(a.internalFormat,h,d,a.colorSpace),f=r.get(i),m=r.get(a);if(m.__renderTarget=i,!f.__hasExternalTextures){const e=Math.max(1,i.width>>c),r=Math.max(1,i.height>>c);u===t.TEXTURE_3D||u===t.TEXTURE_2D_ARRAY?n.texImage3D(u,c,p,e,r,i.depth,0,h,d,null):n.texImage2D(u,c,p,e,r,0,h,d,null)}n.bindFramebuffer(t.FRAMEBUFFER,e),B(i)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,l,u,m.__webglTexture,0,z(i)):(u===t.TEXTURE_2D||u>=t.TEXTURE_CUBE_MAP_POSITIVE_X&&u<=t.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&t.framebufferTexture2D(t.FRAMEBUFFER,l,u,m.__webglTexture,c),n.bindFramebuffer(t.FRAMEBUFFER,null)}function F(e,n,r){if(t.bindRenderbuffer(t.RENDERBUFFER,e),n.depthBuffer){const i=n.depthTexture,s=i&&i.isDepthTexture?i.type:null,a=b(n.stencilBuffer,s),l=n.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,u=z(n);B(n)?o.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,u,a,n.width,n.height):r?t.renderbufferStorageMultisample(t.RENDERBUFFER,u,a,n.width,n.height):t.renderbufferStorage(t.RENDERBUFFER,a,n.width,n.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,l,t.RENDERBUFFER,e)}else{const e=n.textures;for(let i=0;i<e.length;i++){const a=e[i],l=s.convert(a.format,a.colorSpace),u=s.convert(a.type),c=v(a.internalFormat,l,u,a.colorSpace),h=z(n);r&&!1===B(n)?t.renderbufferStorageMultisample(t.RENDERBUFFER,h,c,n.width,n.height):B(n)?o.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,h,c,n.width,n.height):t.renderbufferStorage(t.RENDERBUFFER,c,n.width,n.height)}}t.bindRenderbuffer(t.RENDERBUFFER,null)}function P(e,i){if(i&&i.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(t.FRAMEBUFFER,e),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const s=r.get(i.depthTexture);s.__renderTarget=i,s.__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),E(i.depthTexture,0);const a=s.__webglTexture,l=z(i);if(i.depthTexture.format===qt)B(i)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,a,0,l):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,a,0);else{if(i.depthTexture.format!==Xt)throw new Error("Unknown depthTexture format");B(i)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,a,0,l):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,a,0)}}function O(e){const i=r.get(e),s=!0===e.isWebGLCubeRenderTarget;if(i.__boundDepthTexture!==e.depthTexture){const t=e.depthTexture;if(i.__depthDisposeCallback&&i.__depthDisposeCallback(),t){const e=()=>{delete i.__boundDepthTexture,delete i.__depthDisposeCallback,t.removeEventListener("dispose",e)};t.addEventListener("dispose",e),i.__depthDisposeCallback=e}i.__boundDepthTexture=t}if(e.depthTexture&&!i.__autoAllocateDepthBuffer){if(s)throw new Error("target.depthTexture not supported in Cube render targets");const t=e.texture.mipmaps;t&&t.length>0?P(i.__webglFramebuffer[0],e):P(i.__webglFramebuffer,e)}else if(s){i.__webglDepthbuffer=[];for(let r=0;r<6;r++)if(n.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer[r]),void 0===i.__webglDepthbuffer[r])i.__webglDepthbuffer[r]=t.createRenderbuffer(),F(i.__webglDepthbuffer[r],e,!1);else{const n=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,s=i.__webglDepthbuffer[r];t.bindRenderbuffer(t.RENDERBUFFER,s),t.framebufferRenderbuffer(t.FRAMEBUFFER,n,t.RENDERBUFFER,s)}}else{const r=e.texture.mipmaps;if(r&&r.length>0?n.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer[0]):n.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer),void 0===i.__webglDepthbuffer)i.__webglDepthbuffer=t.createRenderbuffer(),F(i.__webglDepthbuffer,e,!1);else{const n=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,r=i.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,r),t.framebufferRenderbuffer(t.FRAMEBUFFER,n,t.RENDERBUFFER,r)}}n.bindFramebuffer(t.FRAMEBUFFER,null)}const $=[],U=[];function z(t){return Math.min(i.maxSamples,t.samples)}function B(t){const n=r.get(t);return t.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function V(t,e){const n=t.colorSpace,r=t.format,i=t.type;return!0===t.isCompressedTexture||!0===t.isVideoTexture||n!==en&&n!==Qe&&(br.getTransfer(n)===rn?r===jt&&i===Nt||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",n)),e}function W(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement?(u.width=t.naturalWidth||t.width,u.height=t.naturalHeight||t.height):"undefined"!=typeof VideoFrame&&t instanceof VideoFrame?(u.width=t.displayWidth,u.height=t.displayHeight):(u.width=t.width,u.height=t.height),u}this.allocateTextureUnit=function(){const t=M;return t>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+i.maxTextures),M+=1,t},this.resetTextureUnits=function(){M=0},this.setTexture2D=E,this.setTexture2DArray=function(e,i){const s=r.get(e);e.version>0&&s.__version!==e.version?D(s,e,i):n.bindTexture(t.TEXTURE_2D_ARRAY,s.__webglTexture,t.TEXTURE0+i)},this.setTexture3D=function(e,i){const s=r.get(e);e.version>0&&s.__version!==e.version?D(s,e,i):n.bindTexture(t.TEXTURE_3D,s.__webglTexture,t.TEXTURE0+i)},this.setTextureCube=function(e,a){const o=r.get(e);e.version>0&&o.__version!==e.version?function(e,a,o){if(6!==a.image.length)return;const l=R(e,a),u=a.source;n.bindTexture(t.TEXTURE_CUBE_MAP,e.__webglTexture,t.TEXTURE0+o);const c=r.get(u);if(u.version!==c.__version||!0===l){n.activeTexture(t.TEXTURE0+o);const e=br.getPrimaries(br.workingColorSpace),r=a.colorSpace===Qe?null:br.getPrimaries(a.colorSpace),h=a.colorSpace===Qe||e===r?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,a.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,a.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,h);const d=a.isCompressedTexture||a.image[0].isCompressedTexture,p=a.image[0]&&a.image[0].isDataTexture,f=[];for(let t=0;t<6;t++)f[t]=d||p?p?a.image[t].image:a.image[t]:m(a.image[t],!0,i.maxCubemapSize),f[t]=V(a,f[t]);const y=f[0],b=s.convert(a.format,a.colorSpace),_=s.convert(a.type),S=v(a.internalFormat,b,_,a.colorSpace),T=!0!==a.isVideoTexture,M=void 0===c.__version||!0===l,E=u.dataReady;let I,C=w(a,y);if(A(t.TEXTURE_CUBE_MAP,a),d){T&&M&&n.texStorage2D(t.TEXTURE_CUBE_MAP,C,S,y.width,y.height);for(let e=0;e<6;e++){I=f[e].mipmaps;for(let r=0;r<I.length;r++){const i=I[r];a.format!==jt?null!==b?T?E&&n.compressedTexSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,r,0,0,i.width,i.height,b,i.data):n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,r,S,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):T?E&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,r,0,0,i.width,i.height,b,_,i.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,r,S,i.width,i.height,0,b,_,i.data)}}}else{if(I=a.mipmaps,T&&M){I.length>0&&C++;const e=W(f[0]);n.texStorage2D(t.TEXTURE_CUBE_MAP,C,S,e.width,e.height)}for(let e=0;e<6;e++)if(p){T?E&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,f[e].width,f[e].height,b,_,f[e].data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,S,f[e].width,f[e].height,0,b,_,f[e].data);for(let r=0;r<I.length;r++){const i=I[r].image[e].image;T?E&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,r+1,0,0,i.width,i.height,b,_,i.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,r+1,S,i.width,i.height,0,b,_,i.data)}}else{T?E&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,b,_,f[e]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,S,b,_,f[e]);for(let r=0;r<I.length;r++){const i=I[r];T?E&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,r+1,0,0,b,_,i.image[e]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,r+1,S,b,_,i.image[e])}}}g(a)&&x(t.TEXTURE_CUBE_MAP),c.__version=u.version,a.onUpdate&&a.onUpdate(a)}e.__version=a.version}(o,e,a):n.bindTexture(t.TEXTURE_CUBE_MAP,o.__webglTexture,t.TEXTURE0+a)},this.rebindTextures=function(e,n,i){const s=r.get(e);void 0!==n&&L(s.__webglFramebuffer,e,e.texture,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,0),void 0!==i&&O(e)},this.setupRenderTarget=function(e){const i=e.texture,o=r.get(e),l=r.get(i);e.addEventListener("dispose",S);const u=e.textures,c=!0===e.isWebGLCubeRenderTarget,h=u.length>1;if(h||(void 0===l.__webglTexture&&(l.__webglTexture=t.createTexture()),l.__version=i.version,a.memory.textures++),c){o.__webglFramebuffer=[];for(let e=0;e<6;e++)if(i.mipmaps&&i.mipmaps.length>0){o.__webglFramebuffer[e]=[];for(let n=0;n<i.mipmaps.length;n++)o.__webglFramebuffer[e][n]=t.createFramebuffer()}else o.__webglFramebuffer[e]=t.createFramebuffer()}else{if(i.mipmaps&&i.mipmaps.length>0){o.__webglFramebuffer=[];for(let e=0;e<i.mipmaps.length;e++)o.__webglFramebuffer[e]=t.createFramebuffer()}else o.__webglFramebuffer=t.createFramebuffer();if(h)for(let e=0,n=u.length;e<n;e++){const n=r.get(u[e]);void 0===n.__webglTexture&&(n.__webglTexture=t.createTexture(),a.memory.textures++)}if(e.samples>0&&!1===B(e)){o.__webglMultisampledFramebuffer=t.createFramebuffer(),o.__webglColorRenderbuffer=[],n.bindFramebuffer(t.FRAMEBUFFER,o.__webglMultisampledFramebuffer);for(let n=0;n<u.length;n++){const r=u[n];o.__webglColorRenderbuffer[n]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,o.__webglColorRenderbuffer[n]);const i=s.convert(r.format,r.colorSpace),a=s.convert(r.type),l=v(r.internalFormat,i,a,r.colorSpace,!0===e.isXRRenderTarget),c=z(e);t.renderbufferStorageMultisample(t.RENDERBUFFER,c,l,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+n,t.RENDERBUFFER,o.__webglColorRenderbuffer[n])}t.bindRenderbuffer(t.RENDERBUFFER,null),e.depthBuffer&&(o.__webglDepthRenderbuffer=t.createRenderbuffer(),F(o.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(t.FRAMEBUFFER,null)}}if(c){n.bindTexture(t.TEXTURE_CUBE_MAP,l.__webglTexture),A(t.TEXTURE_CUBE_MAP,i);for(let n=0;n<6;n++)if(i.mipmaps&&i.mipmaps.length>0)for(let r=0;r<i.mipmaps.length;r++)L(o.__webglFramebuffer[n][r],e,i,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+n,r);else L(o.__webglFramebuffer[n],e,i,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+n,0);g(i)&&x(t.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(h){for(let i=0,s=u.length;i<s;i++){const s=u[i],a=r.get(s);n.bindTexture(t.TEXTURE_2D,a.__webglTexture),A(t.TEXTURE_2D,s),L(o.__webglFramebuffer,e,s,t.COLOR_ATTACHMENT0+i,t.TEXTURE_2D,0),g(s)&&x(t.TEXTURE_2D)}n.unbindTexture()}else{let r=t.TEXTURE_2D;if((e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&(r=e.isWebGL3DRenderTarget?t.TEXTURE_3D:t.TEXTURE_2D_ARRAY),n.bindTexture(r,l.__webglTexture),A(r,i),i.mipmaps&&i.mipmaps.length>0)for(let n=0;n<i.mipmaps.length;n++)L(o.__webglFramebuffer[n],e,i,t.COLOR_ATTACHMENT0,r,n);else L(o.__webglFramebuffer,e,i,t.COLOR_ATTACHMENT0,r,0);g(i)&&x(r),n.unbindTexture()}e.depthBuffer&&O(e)},this.updateRenderTargetMipmap=function(t){const e=t.textures;for(let i=0,s=e.length;i<s;i++){const s=e[i];if(g(s)){const e=y(t),i=r.get(s).__webglTexture;n.bindTexture(e,i),x(e),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(e.samples>0)if(!1===B(e)){const i=e.textures,s=e.width,a=e.height;let o=t.COLOR_BUFFER_BIT;const u=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,c=r.get(e),h=i.length>1;if(h)for(let e=0;e<i.length;e++)n.bindFramebuffer(t.FRAMEBUFFER,c.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,null),n.bindFramebuffer(t.FRAMEBUFFER,c.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,null,0);n.bindFramebuffer(t.READ_FRAMEBUFFER,c.__webglMultisampledFramebuffer);const d=e.texture.mipmaps;d&&d.length>0?n.bindFramebuffer(t.DRAW_FRAMEBUFFER,c.__webglFramebuffer[0]):n.bindFramebuffer(t.DRAW_FRAMEBUFFER,c.__webglFramebuffer);for(let n=0;n<i.length;n++){if(e.resolveDepthBuffer&&(e.depthBuffer&&(o|=t.DEPTH_BUFFER_BIT),e.stencilBuffer&&e.resolveStencilBuffer&&(o|=t.STENCIL_BUFFER_BIT)),h){t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,c.__webglColorRenderbuffer[n]);const e=r.get(i[n]).__webglTexture;t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)}t.blitFramebuffer(0,0,s,a,0,0,s,a,o,t.NEAREST),!0===l&&($.length=0,U.length=0,$.push(t.COLOR_ATTACHMENT0+n),e.depthBuffer&&!1===e.resolveDepthBuffer&&($.push(u),U.push(u),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,U)),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,$))}if(n.bindFramebuffer(t.READ_FRAMEBUFFER,null),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),h)for(let e=0;e<i.length;e++){n.bindFramebuffer(t.FRAMEBUFFER,c.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,c.__webglColorRenderbuffer[e]);const s=r.get(i[e]).__webglTexture;n.bindFramebuffer(t.FRAMEBUFFER,c.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,s,0)}n.bindFramebuffer(t.DRAW_FRAMEBUFFER,c.__webglMultisampledFramebuffer)}else if(e.depthBuffer&&!1===e.resolveDepthBuffer&&l){const n=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,[n])}},this.setupDepthRenderbuffer=O,this.setupFrameBufferTexture=L,this.useMultisampledRTT=B}function cm(t,e){return{convert:function(n,r=Qe){let i;const s=br.getTransfer(r);if(n===Nt)return t.UNSIGNED_BYTE;if(n===zt)return t.UNSIGNED_SHORT_4_4_4_4;if(n===Bt)return t.UNSIGNED_SHORT_5_5_5_1;if(n===Wt)return t.UNSIGNED_INT_5_9_9_9_REV;if(n===Dt)return t.BYTE;if(n===Lt)return t.SHORT;if(n===Ft)return t.UNSIGNED_SHORT;if(n===Pt)return t.INT;if(n===Ot)return t.UNSIGNED_INT;if(n===$t)return t.FLOAT;if(n===Ut)return t.HALF_FLOAT;if(n===Gt)return t.ALPHA;if(n===Ht)return t.RGB;if(n===jt)return t.RGBA;if(n===qt)return t.DEPTH_COMPONENT;if(n===Xt)return t.DEPTH_STENCIL;if(n===Kt)return t.RED;if(n===Yt)return t.RED_INTEGER;if(n===Zt)return t.RG;if(n===Jt)return t.RG_INTEGER;if(n===te)return t.RGBA_INTEGER;if(n===ee||n===ne||n===re||n===ie)if(s===rn){if(i=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===i)return null;if(n===ee)return i.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===ne)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===re)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===ie)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(i=e.get("WEBGL_compressed_texture_s3tc"),null===i)return null;if(n===ee)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===ne)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===re)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===ie)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(n===se||n===ae||n===oe||n===le){if(i=e.get("WEBGL_compressed_texture_pvrtc"),null===i)return null;if(n===se)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===ae)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===oe)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===le)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(n===ue||n===ce||n===he){if(i=e.get("WEBGL_compressed_texture_etc"),null===i)return null;if(n===ue||n===ce)return s===rn?i.COMPRESSED_SRGB8_ETC2:i.COMPRESSED_RGB8_ETC2;if(n===he)return s===rn?i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:i.COMPRESSED_RGBA8_ETC2_EAC}if(n===de||n===pe||n===fe||n===me||n===ge||n===xe||n===ye||n===ve||n===be||n===we||n===_e||n===Se||n===Te||n===Me){if(i=e.get("WEBGL_compressed_texture_astc"),null===i)return null;if(n===de)return s===rn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:i.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===pe)return s===rn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:i.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===fe)return s===rn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:i.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===me)return s===rn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:i.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===ge)return s===rn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:i.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===xe)return s===rn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:i.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===ye)return s===rn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:i.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===ve)return s===rn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:i.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===be)return s===rn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:i.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===we)return s===rn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:i.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===_e)return s===rn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:i.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Se)return s===rn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:i.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Te)return s===rn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:i.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Me)return s===rn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:i.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===Ee||n===Ie||n===Ce){if(i=e.get("EXT_texture_compression_bptc"),null===i)return null;if(n===Ee)return s===rn?i.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:i.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Ie)return i.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Ce)return i.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(n===ke||n===Ae||n===Re||n===Ne){if(i=e.get("EXT_texture_compression_rgtc"),null===i)return null;if(n===Ee)return i.COMPRESSED_RED_RGTC1_EXT;if(n===Ae)return i.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Re)return i.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Ne)return i.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return n===Vt?t.UNSIGNED_INT_24_8:void 0!==t[n]?t[n]:null}}}class hm{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e,n){if(null===this.texture){const r=new Ar;t.properties.get(r).__webglTexture=e.texture,e.depthNear===n.depthNear&&e.depthFar===n.depthFar||(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=r}}getMesh(t){if(null!==this.texture&&null===this.mesh){const e=t.cameras[0].viewport,n=new Js({vertexShader:"\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}",fragmentShader:"\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}",uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new Hs(new Mu(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class dm extends Hn{constructor(t,e){super();const n=this;let r=null,i=1,s=null,a="local-floor",o=1,l=null,u=null,c=null,h=null,d=null,p=null;const f=new hm,m=e.getContextAttributes();let g=null,x=null;const y=[],v=[],b=new rr;let w=null;const _=new ra;_.viewport=new Rr;const S=new ra;S.viewport=new Rr;const T=[_,S],M=new ch;let E=null,I=null;function C(t){const e=v.indexOf(t.inputSource);if(-1===e)return;const n=y[e];void 0!==n&&(n.update(t.inputSource,t.frame,l||s),n.dispatchEvent({type:t.type,data:t.inputSource}))}function k(){r.removeEventListener("select",C),r.removeEventListener("selectstart",C),r.removeEventListener("selectend",C),r.removeEventListener("squeeze",C),r.removeEventListener("squeezestart",C),r.removeEventListener("squeezeend",C),r.removeEventListener("end",k),r.removeEventListener("inputsourceschange",A);for(let t=0;t<y.length;t++){const e=v[t];null!==e&&(v[t]=null,y[t].disconnect(e))}E=null,I=null,f.reset(),t.setRenderTarget(g),d=null,h=null,c=null,r=null,x=null,F.stop(),n.isPresenting=!1,t.setPixelRatio(w),t.setSize(b.width,b.height,!1),n.dispatchEvent({type:"sessionend"})}function A(t){for(let e=0;e<t.removed.length;e++){const n=t.removed[e],r=v.indexOf(n);r>=0&&(v[r]=null,y[r].disconnect(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e];let r=v.indexOf(n);if(-1===r){for(let t=0;t<y.length;t++){if(t>=v.length){v.push(n),r=t;break}if(null===v[t]){v[t]=n,r=t;break}}if(-1===r)break}const i=y[r];i&&i.connect(n)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=y[t];return void 0===e&&(e=new ca,y[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=y[t];return void 0===e&&(e=new ca,y[t]=e),e.getGripSpace()},this.getHand=function(t){let e=y[t];return void 0===e&&(e=new ca,y[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){i=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){a=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||s},this.setReferenceSpace=function(t){l=t},this.getBaseLayer=function(){return null!==h?h:d},this.getBinding=function(){return c},this.getFrame=function(){return p},this.getSession=function(){return r},this.setSession=async function(u){if(r=u,null!==r){if(g=t.getRenderTarget(),r.addEventListener("select",C),r.addEventListener("selectstart",C),r.addEventListener("selectend",C),r.addEventListener("squeeze",C),r.addEventListener("squeezestart",C),r.addEventListener("squeezeend",C),r.addEventListener("end",k),r.addEventListener("inputsourceschange",A),!0!==m.xrCompatible&&await e.makeXRCompatible(),w=t.getPixelRatio(),t.getSize(b),"undefined"!=typeof XRWebGLBinding&&"createProjectionLayer"in XRWebGLBinding.prototype){let n=null,s=null,a=null;m.depth&&(a=m.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,n=m.stencil?Xt:qt,s=m.stencil?Vt:Ot);const o={colorFormat:e.RGBA8,depthFormat:a,scaleFactor:i};c=new XRWebGLBinding(r,e),h=c.createProjectionLayer(o),r.updateRenderState({layers:[h]}),t.setPixelRatio(1),t.setSize(h.textureWidth,h.textureHeight,!1),x=new Dr(h.textureWidth,h.textureHeight,{format:jt,type:Nt,depthTexture:new cl(h.textureWidth,h.textureHeight,s,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:m.stencil,colorSpace:t.outputColorSpace,samples:m.antialias?4:0,resolveDepthBuffer:!1===h.ignoreDepthValues,resolveStencilBuffer:!1===h.ignoreDepthValues})}else{const n={antialias:m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:i};d=new XRWebGLLayer(r,e,n),r.updateRenderState({baseLayer:d}),t.setPixelRatio(1),t.setSize(d.framebufferWidth,d.framebufferHeight,!1),x=new Dr(d.framebufferWidth,d.framebufferHeight,{format:jt,type:Nt,colorSpace:t.outputColorSpace,stencilBuffer:m.stencil,resolveDepthBuffer:!1===d.ignoreDepthValues,resolveStencilBuffer:!1===d.ignoreDepthValues})}x.isXRRenderTarget=!0,this.setFoveation(o),l=null,s=await r.requestReferenceSpace(a),F.setContext(r),F.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==r)return r.environmentBlendMode},this.getDepthTexture=function(){return f.getDepthTexture()};const R=new sr,N=new sr;function D(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===r)return;let e=t.near,n=t.far;null!==f.texture&&(f.depthNear>0&&(e=f.depthNear),f.depthFar>0&&(n=f.depthFar)),M.near=S.near=_.near=e,M.far=S.far=_.far=n,E===M.near&&I===M.far||(r.updateRenderState({depthNear:M.near,depthFar:M.far}),E=M.near,I=M.far),_.layers.mask=2|t.layers.mask,S.layers.mask=4|t.layers.mask,M.layers.mask=_.layers.mask|S.layers.mask;const i=t.parent,s=M.cameras;D(M,i);for(let t=0;t<s.length;t++)D(s[t],i);2===s.length?function(t,e,n){R.setFromMatrixPosition(e.matrixWorld),N.setFromMatrixPosition(n.matrixWorld);const r=R.distanceTo(N),i=e.projectionMatrix.elements,s=n.projectionMatrix.elements,a=i[14]/(i[10]-1),o=i[14]/(i[10]+1),l=(i[9]+1)/i[5],u=(i[9]-1)/i[5],c=(i[8]-1)/i[0],h=(s[8]+1)/s[0],d=a*c,p=a*h,f=r/(-c+h),m=f*-c;if(e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert(),-1===i[10])t.projectionMatrix.copy(e.projectionMatrix),t.projectionMatrixInverse.copy(e.projectionMatrixInverse);else{const e=a+f,n=o+f,i=d-m,s=p+(r-m),c=l*o/n*e,h=u*o/n*e;t.projectionMatrix.makePerspective(i,s,c,h,e,n),t.projectionMatrixInverse.copy(t.projectionMatrix).invert()}}(M,_,S):M.projectionMatrix.copy(_.projectionMatrix),function(t,e,n){null===n?t.matrix.copy(e.matrixWorld):(t.matrix.copy(n.matrixWorld),t.matrix.invert(),t.matrix.multiply(e.matrixWorld)),t.matrix.decompose(t.position,t.quaternion,t.scale),t.updateMatrixWorld(!0),t.projectionMatrix.copy(e.projectionMatrix),t.projectionMatrixInverse.copy(e.projectionMatrixInverse),t.isPerspectiveCamera&&(t.fov=2*Kn*Math.atan(1/t.projectionMatrix.elements[5]),t.zoom=1)}(t,M,i)},this.getCamera=function(){return M},this.getFoveation=function(){if(null!==h||null!==d)return o},this.setFoveation=function(t){o=t,null!==h&&(h.fixedFoveation=t),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=t)},this.hasDepthSensing=function(){return null!==f.texture},this.getDepthSensingMesh=function(){return f.getMesh(M)};let L=null;const F=new Od;F.setAnimationLoop(function(e,i){if(u=i.getViewerPose(l||s),p=i,null!==u){const e=u.views;null!==d&&(t.setRenderTargetFramebuffer(x,d.framebuffer),t.setRenderTarget(x));let n=!1;e.length!==M.cameras.length&&(M.cameras.length=0,n=!0);for(let r=0;r<e.length;r++){const i=e[r];let s=null;if(null!==d)s=d.getViewport(i);else{const e=c.getViewSubImage(h,i);s=e.viewport,0===r&&(t.setRenderTargetTextures(x,e.colorTexture,e.depthStencilTexture),t.setRenderTarget(x))}let a=T[r];void 0===a&&(a=new ra,a.layers.enable(r),a.viewport=new Rr,T[r]=a),a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.quaternion,a.scale),a.projectionMatrix.fromArray(i.projectionMatrix),a.projectionMatrixInverse.copy(a.projectionMatrix).invert(),a.viewport.set(s.x,s.y,s.width,s.height),0===r&&(M.matrix.copy(a.matrix),M.matrix.decompose(M.position,M.quaternion,M.scale)),!0===n&&M.cameras.push(a)}const i=r.enabledFeatures;if(i&&i.includes("depth-sensing")&&"gpu-optimized"==r.depthUsage&&c){const n=c.getDepthInformation(e[0]);n&&n.isValid&&n.texture&&f.init(t,n,r.renderState)}}for(let t=0;t<y.length;t++){const e=v[t],n=y[t];null!==e&&void 0!==n&&n.update(e,i,l||s)}L&&L(e,i),i.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:i}),p=null}),this.setAnimationLoop=function(t){L=t},this.dispose=function(){}}}const pm=new wi,fm=new hi;function mm(t,e){function n(t,e){!0===t.matrixAutoUpdate&&t.updateMatrix(),e.value.copy(t.matrix)}function r(t,r){t.opacity.value=r.opacity,r.color&&t.diffuse.value.copy(r.color),r.emissive&&t.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(t.map.value=r.map,n(r.map,t.mapTransform)),r.alphaMap&&(t.alphaMap.value=r.alphaMap,n(r.alphaMap,t.alphaMapTransform)),r.bumpMap&&(t.bumpMap.value=r.bumpMap,n(r.bumpMap,t.bumpMapTransform),t.bumpScale.value=r.bumpScale,r.side===y&&(t.bumpScale.value*=-1)),r.normalMap&&(t.normalMap.value=r.normalMap,n(r.normalMap,t.normalMapTransform),t.normalScale.value.copy(r.normalScale),r.side===y&&t.normalScale.value.negate()),r.displacementMap&&(t.displacementMap.value=r.displacementMap,n(r.displacementMap,t.displacementMapTransform),t.displacementScale.value=r.displacementScale,t.displacementBias.value=r.displacementBias),r.emissiveMap&&(t.emissiveMap.value=r.emissiveMap,n(r.emissiveMap,t.emissiveMapTransform)),r.specularMap&&(t.specularMap.value=r.specularMap,n(r.specularMap,t.specularMapTransform)),r.alphaTest>0&&(t.alphaTest.value=r.alphaTest);const i=e.get(r),s=i.envMap,a=i.envMapRotation;s&&(t.envMap.value=s,pm.copy(a),pm.x*=-1,pm.y*=-1,pm.z*=-1,s.isCubeTexture&&!1===s.isRenderTargetTexture&&(pm.y*=-1,pm.z*=-1),t.envMapRotation.value.setFromMatrix4(fm.makeRotationFromEuler(pm)),t.flipEnvMap.value=s.isCubeTexture&&!1===s.isRenderTargetTexture?-1:1,t.reflectivity.value=r.reflectivity,t.ior.value=r.ior,t.refractionRatio.value=r.refractionRatio),r.lightMap&&(t.lightMap.value=r.lightMap,t.lightMapIntensity.value=r.lightMapIntensity,n(r.lightMap,t.lightMapTransform)),r.aoMap&&(t.aoMap.value=r.aoMap,t.aoMapIntensity.value=r.aoMapIntensity,n(r.aoMap,t.aoMapTransform))}return{refreshFogUniforms:function(e,n){n.color.getRGB(e.fogColor.value,Ys(t)),n.isFog?(e.fogNear.value=n.near,e.fogFar.value=n.far):n.isFogExp2&&(e.fogDensity.value=n.density)},refreshMaterialUniforms:function(t,i,s,a,o){i.isMeshBasicMaterial||i.isMeshLambertMaterial?r(t,i):i.isMeshToonMaterial?(r(t,i),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(t,i)):i.isMeshPhongMaterial?(r(t,i),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4)}(t,i)):i.isMeshStandardMaterial?(r(t,i),function(t,e){t.metalness.value=e.metalness,e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap,n(e.metalnessMap,t.metalnessMapTransform)),t.roughness.value=e.roughness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap,n(e.roughnessMap,t.roughnessMapTransform)),e.envMap&&(t.envMapIntensity.value=e.envMapIntensity)}(t,i),i.isMeshPhysicalMaterial&&function(t,e,r){t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap,n(e.sheenColorMap,t.sheenColorMapTransform)),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap,n(e.sheenRoughnessMap,t.sheenRoughnessMapTransform))),e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap,n(e.clearcoatMap,t.clearcoatMapTransform)),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap,n(e.clearcoatRoughnessMap,t.clearcoatRoughnessMapTransform)),e.clearcoatNormalMap&&(t.clearcoatNormalMap.value=e.clearcoatNormalMap,n(e.clearcoatNormalMap,t.clearcoatNormalMapTransform),t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),e.side===y&&t.clearcoatNormalScale.value.negate())),e.dispersion>0&&(t.dispersion.value=e.dispersion),e.iridescence>0&&(t.iridescence.value=e.iridescence,t.iridescenceIOR.value=e.iridescenceIOR,t.iridescenceThicknessMinimum.value=e.iridescenceThicknessRange[0],t.iridescenceThicknessMaximum.value=e.iridescenceThicknessRange[1],e.iridescenceMap&&(t.iridescenceMap.value=e.iridescenceMap,n(e.iridescenceMap,t.iridescenceMapTransform)),e.iridescenceThicknessMap&&(t.iridescenceThicknessMap.value=e.iridescenceThicknessMap,n(e.iridescenceThicknessMap,t.iridescenceThicknessMapTransform))),e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=r.texture,t.transmissionSamplerSize.value.set(r.width,r.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap,n(e.transmissionMap,t.transmissionMapTransform)),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap,n(e.thicknessMap,t.thicknessMapTransform)),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor)),e.anisotropy>0&&(t.anisotropyVector.value.set(e.anisotropy*Math.cos(e.anisotropyRotation),e.anisotropy*Math.sin(e.anisotropyRotation)),e.anisotropyMap&&(t.anisotropyMap.value=e.anisotropyMap,n(e.anisotropyMap,t.anisotropyMapTransform))),t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap,n(e.specularColorMap,t.specularColorMapTransform)),e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap,n(e.specularIntensityMap,t.specularIntensityMapTransform))}(t,i,o)):i.isMeshMatcapMaterial?(r(t,i),function(t,e){e.matcap&&(t.matcap.value=e.matcap)}(t,i)):i.isMeshDepthMaterial?r(t,i):i.isMeshDistanceMaterial?(r(t,i),function(t,n){const r=e.get(n).light;t.referencePosition.value.setFromMatrixPosition(r.matrixWorld),t.nearDistance.value=r.shadow.camera.near,t.farDistance.value=r.shadow.camera.far}(t,i)):i.isMeshNormalMaterial?r(t,i):i.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,e.map&&(t.map.value=e.map,n(e.map,t.mapTransform))}(t,i),i.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,i)):i.isPointsMaterial?function(t,e,r,i){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*r,t.scale.value=.5*i,e.map&&(t.map.value=e.map,n(e.map,t.uvTransform)),e.alphaMap&&(t.alphaMap.value=e.alphaMap,n(e.alphaMap,t.alphaMapTransform)),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,i,s,a):i.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map,n(e.map,t.mapTransform)),e.alphaMap&&(t.alphaMap.value=e.alphaMap,n(e.alphaMap,t.alphaMapTransform)),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,i):i.isShadowMaterial?(t.color.value.copy(i.color),t.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function gm(t,e,n,r){let i={},s={},a=[];const o=t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS);function l(t,e,n,r){const i=t.value,s=e+"_"+n;if(void 0===r[s])return r[s]="number"==typeof i||"boolean"==typeof i?i:i.clone(),!0;{const t=r[s];if("number"==typeof i||"boolean"==typeof i){if(t!==i)return r[s]=i,!0}else if(!1===t.equals(i))return t.copy(i),!0}return!1}function u(t){const e={boundary:0,storage:0};return"number"==typeof t||"boolean"==typeof t?(e.boundary=4,e.storage=4):t.isVector2?(e.boundary=8,e.storage=8):t.isVector3||t.isColor?(e.boundary=16,e.storage=12):t.isVector4?(e.boundary=16,e.storage=16):t.isMatrix3?(e.boundary=48,e.storage=48):t.isMatrix4?(e.boundary=64,e.storage=64):t.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",t),e}function c(e){const n=e.target;n.removeEventListener("dispose",c);const r=a.indexOf(n.__bindingPointIndex);a.splice(r,1),t.deleteBuffer(i[n.id]),delete i[n.id],delete s[n.id]}return{bind:function(t,e){const n=e.program;r.uniformBlockBinding(t,n)},update:function(n,h){let d=i[n.id];void 0===d&&(function(t){const e=t.uniforms;let n=0;for(let t=0,r=e.length;t<r;t++){const r=Array.isArray(e[t])?e[t]:[e[t]];for(let t=0,e=r.length;t<e;t++){const e=r[t],i=Array.isArray(e.value)?e.value:[e.value];for(let t=0,r=i.length;t<r;t++){const r=u(i[t]),s=n%16,a=s%r.boundary,o=s+a;n+=a,0!==o&&16-o<r.storage&&(n+=16-o),e.__data=new Float32Array(r.storage/Float32Array.BYTES_PER_ELEMENT),e.__offset=n,n+=r.storage}}}const r=n%16;r>0&&(n+=16-r),t.__size=n,t.__cache={}}(n),d=function(e){const n=function(){for(let t=0;t<o;t++)if(-1===a.indexOf(t))return a.push(t),t;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();e.__bindingPointIndex=n;const r=t.createBuffer(),i=e.__size,s=e.usage;return t.bindBuffer(t.UNIFORM_BUFFER,r),t.bufferData(t.UNIFORM_BUFFER,i,s),t.bindBuffer(t.UNIFORM_BUFFER,null),t.bindBufferBase(t.UNIFORM_BUFFER,n,r),r}(n),i[n.id]=d,n.addEventListener("dispose",c));const p=h.program;r.updateUBOMapping(n,p);const f=e.render.frame;s[n.id]!==f&&(function(e){const n=i[e.id],r=e.uniforms,s=e.__cache;t.bindBuffer(t.UNIFORM_BUFFER,n);for(let e=0,n=r.length;e<n;e++){const n=Array.isArray(r[e])?r[e]:[r[e]];for(let r=0,i=n.length;r<i;r++){const i=n[r];if(!0===l(i,e,r,s)){const e=i.__offset,n=Array.isArray(i.value)?i.value:[i.value];let r=0;for(let s=0;s<n.length;s++){const a=n[s],o=u(a);"number"==typeof a||"boolean"==typeof a?(i.__data[0]=a,t.bufferSubData(t.UNIFORM_BUFFER,e+r,i.__data)):a.isMatrix3?(i.__data[0]=a.elements[0],i.__data[1]=a.elements[1],i.__data[2]=a.elements[2],i.__data[3]=0,i.__data[4]=a.elements[3],i.__data[5]=a.elements[4],i.__data[6]=a.elements[5],i.__data[7]=0,i.__data[8]=a.elements[6],i.__data[9]=a.elements[7],i.__data[10]=a.elements[8],i.__data[11]=0):(a.toArray(i.__data,r),r+=o.storage/Float32Array.BYTES_PER_ELEMENT)}t.bufferSubData(t.UNIFORM_BUFFER,e,i.__data)}}}t.bindBuffer(t.UNIFORM_BUFFER,null)}(n),s[n.id]=f)},dispose:function(){for(const e in i)t.deleteBuffer(i[e]);a=[],i={},s={}}}}class xm{constructor(t={}){const{canvas:e=fr(),context:n=null,depth:r=!0,stencil:i=!1,alpha:s=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:u=!1,powerPreference:c="default",failIfMajorPerformanceCaveat:h=!1,reverseDepthBuffer:d=!1}=t;let p;if(this.isWebGLRenderer=!0,null!==n){if("undefined"!=typeof WebGLRenderingContext&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");p=n.getContextAttributes().alpha}else p=s;const f=new Uint32Array(4),m=new Int32Array(4);let g=null,b=null;const w=[],_=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=rt,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const S=this;let T=!1;this._outputColorSpace=tn;let M=0,E=0,I=null,C=-1,k=null;const A=new Rr,R=new Rr;let N=null;const D=new rs(0);let L=0,F=e.width,P=e.height,O=1,$=null,U=null;const z=new Rr(0,0,F,P),B=new Rr(0,0,F,P);let V=!1;const W=new po;let G=!1,H=!1;const j=new hi,q=new hi,X=new sr,K=new Rr,Y={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Z=!1;function J(){return null===I?O:1}let Q,tt,et,nt,it,st,at,ot,lt,ut,ct,ht,dt,pt,ft,mt,gt,xt,yt,vt,bt,wt,_t,St,Tt=n;function Mt(t,n){return e.getContext(t,n)}try{const t={alpha:!0,depth:r,stencil:i,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:u,powerPreference:c,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${a}`),e.addEventListener("webglcontextlost",Ct,!1),e.addEventListener("webglcontextrestored",kt,!1),e.addEventListener("webglcontextcreationerror",Rt,!1),null===Tt){const e="webgl2";if(Tt=Mt(e,t),null===Tt)throw Mt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function Et(){Q=new fp(Tt),Q.init(),wt=new cm(Tt,Q),tt=new Xd(Tt,Q,t,wt),et=new lm(Tt,Q),tt.reverseDepthBuffer&&d&&et.buffers.depth.setReversed(!0),nt=new xp(Tt),it=new Kf,st=new um(Tt,Q,et,it,tt,wt,nt),at=new Yd(S),ot=new pp(S),lt=new $d(Tt),_t=new jd(Tt,lt),ut=new mp(Tt,lt,nt,_t),ct=new vp(Tt,ut,lt,nt),yt=new yp(Tt,tt,st),mt=new Kd(it),ht=new Xf(S,at,ot,Q,tt,_t,mt),dt=new mm(S,it),pt=new Qf,ft=new sm(Q),xt=new Hd(S,at,ot,et,ct,p,l),gt=new am(S,ct,tt),St=new gm(Tt,nt,tt,et),vt=new qd(Tt,Q,nt),bt=new gp(Tt,Q,nt),nt.programs=ht.programs,S.capabilities=tt,S.extensions=Q,S.properties=it,S.renderLists=pt,S.shadowMap=gt,S.state=et,S.info=nt}Et();const It=new dm(S,Tt);function Ct(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),T=!0}function kt(){console.log("THREE.WebGLRenderer: Context Restored."),T=!1;const t=nt.autoReset,e=gt.enabled,n=gt.autoUpdate,r=gt.needsUpdate,i=gt.type;Et(),nt.autoReset=t,gt.enabled=e,gt.autoUpdate=n,gt.needsUpdate=r,gt.type=i}function Rt(t){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",t.statusMessage)}function Dt(t){const e=t.target;e.removeEventListener("dispose",Dt),function(t){(function(t){const e=it.get(t).programs;void 0!==e&&(e.forEach(function(t){ht.releaseProgram(t)}),t.isShaderMaterial&&ht.releaseShaderCache(t))})(t),it.remove(t)}(e)}function Lt(t,e,n){!0===t.transparent&&t.side===v&&!1===t.forceSinglePass?(t.side=y,t.needsUpdate=!0,Zt(t,e,n),t.side=x,t.needsUpdate=!0,Zt(t,e,n),t.side=v):Zt(t,e,n)}this.xr=It,this.getContext=function(){return Tt},this.getContextAttributes=function(){return Tt.getContextAttributes()},this.forceContextLoss=function(){const t=Q.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=Q.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return O},this.setPixelRatio=function(t){void 0!==t&&(O=t,this.setSize(F,P,!1))},this.getSize=function(t){return t.set(F,P)},this.setSize=function(t,n,r=!0){It.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(F=t,P=n,e.width=Math.floor(t*O),e.height=Math.floor(n*O),!0===r&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return t.set(F*O,P*O).floor()},this.setDrawingBufferSize=function(t,n,r){F=t,P=n,O=r,e.width=Math.floor(t*r),e.height=Math.floor(n*r),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return t.copy(A)},this.getViewport=function(t){return t.copy(z)},this.setViewport=function(t,e,n,r){t.isVector4?z.set(t.x,t.y,t.z,t.w):z.set(t,e,n,r),et.viewport(A.copy(z).multiplyScalar(O).round())},this.getScissor=function(t){return t.copy(B)},this.setScissor=function(t,e,n,r){t.isVector4?B.set(t.x,t.y,t.z,t.w):B.set(t,e,n,r),et.scissor(R.copy(B).multiplyScalar(O).round())},this.getScissorTest=function(){return V},this.setScissorTest=function(t){et.setScissorTest(V=t)},this.setOpaqueSort=function(t){$=t},this.setTransparentSort=function(t){U=t},this.getClearColor=function(t){return t.copy(xt.getClearColor())},this.setClearColor=function(){xt.setClearColor(...arguments)},this.getClearAlpha=function(){return xt.getClearAlpha()},this.setClearAlpha=function(){xt.setClearAlpha(...arguments)},this.clear=function(t=!0,e=!0,n=!0){let r=0;if(t){let t=!1;if(null!==I){const e=I.texture.format;t=e===te||e===Jt||e===Yt}if(t){const t=I.texture.type,e=t===Nt||t===Ot||t===Ft||t===Vt||t===zt||t===Bt,n=xt.getClearColor(),r=xt.getClearAlpha(),i=n.r,s=n.g,a=n.b;e?(f[0]=i,f[1]=s,f[2]=a,f[3]=r,Tt.clearBufferuiv(Tt.COLOR,0,f)):(m[0]=i,m[1]=s,m[2]=a,m[3]=r,Tt.clearBufferiv(Tt.COLOR,0,m))}else r|=Tt.COLOR_BUFFER_BIT}e&&(r|=Tt.DEPTH_BUFFER_BIT),n&&(r|=Tt.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),Tt.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ct,!1),e.removeEventListener("webglcontextrestored",kt,!1),e.removeEventListener("webglcontextcreationerror",Rt,!1),xt.dispose(),pt.dispose(),ft.dispose(),it.dispose(),at.dispose(),ot.dispose(),ct.dispose(),_t.dispose(),St.dispose(),ht.dispose(),It.dispose(),It.removeEventListener("sessionstart",$t),It.removeEventListener("sessionend",Wt),Gt.stop()},this.renderBufferDirect=function(t,e,n,r,i,s){null===e&&(e=Y);const a=i.isMesh&&i.matrixWorld.determinant()<0,o=function(t,e,n,r,i){!0!==e.isScene&&(e=Y),st.resetTextureUnits();const s=e.fog,a=r.isMeshStandardMaterial?e.environment:null,o=null===I?S.outputColorSpace:!0===I.isXRRenderTarget?I.texture.colorSpace:en,l=(r.isMeshStandardMaterial?ot:at).get(r.envMap||a),u=!0===r.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,c=!!n.attributes.tangent&&(!!r.normalMap||r.anisotropy>0),h=!!n.morphAttributes.position,d=!!n.morphAttributes.normal,p=!!n.morphAttributes.color;let f=rt;r.toneMapped&&(null!==I&&!0!==I.isXRRenderTarget||(f=S.toneMapping));const m=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,g=void 0!==m?m.length:0,x=it.get(r),y=b.state.lights;if(!0===G&&(!0===H||t!==k)){const e=t===k&&r.id===C;mt.setState(r,t,e)}let v=!1;r.version===x.__version?x.needsLights&&x.lightsStateVersion!==y.state.version||x.outputColorSpace!==o||i.isBatchedMesh&&!1===x.batching?v=!0:i.isBatchedMesh||!0!==x.batching?i.isBatchedMesh&&!0===x.batchingColor&&null===i.colorTexture||i.isBatchedMesh&&!1===x.batchingColor&&null!==i.colorTexture||i.isInstancedMesh&&!1===x.instancing?v=!0:i.isInstancedMesh||!0!==x.instancing?i.isSkinnedMesh&&!1===x.skinning?v=!0:i.isSkinnedMesh||!0!==x.skinning?i.isInstancedMesh&&!0===x.instancingColor&&null===i.instanceColor||i.isInstancedMesh&&!1===x.instancingColor&&null!==i.instanceColor||i.isInstancedMesh&&!0===x.instancingMorph&&null===i.morphTexture||i.isInstancedMesh&&!1===x.instancingMorph&&null!==i.morphTexture||x.envMap!==l||!0===r.fog&&x.fog!==s?v=!0:void 0===x.numClippingPlanes||x.numClippingPlanes===mt.numPlanes&&x.numIntersection===mt.numIntersection?(x.vertexAlphas!==u||x.vertexTangents!==c||x.morphTargets!==h||x.morphNormals!==d||x.morphColors!==p||x.toneMapping!==f||x.morphTargetsCount!==g)&&(v=!0):v=!0:v=!0:v=!0:v=!0:(v=!0,x.__version=r.version);let w=x.currentProgram;!0===v&&(w=Zt(r,e,i));let _=!1,T=!1,M=!1;const E=w.getUniforms(),A=x.uniforms;if(et.useProgram(w.program)&&(_=!0,T=!0,M=!0),r.id!==C&&(C=r.id,T=!0),_||k!==t){et.buffers.depth.getReversed()?(j.copy(t.projectionMatrix),function(t){const e=t.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}(j),function(t){const e=t.elements;-1===e[11]?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=1-e[14])}(j),E.setValue(Tt,"projectionMatrix",j)):E.setValue(Tt,"projectionMatrix",t.projectionMatrix),E.setValue(Tt,"viewMatrix",t.matrixWorldInverse);const e=E.map.cameraPosition;void 0!==e&&e.setValue(Tt,X.setFromMatrixPosition(t.matrixWorld)),tt.logarithmicDepthBuffer&&E.setValue(Tt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&E.setValue(Tt,"isOrthographic",!0===t.isOrthographicCamera),k!==t&&(k=t,T=!0,M=!0)}if(i.isSkinnedMesh){E.setOptional(Tt,i,"bindMatrix"),E.setOptional(Tt,i,"bindMatrixInverse");const t=i.skeleton;t&&(null===t.boneTexture&&t.computeBoneTexture(),E.setValue(Tt,"boneTexture",t.boneTexture,st))}i.isBatchedMesh&&(E.setOptional(Tt,i,"batchingTexture"),E.setValue(Tt,"batchingTexture",i._matricesTexture,st),E.setOptional(Tt,i,"batchingIdTexture"),E.setValue(Tt,"batchingIdTexture",i._indirectTexture,st),E.setOptional(Tt,i,"batchingColorTexture"),null!==i._colorsTexture&&E.setValue(Tt,"batchingColorTexture",i._colorsTexture,st));const R=n.morphAttributes;var N,D;if(void 0===R.position&&void 0===R.normal&&void 0===R.color||yt.update(i,n,w),(T||x.receiveShadow!==i.receiveShadow)&&(x.receiveShadow=i.receiveShadow,E.setValue(Tt,"receiveShadow",i.receiveShadow)),r.isMeshGouraudMaterial&&null!==r.envMap&&(A.envMap.value=l,A.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1),r.isMeshStandardMaterial&&null===r.envMap&&null!==e.environment&&(A.envMapIntensity.value=e.environmentIntensity),T&&(E.setValue(Tt,"toneMappingExposure",S.toneMappingExposure),x.needsLights&&(D=M,(N=A).ambientLightColor.needsUpdate=D,N.lightProbe.needsUpdate=D,N.directionalLights.needsUpdate=D,N.directionalLightShadows.needsUpdate=D,N.pointLights.needsUpdate=D,N.pointLightShadows.needsUpdate=D,N.spotLights.needsUpdate=D,N.spotLightShadows.needsUpdate=D,N.rectAreaLights.needsUpdate=D,N.hemisphereLights.needsUpdate=D),s&&!0===r.fog&&dt.refreshFogUniforms(A,s),dt.refreshMaterialUniforms(A,r,O,P,b.state.transmissionRenderTarget[t.id]),Mf.upload(Tt,Qt(x),A,st)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(Mf.upload(Tt,Qt(x),A,st),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&E.setValue(Tt,"center",i.center),E.setValue(Tt,"modelViewMatrix",i.modelViewMatrix),E.setValue(Tt,"normalMatrix",i.normalMatrix),E.setValue(Tt,"modelMatrix",i.matrixWorld),r.isShaderMaterial||r.isRawShaderMaterial){const t=r.uniformsGroups;for(let e=0,n=t.length;e<n;e++){const n=t[e];St.update(n,w),St.bind(n,w)}}return w}(t,e,n,r,i);et.setMaterial(r,a);let l=n.index,u=1;if(!0===r.wireframe){if(l=ut.getWireframeAttribute(n),void 0===l)return;u=2}const c=n.drawRange,h=n.attributes.position;let d=c.start*u,p=(c.start+c.count)*u;null!==s&&(d=Math.max(d,s.start*u),p=Math.min(p,(s.start+s.count)*u)),null!==l?(d=Math.max(d,0),p=Math.min(p,l.count)):null!=h&&(d=Math.max(d,0),p=Math.min(p,h.count));const f=p-d;if(f<0||f===1/0)return;let m;_t.setup(i,r,o,n,l);let g=vt;if(null!==l&&(m=lt.get(l),g=bt,g.setIndex(m)),i.isMesh)!0===r.wireframe?(et.setLineWidth(r.wireframeLinewidth*J()),g.setMode(Tt.LINES)):g.setMode(Tt.TRIANGLES);else if(i.isLine){let t=r.linewidth;void 0===t&&(t=1),et.setLineWidth(t*J()),i.isLineSegments?g.setMode(Tt.LINES):i.isLineLoop?g.setMode(Tt.LINE_LOOP):g.setMode(Tt.LINE_STRIP)}else i.isPoints?g.setMode(Tt.POINTS):i.isSprite&&g.setMode(Tt.TRIANGLES);if(i.isBatchedMesh)if(null!==i._multiDrawInstances)gr("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),g.renderMultiDrawInstances(i._multiDrawStarts,i._multiDrawCounts,i._multiDrawCount,i._multiDrawInstances);else if(Q.get("WEBGL_multi_draw"))g.renderMultiDraw(i._multiDrawStarts,i._multiDrawCounts,i._multiDrawCount);else{const t=i._multiDrawStarts,e=i._multiDrawCounts,n=i._multiDrawCount,s=l?lt.get(l).bytesPerElement:1,a=it.get(r).currentProgram.getUniforms();for(let r=0;r<n;r++)a.setValue(Tt,"_gl_DrawID",r),g.render(t[r]/s,e[r])}else if(i.isInstancedMesh)g.renderInstances(d,f,i.count);else if(n.isInstancedBufferGeometry){const t=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,e=Math.min(n.instanceCount,t);g.renderInstances(d,f,e)}else g.render(d,f)},this.compile=function(t,e,n=null){null===n&&(n=t),b=ft.get(n),b.init(e),_.push(b),n.traverseVisible(function(t){t.isLight&&t.layers.test(e.layers)&&(b.pushLight(t),t.castShadow&&b.pushShadow(t))}),t!==n&&t.traverseVisible(function(t){t.isLight&&t.layers.test(e.layers)&&(b.pushLight(t),t.castShadow&&b.pushShadow(t))}),b.setupLights();const r=new Set;return t.traverse(function(t){if(!(t.isMesh||t.isPoints||t.isLine||t.isSprite))return;const e=t.material;if(e)if(Array.isArray(e))for(let i=0;i<e.length;i++){const s=e[i];Lt(s,n,t),r.add(s)}else Lt(e,n,t),r.add(e)}),b=_.pop(),r},this.compileAsync=function(t,e,n=null){const r=this.compile(t,e,n);return new Promise(e=>{function n(){r.forEach(function(t){it.get(t).currentProgram.isReady()&&r.delete(t)}),0!==r.size?setTimeout(n,10):e(t)}null!==Q.get("KHR_parallel_shader_compile")?n():setTimeout(n,10)})};let Pt=null;function $t(){Gt.stop()}function Wt(){Gt.start()}const Gt=new Od;function Ht(t,e,n,r){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)b.pushLight(t),t.castShadow&&b.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||W.intersectsSprite(t)){r&&K.setFromMatrixPosition(t.matrixWorld).applyMatrix4(q);const e=ct.update(t),i=t.material;i.visible&&g.push(t,e,i,n,K.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(!t.frustumCulled||W.intersectsObject(t))){const e=ct.update(t),i=t.material;if(r&&(void 0!==t.boundingSphere?(null===t.boundingSphere&&t.computeBoundingSphere(),K.copy(t.boundingSphere.center)):(null===e.boundingSphere&&e.computeBoundingSphere(),K.copy(e.boundingSphere.center)),K.applyMatrix4(t.matrixWorld).applyMatrix4(q)),Array.isArray(i)){const r=e.groups;for(let s=0,a=r.length;s<a;s++){const a=r[s],o=i[a.materialIndex];o&&o.visible&&g.push(t,e,o,n,K.z,a)}}else i.visible&&g.push(t,e,i,n,K.z,null)}const i=t.children;for(let t=0,s=i.length;t<s;t++)Ht(i[t],e,n,r)}function jt(t,e,n,r){const i=t.opaque,s=t.transmissive,a=t.transparent;b.setupLightsView(n),!0===G&&mt.setGlobalState(S.clippingPlanes,n),r&&et.viewport(A.copy(r)),i.length>0&&Xt(i,e,n),s.length>0&&Xt(s,e,n),a.length>0&&Xt(a,e,n),et.buffers.depth.setTest(!0),et.buffers.depth.setMask(!0),et.buffers.color.setMask(!0),et.setPolygonOffset(!1)}function qt(t,e,n,r){if(null!==(!0===n.isScene?n.overrideMaterial:null))return;void 0===b.state.transmissionRenderTarget[r.id]&&(b.state.transmissionRenderTarget[r.id]=new Dr(1,1,{generateMipmaps:!0,type:Q.has("EXT_color_buffer_half_float")||Q.has("EXT_color_buffer_float")?Ut:Nt,minFilter:At,samples:4,stencilBuffer:i,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:br.workingColorSpace}));const s=b.state.transmissionRenderTarget[r.id],a=r.viewport||A;s.setSize(a.z*S.transmissionResolutionScale,a.w*S.transmissionResolutionScale);const o=S.getRenderTarget();S.setRenderTarget(s),S.getClearColor(D),L=S.getClearAlpha(),L<1&&S.setClearColor(16777215,.5),S.clear(),Z&&xt.render(n);const l=S.toneMapping;S.toneMapping=rt;const u=r.viewport;if(void 0!==r.viewport&&(r.viewport=void 0),b.setupLightsView(r),!0===G&&mt.setGlobalState(S.clippingPlanes,r),Xt(t,n,r),st.updateMultisampleRenderTarget(s),st.updateRenderTargetMipmap(s),!1===Q.has("WEBGL_multisampled_render_to_texture")){let t=!1;for(let i=0,s=e.length;i<s;i++){const s=e[i],a=s.object,o=s.geometry,l=s.material,u=s.group;if(l.side===v&&a.layers.test(r.layers)){const e=l.side;l.side=y,l.needsUpdate=!0,Kt(a,n,r,o,l,u),l.side=e,l.needsUpdate=!0,t=!0}}!0===t&&(st.updateMultisampleRenderTarget(s),st.updateRenderTargetMipmap(s))}S.setRenderTarget(o),S.setClearColor(D,L),void 0!==u&&(r.viewport=u),S.toneMapping=l}function Xt(t,e,n){const r=!0===e.isScene?e.overrideMaterial:null;for(let i=0,s=t.length;i<s;i++){const s=t[i],a=s.object,o=s.geometry,l=s.group;let u=s.material;!0===u.allowOverride&&null!==r&&(u=r),a.layers.test(n.layers)&&Kt(a,e,n,o,u,l)}}function Kt(t,e,n,r,i,s){t.onBeforeRender(S,e,n,r,i,s),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),i.onBeforeRender(S,e,n,r,t,s),!0===i.transparent&&i.side===v&&!1===i.forceSinglePass?(i.side=y,i.needsUpdate=!0,S.renderBufferDirect(n,e,r,i,t,s),i.side=x,i.needsUpdate=!0,S.renderBufferDirect(n,e,r,i,t,s),i.side=v):S.renderBufferDirect(n,e,r,i,t,s),t.onAfterRender(S,e,n,r,i,s)}function Zt(t,e,n){!0!==e.isScene&&(e=Y);const r=it.get(t),i=b.state.lights,s=b.state.shadowsArray,a=i.state.version,o=ht.getParameters(t,i.state,s,e,n),l=ht.getProgramCacheKey(o);let u=r.programs;r.environment=t.isMeshStandardMaterial?e.environment:null,r.fog=e.fog,r.envMap=(t.isMeshStandardMaterial?ot:at).get(t.envMap||r.environment),r.envMapRotation=null!==r.environment&&null===t.envMap?e.environmentRotation:t.envMapRotation,void 0===u&&(t.addEventListener("dispose",Dt),u=new Map,r.programs=u);let c=u.get(l);if(void 0!==c){if(r.currentProgram===c&&r.lightsStateVersion===a)return ee(t,o),c}else o.uniforms=ht.getUniforms(t),t.onBeforeCompile(o,S),c=ht.acquireProgram(o,l),u.set(l,c),r.uniforms=o.uniforms;const h=r.uniforms;return(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(h.clippingPlanes=mt.uniform),ee(t,o),r.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),r.lightsStateVersion=a,r.needsLights&&(h.ambientLightColor.value=i.state.ambient,h.lightProbe.value=i.state.probe,h.directionalLights.value=i.state.directional,h.directionalLightShadows.value=i.state.directionalShadow,h.spotLights.value=i.state.spot,h.spotLightShadows.value=i.state.spotShadow,h.rectAreaLights.value=i.state.rectArea,h.ltc_1.value=i.state.rectAreaLTC1,h.ltc_2.value=i.state.rectAreaLTC2,h.pointLights.value=i.state.point,h.pointLightShadows.value=i.state.pointShadow,h.hemisphereLights.value=i.state.hemi,h.directionalShadowMap.value=i.state.directionalShadowMap,h.directionalShadowMatrix.value=i.state.directionalShadowMatrix,h.spotShadowMap.value=i.state.spotShadowMap,h.spotLightMatrix.value=i.state.spotLightMatrix,h.spotLightMap.value=i.state.spotLightMap,h.pointShadowMap.value=i.state.pointShadowMap,h.pointShadowMatrix.value=i.state.pointShadowMatrix),r.currentProgram=c,r.uniformsList=null,c}function Qt(t){if(null===t.uniformsList){const e=t.currentProgram.getUniforms();t.uniformsList=Mf.seqWithValue(e.seq,t.uniforms)}return t.uniformsList}function ee(t,e){const n=it.get(t);n.outputColorSpace=e.outputColorSpace,n.batching=e.batching,n.batchingColor=e.batchingColor,n.instancing=e.instancing,n.instancingColor=e.instancingColor,n.instancingMorph=e.instancingMorph,n.skinning=e.skinning,n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.morphColors=e.morphColors,n.morphTargetsCount=e.morphTargetsCount,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas,n.vertexTangents=e.vertexTangents,n.toneMapping=e.toneMapping}Gt.setAnimationLoop(function(t){Pt&&Pt(t)}),"undefined"!=typeof self&&Gt.setContext(self),this.setAnimationLoop=function(t){Pt=t,It.setAnimationLoop(t),null===t?Gt.stop():Gt.start()},It.addEventListener("sessionstart",$t),It.addEventListener("sessionend",Wt),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===T)return;if(!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),null===e.parent&&!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),!0===It.enabled&&!0===It.isPresenting&&(!0===It.cameraAutoUpdate&&It.updateCamera(e),e=It.getCamera()),!0===t.isScene&&t.onBeforeRender(S,t,e,I),b=ft.get(t,_.length),b.init(e),_.push(b),q.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),W.setFromProjectionMatrix(q),H=this.localClippingEnabled,G=mt.init(this.clippingPlanes,H),g=pt.get(t,w.length),g.init(),w.push(g),!0===It.enabled&&!0===It.isPresenting){const t=S.xr.getDepthSensingMesh();null!==t&&Ht(t,e,-1/0,S.sortObjects)}Ht(t,e,0,S.sortObjects),g.finish(),!0===S.sortObjects&&g.sort($,U),Z=!1===It.enabled||!1===It.isPresenting||!1===It.hasDepthSensing(),Z&&xt.addToRenderList(g,t),this.info.render.frame++,!0===G&&mt.beginShadows();const n=b.state.shadowsArray;gt.render(n,t,e),!0===G&&mt.endShadows(),!0===this.info.autoReset&&this.info.reset();const r=g.opaque,i=g.transmissive;if(b.setupLights(),e.isArrayCamera){const n=e.cameras;if(i.length>0)for(let e=0,s=n.length;e<s;e++)qt(r,i,t,n[e]);Z&&xt.render(t);for(let e=0,r=n.length;e<r;e++){const r=n[e];jt(g,t,r,r.viewport)}}else i.length>0&&qt(r,i,t,e),Z&&xt.render(t),jt(g,t,e);null!==I&&0===E&&(st.updateMultisampleRenderTarget(I),st.updateRenderTargetMipmap(I)),!0===t.isScene&&t.onAfterRender(S,t,e),_t.resetDefaultState(),C=-1,k=null,_.pop(),_.length>0?(b=_[_.length-1],!0===G&&mt.setGlobalState(S.clippingPlanes,b.state.camera)):b=null,w.pop(),g=w.length>0?w[w.length-1]:null},this.getActiveCubeFace=function(){return M},this.getActiveMipmapLevel=function(){return E},this.getRenderTarget=function(){return I},this.setRenderTargetTextures=function(t,e,n){const r=it.get(t);r.__autoAllocateDepthBuffer=!1===t.resolveDepthBuffer,!1===r.__autoAllocateDepthBuffer&&(r.__useRenderToTexture=!1),it.get(t.texture).__webglTexture=e,it.get(t.depthTexture).__webglTexture=r.__autoAllocateDepthBuffer?void 0:n,r.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(t,e){const n=it.get(t);n.__webglFramebuffer=e,n.__useDefaultFramebuffer=void 0===e};const ne=Tt.createFramebuffer();this.setRenderTarget=function(t,e=0,n=0){I=t,M=e,E=n;let r=!0,i=null,s=!1,a=!1;if(t){const o=it.get(t);if(void 0!==o.__useDefaultFramebuffer)et.bindFramebuffer(Tt.FRAMEBUFFER,null),r=!1;else if(void 0===o.__webglFramebuffer)st.setupRenderTarget(t);else if(o.__hasExternalTextures)st.rebindTextures(t,it.get(t.texture).__webglTexture,it.get(t.depthTexture).__webglTexture);else if(t.depthBuffer){const e=t.depthTexture;if(o.__boundDepthTexture!==e){if(null!==e&&it.has(e)&&(t.width!==e.image.width||t.height!==e.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");st.setupDepthRenderbuffer(t)}}const l=t.texture;(l.isData3DTexture||l.isDataArrayTexture||l.isCompressedArrayTexture)&&(a=!0);const u=it.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(i=Array.isArray(u[e])?u[e][n]:u[e],s=!0):i=t.samples>0&&!1===st.useMultisampledRTT(t)?it.get(t).__webglMultisampledFramebuffer:Array.isArray(u)?u[n]:u,A.copy(t.viewport),R.copy(t.scissor),N=t.scissorTest}else A.copy(z).multiplyScalar(O).floor(),R.copy(B).multiplyScalar(O).floor(),N=V;if(0!==n&&(i=ne),et.bindFramebuffer(Tt.FRAMEBUFFER,i)&&r&&et.drawBuffers(t,i),et.viewport(A),et.scissor(R),et.setScissorTest(N),s){const r=it.get(t.texture);Tt.framebufferTexture2D(Tt.FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,Tt.TEXTURE_CUBE_MAP_POSITIVE_X+e,r.__webglTexture,n)}else if(a){const r=it.get(t.texture),i=e;Tt.framebufferTextureLayer(Tt.FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,r.__webglTexture,n,i)}else if(null!==t&&0!==n){const e=it.get(t.texture);Tt.framebufferTexture2D(Tt.FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,Tt.TEXTURE_2D,e.__webglTexture,n)}C=-1},this.readRenderTargetPixels=function(t,e,n,r,i,s,a,o=0){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let l=it.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==a&&(l=l[a]),l){et.bindFramebuffer(Tt.FRAMEBUFFER,l);try{const a=t.textures[o],l=a.format,u=a.type;if(!tt.textureFormatReadable(l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!tt.textureTypeReadable(u))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");e>=0&&e<=t.width-r&&n>=0&&n<=t.height-i&&(t.textures.length>1&&Tt.readBuffer(Tt.COLOR_ATTACHMENT0+o),Tt.readPixels(e,n,r,i,wt.convert(l),wt.convert(u),s))}finally{const t=null!==I?it.get(I).__webglFramebuffer:null;et.bindFramebuffer(Tt.FRAMEBUFFER,t)}}},this.readRenderTargetPixelsAsync=async function(t,e,n,r,i,s,a,o=0){if(!t||!t.isWebGLRenderTarget)throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let l=it.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==a&&(l=l[a]),l){if(e>=0&&e<=t.width-r&&n>=0&&n<=t.height-i){et.bindFramebuffer(Tt.FRAMEBUFFER,l);const a=t.textures[o],u=a.format,c=a.type;if(!tt.textureFormatReadable(u))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!tt.textureTypeReadable(c))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const h=Tt.createBuffer();Tt.bindBuffer(Tt.PIXEL_PACK_BUFFER,h),Tt.bufferData(Tt.PIXEL_PACK_BUFFER,s.byteLength,Tt.STREAM_READ),t.textures.length>1&&Tt.readBuffer(Tt.COLOR_ATTACHMENT0+o),Tt.readPixels(e,n,r,i,wt.convert(u),wt.convert(c),0);const d=null!==I?it.get(I).__webglFramebuffer:null;et.bindFramebuffer(Tt.FRAMEBUFFER,d);const p=Tt.fenceSync(Tt.SYNC_GPU_COMMANDS_COMPLETE,0);return Tt.flush(),await function(t,e){return new Promise(function(n,r){setTimeout(function i(){switch(t.clientWaitSync(e,t.SYNC_FLUSH_COMMANDS_BIT,0)){case t.WAIT_FAILED:r();break;case t.TIMEOUT_EXPIRED:setTimeout(i,4);break;default:n()}},4)})}(Tt,p),Tt.bindBuffer(Tt.PIXEL_PACK_BUFFER,h),Tt.getBufferSubData(Tt.PIXEL_PACK_BUFFER,0,s),Tt.deleteBuffer(h),Tt.deleteSync(p),s}throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(t,e=null,n=0){const r=Math.pow(2,-n),i=Math.floor(t.image.width*r),s=Math.floor(t.image.height*r),a=null!==e?e.x:0,o=null!==e?e.y:0;st.setTexture2D(t,0),Tt.copyTexSubImage2D(Tt.TEXTURE_2D,n,0,0,a,o,i,s),et.unbindTexture()};const re=Tt.createFramebuffer(),ie=Tt.createFramebuffer();this.copyTextureToTexture=function(t,e,n=null,r=null,i=0,s=null){let a,o,l,u,c,h,d,p,f;null===s&&(0!==i?(gr("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),s=i,i=0):s=0);const m=t.isCompressedTexture?t.mipmaps[s]:t.image;if(null!==n)a=n.max.x-n.min.x,o=n.max.y-n.min.y,l=n.isBox3?n.max.z-n.min.z:1,u=n.min.x,c=n.min.y,h=n.isBox3?n.min.z:0;else{const e=Math.pow(2,-i);a=Math.floor(m.width*e),o=Math.floor(m.height*e),l=t.isDataArrayTexture?m.depth:t.isData3DTexture?Math.floor(m.depth*e):1,u=0,c=0,h=0}null!==r?(d=r.x,p=r.y,f=r.z):(d=0,p=0,f=0);const g=wt.convert(e.format),x=wt.convert(e.type);let y;e.isData3DTexture?(st.setTexture3D(e,0),y=Tt.TEXTURE_3D):e.isDataArrayTexture||e.isCompressedArrayTexture?(st.setTexture2DArray(e,0),y=Tt.TEXTURE_2D_ARRAY):(st.setTexture2D(e,0),y=Tt.TEXTURE_2D),Tt.pixelStorei(Tt.UNPACK_FLIP_Y_WEBGL,e.flipY),Tt.pixelStorei(Tt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),Tt.pixelStorei(Tt.UNPACK_ALIGNMENT,e.unpackAlignment);const v=Tt.getParameter(Tt.UNPACK_ROW_LENGTH),b=Tt.getParameter(Tt.UNPACK_IMAGE_HEIGHT),w=Tt.getParameter(Tt.UNPACK_SKIP_PIXELS),_=Tt.getParameter(Tt.UNPACK_SKIP_ROWS),S=Tt.getParameter(Tt.UNPACK_SKIP_IMAGES);Tt.pixelStorei(Tt.UNPACK_ROW_LENGTH,m.width),Tt.pixelStorei(Tt.UNPACK_IMAGE_HEIGHT,m.height),Tt.pixelStorei(Tt.UNPACK_SKIP_PIXELS,u),Tt.pixelStorei(Tt.UNPACK_SKIP_ROWS,c),Tt.pixelStorei(Tt.UNPACK_SKIP_IMAGES,h);const T=t.isDataArrayTexture||t.isData3DTexture,M=e.isDataArrayTexture||e.isData3DTexture;if(t.isDepthTexture){const n=it.get(t),r=it.get(e),m=it.get(n.__renderTarget),g=it.get(r.__renderTarget);et.bindFramebuffer(Tt.READ_FRAMEBUFFER,m.__webglFramebuffer),et.bindFramebuffer(Tt.DRAW_FRAMEBUFFER,g.__webglFramebuffer);for(let n=0;n<l;n++)T&&(Tt.framebufferTextureLayer(Tt.READ_FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,it.get(t).__webglTexture,i,h+n),Tt.framebufferTextureLayer(Tt.DRAW_FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,it.get(e).__webglTexture,s,f+n)),Tt.blitFramebuffer(u,c,a,o,d,p,a,o,Tt.DEPTH_BUFFER_BIT,Tt.NEAREST);et.bindFramebuffer(Tt.READ_FRAMEBUFFER,null),et.bindFramebuffer(Tt.DRAW_FRAMEBUFFER,null)}else if(0!==i||t.isRenderTargetTexture||it.has(t)){const n=it.get(t),r=it.get(e);et.bindFramebuffer(Tt.READ_FRAMEBUFFER,re),et.bindFramebuffer(Tt.DRAW_FRAMEBUFFER,ie);for(let t=0;t<l;t++)T?Tt.framebufferTextureLayer(Tt.READ_FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,n.__webglTexture,i,h+t):Tt.framebufferTexture2D(Tt.READ_FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,Tt.TEXTURE_2D,n.__webglTexture,i),M?Tt.framebufferTextureLayer(Tt.DRAW_FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,r.__webglTexture,s,f+t):Tt.framebufferTexture2D(Tt.DRAW_FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,Tt.TEXTURE_2D,r.__webglTexture,s),0!==i?Tt.blitFramebuffer(u,c,a,o,d,p,a,o,Tt.COLOR_BUFFER_BIT,Tt.NEAREST):M?Tt.copyTexSubImage3D(y,s,d,p,f+t,u,c,a,o):Tt.copyTexSubImage2D(y,s,d,p,u,c,a,o);et.bindFramebuffer(Tt.READ_FRAMEBUFFER,null),et.bindFramebuffer(Tt.DRAW_FRAMEBUFFER,null)}else M?t.isDataTexture||t.isData3DTexture?Tt.texSubImage3D(y,s,d,p,f,a,o,l,g,x,m.data):e.isCompressedArrayTexture?Tt.compressedTexSubImage3D(y,s,d,p,f,a,o,l,g,m.data):Tt.texSubImage3D(y,s,d,p,f,a,o,l,g,x,m):t.isDataTexture?Tt.texSubImage2D(Tt.TEXTURE_2D,s,d,p,a,o,g,x,m.data):t.isCompressedTexture?Tt.compressedTexSubImage2D(Tt.TEXTURE_2D,s,d,p,m.width,m.height,g,m.data):Tt.texSubImage2D(Tt.TEXTURE_2D,s,d,p,a,o,g,x,m);Tt.pixelStorei(Tt.UNPACK_ROW_LENGTH,v),Tt.pixelStorei(Tt.UNPACK_IMAGE_HEIGHT,b),Tt.pixelStorei(Tt.UNPACK_SKIP_PIXELS,w),Tt.pixelStorei(Tt.UNPACK_SKIP_ROWS,_),Tt.pixelStorei(Tt.UNPACK_SKIP_IMAGES,S),0===s&&e.generateMipmaps&&Tt.generateMipmap(y),et.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n=null,r=null,i=0){return gr('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(t,e,n,r,i)},this.initRenderTarget=function(t){void 0===it.get(t).__webglFramebuffer&&st.setupRenderTarget(t)},this.initTexture=function(t){t.isCubeTexture?st.setTextureCube(t,0):t.isData3DTexture?st.setTexture3D(t,0):t.isDataArrayTexture||t.isCompressedArrayTexture?st.setTexture2DArray(t,0):st.setTexture2D(t,0),et.unbindTexture()},this.resetState=function(){M=0,E=0,I=null,et.reset(),_t.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return zn}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=br._getDrawingBufferColorSpace(t),e.unpackColorSpace=br._getUnpackColorSpace()}}const ym=new sr,vm=new ir,bm=new sr,wm=new hi,_m=new hi;class Sm{constructor(t={}){const e=this;let n,r,i,s;const a={camera:{style:""},objects:new WeakMap},o=void 0!==t.element?t.element:document.createElement("div");o.style.overflow="hidden",this.domElement=o;const l=document.createElement("div");l.style.transformOrigin="0 0",l.style.pointerEvents="none",o.appendChild(l);const u=document.createElement("div");function c(t){return Math.abs(t)<1e-10?0:t}function h(t){const e=t.elements;return"matrix3d("+c(e[0])+","+c(-e[1])+","+c(e[2])+","+c(e[3])+","+c(e[4])+","+c(-e[5])+","+c(e[6])+","+c(e[7])+","+c(e[8])+","+c(-e[9])+","+c(e[10])+","+c(e[11])+","+c(e[12])+","+c(-e[13])+","+c(e[14])+","+c(e[15])+")"}function d(t){const e=t.elements;return"translate(-50%,-50%)matrix3d("+c(e[0])+","+c(e[1])+","+c(e[2])+","+c(e[3])+","+c(-e[4])+","+c(-e[5])+","+c(-e[6])+","+c(-e[7])+","+c(e[8])+","+c(e[9])+","+c(e[10])+","+c(e[11])+","+c(e[12])+","+c(e[13])+","+c(e[14])+","+c(e[15])+")"}function p(t){t.isCSS3DObject&&(t.element.style.display="none");for(let e=0,n=t.children.length;e<n;e++)p(t.children[e])}function f(t,n,r,i){if(!1!==t.visible){if(t.isCSS3DObject){const i=!0===t.layers.test(r.layers),s=t.element;if(s.style.display=!0===i?"":"none",!0===i){let i;t.onBeforeRender(e,n,r),t.isCSS3DSprite?(wm.copy(r.matrixWorldInverse),wm.transpose(),0!==t.rotation2D&&wm.multiply(_m.makeRotationZ(t.rotation2D)),t.matrixWorld.decompose(ym,vm,bm),wm.setPosition(ym),wm.scale(bm),wm.elements[3]=0,wm.elements[7]=0,wm.elements[11]=0,wm.elements[15]=1,i=d(wm)):i=d(t.matrixWorld);const o=a.objects.get(t);if(void 0===o||o.style!==i){s.style.transform=i;const e={style:i};a.objects.set(t,e)}s.parentNode!==u&&u.appendChild(s),t.onAfterRender(e,n,r)}}for(let e=0,s=t.children.length;e<s;e++)f(t.children[e],n,r,i)}else p(t)}u.style.transformStyle="preserve-3d",l.appendChild(u),this.getSize=function(){return{width:n,height:r}},this.render=function(t,e){const o=e.projectionMatrix.elements[5]*s;let d,p;e.view&&e.view.enabled?(l.style.transform=`translate( ${-e.view.offsetX*(n/e.view.width)}px, ${-e.view.offsetY*(r/e.view.height)}px )`,l.style.transform+=`scale( ${e.view.fullWidth/e.view.width}, ${e.view.fullHeight/e.view.height} )`):l.style.transform="",!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),null===e.parent&&!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),e.isOrthographicCamera&&(d=-(e.right+e.left)/2,p=(e.top+e.bottom)/2);const m=e.view&&e.view.enabled?e.view.height/e.view.fullHeight:1,g=e.isOrthographicCamera?`scale( ${m} )scale(`+o+")translate("+c(d)+"px,"+c(p)+"px)"+h(e.matrixWorldInverse):`scale( ${m} )translateZ(`+o+"px)"+h(e.matrixWorldInverse),x=(e.isPerspectiveCamera?"perspective("+o+"px) ":"")+g+"translate("+i+"px,"+s+"px)";a.camera.style!==x&&(u.style.transform=x,a.camera.style=x),f(t,t,e,g)},this.setSize=function(t,e){n=t,r=e,i=n/2,s=r/2,o.style.width=t+"px",o.style.height=e+"px",l.style.width=t+"px",l.style.height=e+"px",u.style.width=t+"px",u.style.height=e+"px"}}}class Tm{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class Mm{refCount(t){return Em("refCount")}incRef(t){return Em("incRef")}timerAvailable(){return!0}time(t){return Em("time")}read(t){return Em("read")}readSync(t){return Em("readSync")}readToGPU(t,e){return Em("readToGPU")}numDataIds(){return Em("numDataIds")}disposeData(t,e){return Em("disposeData")}write(t,e,n){return Em("write")}move(t,e,n,r,i){return Em("move")}createTensorFromGPUData(t,e,n){return Em("createTensorFromGPUData")}memory(){return Em("memory")}floatPrecision(){return Em("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Em("dispose")}}function Em(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Im(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,Am(t,e,n)}function Cm(t,e,n){return Math.max(t,Math.min(e,n))}function km(t){return t%2==0?t:t+1}function Am(t,e,n){const r=t[e];t[e]=t[n],t[n]=r}function Rm(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function Nm(t,e,n=""){Rm(Fm(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function Dm(t){Rm(null!=t,()=>"The input to the tensor constructor must be a non-null value.")}function Lm(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function Fm(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function Pm(t){return t%1==0}function Om(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function $m(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function Um(t,e=t=>0,n,r){return new Promise((i,s)=>{let a=0;const o=()=>{if(t())return void i();a++;const l=e(a);null!=n&&a>=n?s():null!=r?r(o,l):setTimeout(o,l)};o()})}function zm(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const i=t.slice();return i[r]=e/n,i}function Bm(t,e){const n=e.length;return Rm((t=null==t?e.map((t,e)=>e):[].concat(t)).every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`),Rm(t.every(t=>Pm(t)),()=>`All values in axis param must be integers but got axis ${t}`),t.map(t=>t<0?n+t:t)}function Vm(t,e){const n=[],r=[],i=null!=e&&Array.isArray(e)&&0===e.length,s=null==e||i?null:Bm(e,t).sort();let a=0;for(let e=0;e<t.length;++e){if(null!=s){if(s[a]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==s[a]||s[a]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),s[a]<=e&&a++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function Wm(t,e){return Gm(t,e)}function Gm(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function Hm(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function jm(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function qm(t){return"string"==typeof t||t instanceof String}function Xm(t){return"number"==typeof t}function Km(t){return Array.isArray(t)?Km(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":Xm(t)?"float32":qm(t)?"string":"boolean"==typeof t?"bool":"float32"}function Ym(t){return!!(t&&t.constructor&&t.call&&t.apply)}function Zm(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function Jm(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function Qm(t,e,n,r=!1){const i=new Array;if(1===e.length){const s=e[0]*(r?2:1);for(let e=0;e<s;e++)i[e]=n[t+e]}else{const s=e[0],a=e.slice(1),o=a.reduce((t,e)=>t*e)*(r?2:1);for(let e=0;e<s;e++)i[e]=Qm(t+e*o,a,n,r)}return i}function tg(t,e,n=!1){if(0===t.length)return e[0];const r=t.reduce((t,e)=>t*e)*(n?2:1);if(0===r)return[];if(r!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return Qm(0,t,e,n)}function eg(t,e){const n=ng(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function ng(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function rg(t,e){const n=t.reduce((t,e)=>t*e,1);if(null==e||"float32"===e)return tg(t,new Float32Array(n));if("int32"===e)return tg(t,new Int32Array(n));if("bool"===e)return tg(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function ig(t){t.forEach(e=>{Rm(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function sg(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function ag(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}function og(t){return t&&t.then&&"function"==typeof t.then}const lg="tfjsflags";class ug{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=cg,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&(hg().getBool("IS_TEST")||hg().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];hg().getBool("IS_TEST")||hg().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(og(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);lg in t&&t[lg].split(",").forEach(t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){const n=e.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:e}(0,n)})}}function cg(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("="))),e}function hg(){return pg}let dg,pg=null;function fg(){if(null==dg){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}dg=t}return dg}function mg(t,e){const n=function(){const t=fg();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}const gg="Abs",xg="Acos",yg="Acosh",vg="Add",bg="AddN",wg="All",_g="Any",Sg="ArgMax",Tg="ArgMin",Mg="Asin",Eg="Asinh",Ig="Atan",Cg="Atanh",kg="Atan2",Ag="AvgPool",Rg="AvgPoolGrad",Ng="AvgPool3D",Dg="AvgPool3DGrad",Lg="BatchMatMul",Fg="BatchToSpaceND",Pg="Bincount",Og="BitwiseAnd",$g="BroadcastArgs",Ug="Cast",zg="Ceil",Bg="ClipByValue",Vg="Complex",Wg="ComplexAbs",Gg="Concat",Hg="Conv2D",jg="Conv2DBackpropFilter",qg="Conv2DBackpropInput",Xg="Conv3D",Kg="Conv3DBackpropFilterV2",Yg="Conv3DBackpropInputV2",Zg="Cos",Jg="Cosh",Qg="Cumprod",tx="Cumsum",ex="CropAndResize",nx="DenseBincount",rx="DepthToSpace",ix="DepthwiseConv2dNative",sx="DepthwiseConv2dNativeBackpropFilter",ax="DepthwiseConv2dNativeBackpropInput",ox="Diag",lx="Dilation2D",ux="Dilation2DBackpropInput",cx="Dilation2DBackpropFilter",hx="RealDiv",dx="Einsum",px="Elu",fx="EluGrad",mx="Erf",gx="Equal",xx="Exp",yx="ExpandDims",vx="Expm1",bx="FFT",wx="Fill",_x="FlipLeftRight",Sx="Floor",Tx="FloorDiv",Mx="FusedBatchNorm",Ex="GatherV2",Ix="GatherNd",Cx="Greater",kx="GreaterEqual",Ax="Identity",Rx="IFFT",Nx="Imag",Dx="IsFinite",Lx="IsInf",Fx="IsNan",Px="LeakyRelu",Ox="Less",$x="LessEqual",Ux="LinSpace",zx="Log",Bx="Log1p",Vx="LogicalAnd",Wx="LogicalNot",Gx="LogicalOr",Hx="LRN",jx="LRNGrad",qx="Max",Xx="Maximum",Kx="MaxPool",Yx="MaxPoolGrad",Zx="MaxPool3D",Jx="MaxPool3DGrad",Qx="MaxPoolWithArgmax",ty="Mean",ey="Min",ny="Minimum",ry="MirrorPad",iy="Mod",sy="Multinomial",ay="Multiply",oy="Neg",ly="NotEqual",uy="NonMaxSuppressionV3",cy="NonMaxSuppressionV4",hy="NonMaxSuppressionV5",dy="OnesLike",py="OneHot",fy="Pack",my="PadV2",gy="Pow",xy="Prelu",yy="Prod",vy="RaggedGather",by="RaggedRange",wy="RaggedTensorToTensor",_y="Range",Sy="Real",Ty="Reciprocal",My="Relu",Ey="Reshape",Iy="ResizeNearestNeighbor",Cy="ResizeNearestNeighborGrad",ky="ResizeBilinear",Ay="ResizeBilinearGrad",Ry="Relu6",Ny="Reverse",Dy="Round",Ly="Rsqrt",Fy="ScatterNd",Py="TensorScatterUpdate",Oy="SearchSorted",$y="Select",Uy="Selu",zy="Slice",By="Sin",Vy="Sinh",Wy="Sign",Gy="Sigmoid",Hy="Softplus",jy="Sqrt",qy="Sum",Xy="SpaceToBatchND",Ky="SplitV",Yy="Softmax",Zy="SparseFillEmptyRows",Jy="SparseReshape",Qy="SparseSegmentMean",tv="SparseSegmentSum",ev="SparseToDense",nv="SquaredDifference",rv="Square",iv="StaticRegexReplace",sv="StridedSlice",av="StringNGrams",ov="StringSplit",lv="StringToHashBucketFast",uv="Sub",cv="Tan",hv="Tanh",dv="Tile",pv="TopK",fv="Transform",mv="Transpose",gv="Unique",xv="Unpack",yv="UnsortedSegmentSum",vv="ZerosLike",bv="Step",wv="RotateWithOffset",_v="_FusedMatMul",Sv="FusedConv2D",Tv="FusedDepthwiseConv2D";function Mv(...t){hg().getBool("IS_TEST")||hg().getBool("PROD")||console.warn(...t)}function Ev(...t){hg().getBool("IS_TEST")||hg().getBool("PROD")||console.log(...t)}const Iv=mg("kernelRegistry",()=>new Map),Cv=mg("gradRegistry",()=>new Map);function kv(t,e){const n=Lv(t,e);return Iv.get(n)}function Av(t){return Cv.get(t)}function Rv(t){const e=Iv.entries(),n=[];for(;;){const{done:r,value:i}=e.next();if(r)break;const[s,a]=i,[o]=s.split("_");o===t&&n.push(a)}return n}function Nv(t){const{kernelName:e,backendName:n}=t,r=Lv(e,n);Iv.has(r)&&Mv(`The kernel '${e}' for backend '${n}' is already registered`),Iv.set(r,t)}function Dv(t){const{kernelName:e}=t;Cv.has(e)&&hg().getBool("DEBUG")&&Mv(`Overriding the gradient for '${e}'`),Cv.set(e,t)}function Lv(t,e){return`${e}_${t}`}function Fv(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}var Pv=n(570);const Ov=n.n(Pv)()||Pv;function $v(t){return Ov.fromString(t,!0,16)}const Uv=$v("c3a5c85c97cb3127"),zv=$v("b492b66fbe98f273"),Bv=$v("9ae16a3b2f90404f");function Vv(t){return t.xor(t.shru(47))}function Wv(t,e,n){const r=t.slice(e,e+n);return Ov.fromBytes(Array.from(r),!0,!0)}function Gv(t,e){return Wv(t,e,8)}function Hv(t,e){return Wv(t,e,4)}function jv(t,e){return 0===e?t:t.shru(e).or(t.shl(64-e))}function qv(t,e,n=$v("9ddfea08eb382d69")){let r=t.xor(e).mul(n);r=r.xor(r.shru(47));let i=e.xor(r).mul(n);return i=i.xor(i.shru(47)),i=i.mul(n),i}function Xv(t,e,n,r){return function(t,e,n,r,i,s){i=i.add(t),s=jv(s.add(i).add(r),21);const a=i;return i=(i=i.add(e)).add(n),s=s.add(jv(i,44)),[i.add(r),s.add(a)]}(Gv(t,e),Gv(t,e+8),Gv(t,e+16),Gv(t,e+24),n,r)}function Kv(t,e=t.length){const n=Ov.fromNumber(81,!0);if(e<=32)return e<=16?function(t,e=t.length){if(e>=8){const n=Bv.add(2*e),r=Gv(t,0).add(Bv),i=Gv(t,e-8);return qv(jv(i,37).mul(n).add(r),jv(r,25).add(i).mul(n),n)}if(e>=4){const n=Bv.add(2*e);return qv(Hv(t,0).shl(3).add(e),Hv(t,e-4),n)}if(e>0){const n=t[0]+(t[e>>1]<<8),r=e+(t[e-1]<<2);return Vv(Bv.mul(n).xor(Uv.mul(r))).mul(Bv)}return Bv}(t,e):function(t,e=t.length){const n=Bv.add(2*e),r=Gv(t,0).mul(zv),i=Gv(t,8),s=Gv(t,e-8).mul(n),a=Gv(t,e-16).mul(Bv);return qv(jv(r.add(i),43).add(jv(s,30)).add(a),r.add(jv(i.add(Bv),18)).add(s),n)}(t,e);if(e<=64)return function(t,e=t.length){const n=Bv.add(2*e),r=Gv(t,0).mul(Bv),i=Gv(t,8),s=Gv(t,e-8).mul(n),a=Gv(t,e-16).mul(Bv),o=jv(r.add(i),43).add(jv(s,30)).add(a),l=qv(o,r.add(jv(i.add(Bv),18)).add(s),n),u=Gv(t,16).mul(n),c=Gv(t,24),h=o.add(Gv(t,e-32)).mul(n),d=l.add(Gv(t,e-24)).mul(n);return qv(jv(u.add(c),43).add(jv(h,30)).add(d),u.add(jv(c.add(r),18)).add(h),n)}(t,e);let r=n,i=n.mul(zv).add(113),s=Vv(i.mul(Bv).add(113)).mul(Bv),a=[Ov.UZERO,Ov.UZERO],o=[Ov.UZERO,Ov.UZERO];r=r.mul(Bv).add(Gv(t,0));let l=0;const u=64*(e-1>>6),c=u+(e-1&63)-63;do{r=jv(r.add(i).add(a[0]).add(Gv(t,l+8)),37).mul(zv),i=jv(i.add(a[1]).add(Gv(t,l+48)),42).mul(zv),r=r.xor(o[1]),i=i.add(a[0]).add(Gv(t,l+40)),s=jv(s.add(o[0]),33).mul(zv),a=Xv(t,l,a[1].mul(zv),r.add(o[0])),o=Xv(t,l+32,s.add(o[1]),i.add(Gv(t,l+16))),[s,r]=[r,s],l+=64}while(l!==u);const h=zv.add(s.and(255).shl(1));return l=c,o[0]=o[0].add(e-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),r=jv(r.add(i).add(a[0]).add(Gv(t,l+8)),37).mul(h),i=jv(i.add(a[1]).add(Gv(t,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),i=i.add(a[0].mul(9).add(Gv(t,l+40))),s=jv(s.add(o[0]),33).mul(h),a=Xv(t,l,a[1].mul(h),r.add(o[0])),o=Xv(t,l+32,s.add(o[1]),i.add(Gv(t,l+16))),[s,r]=[r,s],qv(qv(a[0],o[0],h).add(Vv(i).mul(Uv)).add(s),qv(a[1],o[1],h).add(r),h)}function Yv(t,e){return"string"===e?Qv(t):Zv([t],e)}function Zv(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=nb(t)),hg().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function Jv(){return hg().platform.now()}function Qv(t,e="utf-8"){return e=e||"utf-8",hg().platform.encode(t,e)}function tb(t,e="utf-8"){return e=e||"utf-8",hg().platform.decode(t,e)}function eb(t){return null!=hg().platform.isTypedArray?hg().platform.isTypedArray(t):Fv(t)}function nb(t,e=[],n=!1){if(null==e&&(e=[]),"boolean"==typeof t||"number"==typeof t||"string"==typeof t||og(t)||null==t||eb(t)&&n)e.push(t);else if(Array.isArray(t)||eb(t))for(let r=0;r<t.length;++r)nb(t[r],e,n);else{let r=-1;for(const e of Object.keys(t))/^([1-9]+[0-9]*|0)$/.test(e)&&(r=Math.max(r,Number(e)));for(let i=0;i<=r;i++)nb(t[i],e,n)}return e}class rb{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new sb)}profileKernel(t,e,n){let r;const i=()=>{r=n()};let s;const a=Jv();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(i);else{i();for(const t of r)t.dataSync();s=Promise.resolve({kernelMs:Jv()-a})}if(hg().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<r.length;e++){const n=r[e];n.data().then(e=>{ib(e,n.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:s.then(t=>t.kernelMs),extraInfo:s.then(t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:i,extraInfo:s}=t;n.forEach(t=>{Promise.all([t.data(),r,s]).then(n=>{this.logger.logKernelProfile(e,t,n[0],n[1],i,n[2])})})}}function ib(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class sb{logKernelProfile(t,e,n,r,i,s){const a="number"==typeof r?$m(`${r}ms`,9):r.error,o=$m(t,25),l=e.rank,u=e.size,c=$m(e.shape.toString(),14);let h="";for(const t in i){const n=i[t];if(null!=n){const r=n.shape||e.shape,i=r.length;h+=`${t}: ${i}D ${i>0?r:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function ab(t,e,n,r){const i=Jm(e),s=function(t,e,n,r){const i=Lm(e),s=r[r.length-1],a=new Array(s).fill(0),o=e.length,l="complex64"===n?cb(t):t;if(o>1)for(let t=0;t<i/s;t++){const e=t*s;for(let t=0;t<s;t++)a[t]=Math.max(a[t],ob(l[e+t],0,n).length)}return a}(t,e,n,i),a=e.length,o=ub(t,e,n,i,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map(t=>"    "+t).join("\n")),l.join("\n")}function ob(t,e,n){let r;return r=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:qm(t)?`'${t}'`:"bool"===n?lb(t):parseFloat(t.toFixed(7)).toString(),$m(r,e)}function lb(t){return 0===t?"false":"true"}function ub(t,e,n,r,i,s=!0){const a="complex64"===n?2:1,o=e[0],l=e.length;if(0===l)return"complex64"===n?[ob(cb(t)[0],0,n)]:"bool"===n?[lb(t[0])]:[t[0].toString()];if(1===l){if(o>20){const e=3*a;let r=Array.from(t.slice(0,e)),s=Array.from(t.slice((o-3)*a,o*a));return"complex64"===n&&(r=cb(r),s=cb(s)),["["+r.map((t,e)=>ob(t,i[e],n)).join(", ")+", ..., "+s.map((t,e)=>ob(t,i[o-3+e],n)).join(", ")+"]"]}return["["+("complex64"===n?cb(t):Array.from(t)).map((t,e)=>ob(t,i[e],n)).join(", ")+"]"]}const u=e.slice(1),c=r.slice(1),h=r[0]*a,d=[];if(o>20){for(let e=0;e<3;e++){const r=e*h,s=r+h;d.push(...ub(t.slice(r,s),u,n,c,i,!1))}d.push("...");for(let e=o-3;e<o;e++){const r=e*h,s=r+h;d.push(...ub(t.slice(r,s),u,n,c,i,e===o-1))}}else for(let e=0;e<o;e++){const r=e*h,s=r+h;d.push(...ub(t.slice(r,s),u,n,c,i,e===o-1))}const p=2===l?",":"";d[0]="["+(o>0?d[0]+p:"");for(let t=1;t<d.length-1;t++)d[t]=" "+d[t]+p;let f=",\n";for(let t=2;t<l;t++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function cb(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class hb{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=Lm(t),null!=n){const t=n.length;Rm(t===this.size,()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Gm(e,this.size),this.strides=Jm(t)}set(t,...e){0===e.length&&(e=[0]),Rm(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return db().makeTensor(this.values,this.shape,this.dtype)}}let db=null,pb=null,fb=null;class mb{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=Lm(t),this.strides=Jm(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return pb.buffer(this.shape,this.dtype,t)}bufferSync(){return pb.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return tg(this.shape,t,"complex64"===this.dtype)}arraySync(){return tg(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const t=db().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map(t=>tb(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),db().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=db().readSync(this.dataId);if("string"===this.dtype)try{return t.map(t=>tb(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await db().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),db().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return pb.print(this,t)}clone(){return this.throwIfDisposed(),pb.clone(this)}toString(t=!1){return ab(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),pb.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),db().makeVariable(this,t,e,n)}}function gb(){return mg("Tensor",()=>mb)}Object.defineProperty(mb,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),gb();class xb extends mb{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Fm(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);db().disposeTensor(this),this.dataId=t.dataId,db().incRef(this,null)}dispose(){db().disposeVariable(this),this.isDisposedInternal=!0}}var yb,vb,bb,wb,_b;Object.defineProperty(xb,Symbol.hasInstance,{value:t=>t instanceof mb&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(yb||(yb={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(vb||(vb={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(bb||(bb={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(wb||(wb={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(_b||(_b={}));const Sb={float32:wb,int32:vb,bool:bb,complex64:_b};function Tb(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return Sb[t][e]}function Mb(t){return Tb(t,"int32")}function Eb(t){return null!=t&&"object"==typeof t&&"texture"in t&&t.texture instanceof WebGLTexture}function Ib(t){return"undefined"!=typeof GPUBuffer&&null!=t&&"object"==typeof t&&"buffer"in t&&t.buffer instanceof GPUBuffer}function Cb(t,e){if(t.dtype===e.dtype)return[t,e];const n=Tb(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function kb(t,e){return e.some(e=>e.id===t.id)}function Ab(t){const e=[];return Rb(t,e,new Set),e}function Rb(t,e,n){if(null==t)return;if(t instanceof mb)return void e.push(t);if(r=t,!Array.isArray(r)&&"object"!=typeof r)return;var r;const i=t;for(const t in i){const r=i[t];n.has(r)||(n.add(r),Rb(r,e,n))}}function Nb(t){return null!=t.kernelName}class Db{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Lb{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Db}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(Mv(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new rb(this.backendInstance),!0}setupRegisteredKernels(){Rv(this.backendName).forEach(t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Rv(t).forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof Mm||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then(n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0))).catch(n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,Mv(`Initialization of backend ${t} failed`),Mv(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return Mv(`Initialization of backend ${t} failed`),Mv(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:i}=this.initializeBackend(n);if(i||r)return{name:n,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,i=this.readSync(e),s=r.refCount(e);r.disposeData(e,!0),n.backend=t,t.move(e,i,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return Lb.nextTensorId++}nextVariableId(){return Lb.nextVariableId++}clone(t){const e=Pb.runKernel(Ax,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],t=>({x:()=>{const e={x:t};return Pb.runKernel(Ug,e,{dtype:"float32"})}}),[],{}),e}runKernel(t,e,n){if(null==this.backendName&&this.backend,null==kv(t,this.backendName))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let i=0;n.forEach(t=>{i+="complex64"===t.dtype?3:1});const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-e-i-s;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const r=this.isTapeOn(),i=this.state.numBytes,s=this.state.numTensors;let a,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Nb(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Nb(t)){const{kernelName:e,inputs:i,attrs:s}=t;null==this.backendName&&this.backend;const l=kv(e,this.backendName);Rm(null!=l,()=>`Cannot find registered kernel '${e}' for backend '${this.backendName}'`),a=()=>{const t=this.backend.numDataIds();o=l.kernelFunc({inputs:i,attrs:s,backend:this.backend});const a=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,a);const u=a.map(t=>null!=t.rank?t:this.makeTensorFromTensorInfo(t));if(r){const t=this.getTensorsForGradient(e,i,u);n=this.saveTensorsForBackwardMode(t)}return u}}else{const{forwardFunc:e}=t,i=t=>{r&&(n=t.map(t=>this.keep(this.clone(t))))};a=()=>{const t=this.backend.numDataIds();o=this.tidy(()=>e(this.backend,i));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,t,n),n}}const{inputs:u,attrs:c}=t,h=Nb(t)?null:t.backwardsFunc;let d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),e=d.outputs):e=a()}),r&&this.addTapeNode(l,u,e,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(t=>null!=u[t]?u[t].shape:null),outputShapes:e.map(t=>t.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(t,e,n){const r=Av(t);if(null!=r){const t=r.inputsToSave||[],i=r.outputsToSave||[];let s;r.saveAllInputs?(Rm(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(e).map(t=>e[t])):s=t.map(t=>e[t]);const a=n.filter((t,e)=>i[e]);return s.concat(a)}return[]}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let i=t;"string"===n&&qm(t[0])&&(i=t.map(t=>Qv(t)));const s=r.write(i,e,n),a=new mb(e,n,s,this.nextTensorId());if(this.trackTensor(a,r),"string"===n){const t=this.state.tensorInfo.get(s),e=function(t){if(null==t)return 0;let e=0;return t.forEach(t=>e+=t.length),e}(i);this.state.numBytes+=e-t.bytes,t.bytes=e}return a}makeTensorFromDataId(t,e,n,r){const i={dataId:t,shape:e,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(i,r)}makeTensorFromTensorInfo(t,e){const{dataId:n,shape:r,dtype:i}=t,s=new mb(r,i,n,this.nextTensorId());return this.trackTensor(s,e),s}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const i=new xb(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[i.name])throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*jm(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof xb||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*jm(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(t=>t.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,i,s){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:i},o=Av(t);null!=o&&(r=o.gradFunc),null!=r&&(a.gradient=t=>(t=t.map((t,e)=>{if(null==t){const t=n[e],r=ng(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t}),r(t.length>1?t:t[0],i,s))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Ab(t),n=new Set(e.map(t=>t.id));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(t=>{t.kept||t.scopeId!==r.id||this.track(t)})}gradients(t,e,n,r=!1){if(Rm(e.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));Rm(i instanceof mb,()=>"The result y returned by f() must be a tensor.");const s=function(t,e,n){const r={},i={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const s=t[n],a=s.inputs;for(const t in a){const n=a[t];let o=!1;for(let t=0;t<e.length;t++)if(r[n.id]){s.outputs.forEach(t=>r[t.id]=!0),o=!0,i[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const a={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(s[n.outputs[t].id]){for(const t in r)s[r[t].id]=!0,a[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(i[n.id]&&a[n.id]){const t={};for(const e in n.inputs){const i=n.inputs[e];r[i.id]&&(t[e]=i)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,i);if(!r&&0===s.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const t={};t[i.id]=null==n?function(t){const e=eg(Lm(t),"float32");return Pb.makeTensor(e,t,"float32")}(i.shape):n,function(t,e,n,r){for(let i=e.length-1;i>=0;i--){const s=e[i],a=[];if(s.outputs.forEach(e=>{const n=t[e.id];null!=n?a.push(n):a.push(null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(a);for(const e in s.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const i=n(()=>o[e]());if("float32"!==i.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${i.dtype}'`);const a=s.inputs[e];if(!Fm(i.shape,a.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${e}' has shape '${i.shape}', which does not match the shape of the input '${a.shape}'`);if(null==t[a.id])t[a.id]=i;else{const e=t[a.id];t[a.id]=r(e,i),e.dispose()}}}}(t,s,t=>this.tidy(t),Ob);const r=e.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(t=>{for(const e of t.saved)e.dispose()}),this.state.activeTape=null),{value:i,grads:r}})}customGrad(t){return Rm(Ym(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{let n;Rm(e.every(t=>t instanceof mb),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return e.forEach((t,e)=>{r[e]=t}),this.runKernelFunc({forwardFunc:(r,i)=>(n=t(...e,i),Rm(n.value instanceof mb,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),Rm(Ym(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(t,r)=>{const i=n.gradFunc(t,r),s=Array.isArray(i)?i:[i];Rm(s.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),Rm(s.every(t=>t instanceof mb),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const a={};return s.forEach((t,e)=>{a[e]=()=>t}),a},inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=Jv(),n=await this.backend.time(t);return n.wallMs=Jv()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Db;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Fb(){const t=fg();if(null==t._tfengine){const e=new ug(t);t._tfengine=new Lb(e)}var e;return e=t._tfengine.ENV,pg=e,db=()=>t._tfengine,t._tfengine}Lb.nextTensorId=0,Lb.nextVariableId=0;const Pb=Fb();function Ob(t,e){const n={a:t,b:e};return Pb.runKernel(vg,n)}function $b(t){if(t||"undefined"!=typeof navigator&&null!=navigator){if(t||(t=navigator),"ReactNative"===t.product)return!0;const e=t.userAgent||t.vendor||("undefined"!=typeof window?window.opera:"");if(!e){const e=t;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function Ub(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const zb=hg();function Bb(t,e){let n=t;if(eb(t))return"string"===e?[]:[t.length];if(Eb(t)){const e=t.channels||"RGBA";return[t.height,t.width*e.length]}if(Ib(t))return[t.buffer.size/(null==e?4:jm(e))];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||eb(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&hg().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Vb(t,r,[]),r}function Vb(t,e,n){if(n=n||[],!Array.isArray(t)&&!eb(t))return void Rm(0===e.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);Rm(e.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),Rm(t.length===e[0],()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`);const r=e.slice(1);for(let e=0;e<t.length;++e)Vb(t[e],r,n.concat(e))}function Wb(t,e,n,r){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}}function Gb(t,e,n,r="numeric"){if(t instanceof gb())return Wb(r,t.dtype,e,n),t;let i=Km(t);if("string"!==i&&["bool","int32","float32"].indexOf(r)>=0&&(i=r),Wb(r,i,e,n),null==t||!eb(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=Bb(t,i);eb(t)||Array.isArray(t)||(t=[t]);const a="string"!==i?Zv(t,i):nb(t,[],!0);return Pb.makeTensor(a,s,i)}function Hb(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((t,i)=>Gb(t,`${e}[${i}]`,n,r))}function jb(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const i=(...t)=>{Pb.startScope(n);try{const e=r(...t);return og(e)&&console.error("Cannot return a Promise inside of tidy."),Pb.endScope(e),e}catch(t){throw Pb.endScope(null),t}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}zb.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),zb.registerFlag("IS_BROWSER",()=>Ub()),zb.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),zb.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),zb.registerFlag("IS_SAFARI",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),zb.registerFlag("PROD",()=>!1),zb.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>zb.getBool("DEBUG")),zb.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),zb.registerFlag("IS_TEST",()=>!1),zb.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>zb.getBool("DEBUG")),zb.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),zb.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),zb.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);const qb=jb({complex_:function(t,e){const n=Gb(t,"real","complex"),r=Gb(e,"imag","complex");Nm(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const i={real:n,imag:r};return Pb.runKernel(Vg,i)}});function Xb(t,e,n,r){if(null==r)r=Km(t);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Ib(t)||Eb(t)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return Pb.backend.createTensorFromGPUData(t,e||n,r)}if(!eb(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){ig(e);const t=Lm(e),r=Lm(n);Rm(t===r,()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`);for(let t=0;t<n.length;++t){const r=n[t],i=t!==n.length-1||r!==Lm(e.slice(t));Rm(n[t]===e[t]||!i,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return eb(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?Zv(t,r):nb(t,[],!0),Pb.makeTensor(t,e,r)}function Kb(t,e,n){return Xb(t,e,Bb(t,n),n)}class Yb{static join(t){return new Yb(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,null==t)return;if(t instanceof Array||(t=[t]),0===(t=t.map(t=>eb(t)?t.buffer:t)).length)return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let n=0;n<t.length;n++){const r=t[n];n!==t.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const i=e+r.byteLength;this.shards.push({buffer:r,start:e,end:i}),e=i}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),(e=Math.min(this.byteLength,e))<=t)return new ArrayBuffer(0);const n=this.findShardForByte(t);if(-1===n)throw new Error(`Could not find start shard for byte ${t}`);const r=new ArrayBuffer(e-t),i=new Uint8Array(r);let s=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],a=t+s-n.start,o=s,l=Math.min(e,n.end)-n.start,u=new Uint8Array(n.buffer,a,l-a);if(i.set(u,o),s+=u.length,e<n.end)break}return r}findShardForByte(t){if(0===this.shards.length||t<0||t>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(e){return t<e.start?-1:t>=e.end?1:0}if(0===e(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(t,e){let n=0,r=t.length;for(;n<=r;){const i=Math.floor((r-n)/2)+n,s=e(t[i]);if(0===s)return i;s<0?r=i:n=i+1}return-1}(this.shards,e);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function Zb(){return Pb}function Jb(){return Pb.memory()}function Qb(t,e){return Pb.tidy(t,e)}function tw(t){Ab(t).forEach(t=>t.dispose())}function ew(t){return Pb.keep(t)}function nw(t,e,n=1){return Pb.registerBackend(t,e,n)}function rw(){return Pb.backend}async function iw(t,e){const n=[],r=[],i=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);for(let s=0;s<i.length;++s){const a=i[s],o=Array.isArray(t)?t[s].tensor:t[a];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${o.dtype}`);const l={name:a,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise(async t=>{const e=await o.bytes(),n=e.reduce((t,e)=>t+e.length,0)+4*e.length,r=new Uint8Array(n);let i=0;for(let t=0;t<e.length;t++){const n=e[t],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,i),i+=4,r.set(n,i),i+=n.length}t(r)});r.push(t)}else r.push(o.data());null!=e&&(l.group=e),n.push(l)}return{data:sw(await Promise.all(r)),specs:n}}function sw(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach(t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)});const r=new Uint8Array(e);let i=0;return n.forEach(t=>{r.set(new Uint8Array(t.buffer),i),i+=t.byteLength}),r.buffer}fb=function(t){hg().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const aw="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function ow(t){return aw?Buffer.byteLength(t,"utf8"):new Blob([t]).size}function lw(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),null!=t.initializerSignature&&(n.initializerSignature=t.initializerSignature),null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig),n}function uw(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:ow(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:ow(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:new Yb(t.weightData).byteLength}}function cw(t){const e=[];for(const n of t)e.push(...n.weights);return e}class hw{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==hw.instance&&(hw.instance=new hw),hw.instance}static registerSaveRouter(t){hw.getInstance().saveRouters.push(t)}static registerLoadRouter(t){hw.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return hw.getHandlers(t,"save")}static getLoadHandlers(t,e){return hw.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?hw.getInstance().loadRouters:hw.getInstance().saveRouters).forEach(e=>{const i=e(t,n);null!==i&&r.push(i)}),r}}const dw="tensorflowjs",pw="models_store",fw="model_info_store";function mw(){if(!hg().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function gw(t){const e=t.result;e.createObjectStore(pw,{keyPath:"modelPath"}),e.createObjectStore(fw,{keyPath:"modelPath"})}class xw{constructor(t){if(this.indexedDB=mw(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((t,n)=>{const r=this.indexedDB.open(dw,1);r.onupgradeneeded=()=>gw(r),r.onsuccess=()=>{const i=r.result;if(null==e){const e=i.transaction(pw,"readonly"),r=e.objectStore(pw).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return i.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(i.close(),n(r.error)),e.oncomplete=()=>i.close()}else{e.weightData=Yb.join(e.weightData);const r=uw(e),s=i.transaction(fw,"readwrite");let a,o,l=s.objectStore(fw);try{a=l.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(t){return n(t)}a.onsuccess=()=>{o=i.transaction(pw,"readwrite");const a=o.objectStore(pw);let u;try{u=a.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r})}catch(t){return n(t)}u.onsuccess=()=>t({modelArtifactsInfo:r}),u.onerror=t=>{l=s.objectStore(fw);const e=l.delete(this.modelPath);e.onsuccess=()=>(i.close(),n(u.error)),e.onerror=t=>(i.close(),n(u.error))}},a.onerror=t=>(i.close(),n(a.error)),s.oncomplete=()=>{null==o?i.close():o.oncomplete=()=>i.close()}}},r.onerror=t=>n(r.error)})}}xw.URL_SCHEME="indexeddb://";const yw=t=>{return hg().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(xw.URL_SCHEME)?(e=t.slice(xw.URL_SCHEME.length),new xw(e)):null;var e};hw.registerSaveRouter(yw),hw.registerLoadRouter(yw);class vw{constructor(){this.indexedDB=mw()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open(dw,1);n.onupgradeneeded=()=>gw(n),n.onsuccess=()=>{const r=n.result,i=r.transaction(fw,"readonly"),s=i.objectStore(fw).getAll();s.onsuccess=()=>{const e={};for(const t of s.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},s.onerror=t=>(r.close(),e(s.error)),i.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)})}async removeModel(t){var e;return t=(e=t).startsWith(xw.URL_SCHEME)?e.slice(xw.URL_SCHEME.length):e,new Promise((e,n)=>{const r=this.indexedDB.open(dw,1);r.onupgradeneeded=()=>gw(r),r.onsuccess=()=>{const i=r.result,s=i.transaction(fw,"readwrite"),a=s.objectStore(fw),o=a.get(t);let l;o.onsuccess=()=>{if(null==o.result)return i.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=a.delete(t),s=()=>{l=i.transaction(pw,"readwrite");const r=l.objectStore(pw).delete(t);r.onsuccess=()=>e(o.result.modelArtifactsInfo),r.onerror=t=>n(o.error)};r.onsuccess=s,r.onerror=t=>(s(),i.close(),n(o.error))}},o.onerror=t=>(i.close(),n(o.error)),s.oncomplete=()=>{null==l?i.close():l.oncomplete=()=>i.close()}},r.onerror=t=>n(r.error)})}}const bw="/",ww="tensorflowjs_models",_w="info",Sw="model_topology",Tw="weight_specs",Mw="weight_data",Ew="model_metadata";function Iw(t){return{info:[ww,t,_w].join(bw),topology:[ww,t,Sw].join(bw),weightSpecs:[ww,t,Tw].join(bw),weightData:[ww,t,Mw].join(bw),modelMetadata:[ww,t,Ew].join(bw)}}function Cw(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function kw(t){const e=t.split(bw);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(bw)}class Aw{constructor(t){if(!hg().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Iw(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=uw(t),i=Yb.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(aw)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,r=e.length;t<r;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(i));const s={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:null!=t.signature?t.signature:void 0,userDefinedMetadata:null!=t.userDefinedMetadata?t.userDefinedMetadata:void 0,modelInitializer:null!=t.modelInitializer?t.modelInitializer:void 0,initializerSignature:null!=t.initializerSignature?t.initializerSignature:void 0,trainingConfig:null!=t.trainingConfig?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(t){throw Cw(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const i=this.LS.getItem(this.keys.modelMetadata);if(null!=i){const t=JSON.parse(i);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),null!=t.initializerSignature&&(e.initializerSignature=t.initializerSignature),null!=t.trainingConfig&&(e.trainingConfig=t.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(aw){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(s),e}}Aw.URL_SCHEME="localstorage://";const Rw=t=>{return hg().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Aw.URL_SCHEME)?(e=t.slice(Aw.URL_SCHEME.length),new Aw(e)):null;var e};hw.registerSaveRouter(Rw),hw.registerLoadRouter(Rw);class Nw{constructor(){Rm(hg().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Rm("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=ww+bw,n=bw+_w;for(let r=0;r<this.LS.length;++r){const i=this.LS.key(r);i.startsWith(e)&&i.endsWith(n)&&(t[kw(i)]=JSON.parse(this.LS.getItem(i)))}return t}async removeModel(t){var e;const n=Iw(t=(e=t).startsWith(Aw.URL_SCHEME)?e.slice(Aw.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return Cw(n),r}}class Dw{constructor(){this.managers={}}static getInstance(){return null==Dw.instance&&(Dw.instance=new Dw),Dw.instance}static registerManager(t,e){Rm(null!=t,()=>"scheme must not be undefined or null."),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),Rm(t.length>0,()=>"scheme must not be an empty string.");const n=Dw.getInstance();Rm(null==n.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){const e=Dw.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(Dw.getInstance().managers)}}class Lw{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){"undefined"!=typeof window&&hg().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",t=>{t.source===window&&t.data.name===this.messageName&&(t.stopPropagation(),(0,this.functionRefs[t.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))):setTimeout(t,e)}isTypedArray(t){return Fv(t)}}if(hg().get("IS_BROWSER")){hg().setPlatform("browser",new Lw);try{Dw.registerManager(Aw.URL_SCHEME,new Nw)}catch(t){}try{Dw.registerManager(xw.URL_SCHEME,new vw)}catch(t){}}let Fw;function Pw(t,e="float32",n){return e=e||"float32",ig(t),new hb(t,e,n)}hg().get("IS_NODE")&&!hg().get("IS_BROWSER")&&hg().setPlatform("node",new class{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=hg().global.fetch?hg().global.fetch(t,e):(null==Fw&&(Fw=n(817)),Fw(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}});const Ow=jb({cast_:function(t,e){const n=Gb(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},i={dtype:e};return Pb.runKernel(Ug,r,i)}}),$w=jb({clone_:function(t){const e={x:Gb(t,"x","clone","string_or_numeric")};return Pb.runKernel(Ax,e)}});Fb(),pb={buffer:Pw,cast:Ow,clone:$w,print:function(t,e=!1){console.log(t.toString(e))}};const Uw=jb({add_:function(t,e){let n=Gb(t,"a","add"),r=Gb(e,"b","add");[n,r]=Cb(n,r);const i={a:n,b:r};return Pb.runKernel(vg,i)}}),zw=jb({floorDiv_:function(t,e){let n=Gb(t,"a","floorDiv"),r=Gb(e,"b","floorDiv");[n,r]=Cb(n,r);const i={a:n,b:r};return Pb.runKernel(Tx,i)}}),Bw=jb({div_:function(t,e){let n=Gb(t,"a","div"),r=Gb(e,"b","div");if([n,r]=Cb(n,r),"int32"===n.dtype&&"int32"===r.dtype)return zw(n,r);const i={a:n,b:r};return Pb.runKernel(hx,i,{})}}),Vw=jb({mul_:function(t,e){let n=Gb(t,"a","mul"),r=Gb(e,"b","mul");[n,r]=Cb(n,r);const i={a:n,b:r};return Pb.runKernel(ay,i)}}),Ww=jb({sqrt_:function(t){const e={x:Gb(t,"x","sqrt","float32")};return Pb.runKernel(jy,e)}}),Gw=jb({square_:function(t){const e=Gb(t,"x","square");return Pb.runKernel("Square",{x:e},{})}}),Hw=jb({zerosLike_:function(t){const e={x:Gb(t,"x","zerosLike")};return Pb.runKernel(vv,e)}});function jw(t){return Pb.customGrad(t)}function qw(t,e){if((eb(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&eb(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Xb(t,[],[],e)}const Xw=new Map,Kw=new Map;class Yw{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Zw{constructor(){this.classNameMap={}}static getMap(){return null==Zw.instance&&(Zw.instance=new Zw),Zw.instance}static register(t){Zw.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Jw(t,e,n){Rm(null!=t.className,()=>"Class being registered does not have the static className property defined."),Rm("string"==typeof t.className,()=>"className is required to be a string, but got type "+typeof t.className),Rm(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),void 0===e&&(e="Custom"),void 0===n&&(n=t.className);const r=e+">"+n;return Zw.register(t),Xw.set(r,t),Kw.set(t,r),t}class Qw extends Yw{minimize(t,e=!1,n){const{value:r,grads:i}=this.computeGradients(t,n);if(null!=n){const t=n.map(t=>({name:t.name,tensor:i[t.name]}));this.applyGradients(t)}else this.applyGradients(i);return tw(i),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){Rm(Ym(t),()=>"The f passed in variableGrads(f) must be a function"),Rm(null==e||Array.isArray(e)&&e.every(t=>t instanceof xb),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=e;if(!n){e=[];for(const t in Pb.registeredVariables)e.push(Pb.registeredVariables[t])}const r=n?e.filter(t=>!t.trainable):null,i=e.length;Rm((e=e.filter(t=>t.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`);const{value:s,grads:a}=Pb.gradients(t,e,null,!0);Rm(a.some(t=>null!=t),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),Rm(0===s.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`);const o={};return e.forEach((t,e)=>{null!=a[e]&&(o[t.name]=a[e])}),null!=r&&r.forEach(t=>o[t.name]=null),{value:s,grads:o}}(t,e)}dispose(){null!=this.iterations_&&tw(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:qw(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Qw,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});class t_ extends Qw{static get className(){return"Adadelta"}constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Pb.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Pb.registeredVariables[e],i=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:Qb(()=>Hw(r).variable(i))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:Qb(()=>Hw(r).variable(i))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Qb(()=>{const t=Uw(Vw(a,this.rho),Vw(Gw(s),1-this.rho)),e=Vw(Bw(Ww(Uw(o,this.epsilon)),Ww(Uw(a,this.epsilon))),s),n=Uw(Vw(o,this.rho),Vw(Gw(e),1-this.rho));a.assign(t),o.assign(n);const i=Uw(Vw(e,-this.learningRate),r);r.assign(i)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(tw(this.accumulatedGrads.map(t=>t.variable)),tw(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2,n=!1;this.accumulatedGrads=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.accumulatedUpdates=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}function e_(t,e,n){ig(t);const r={shape:t,value:e,dtype:n=n||Km(e)};return Pb.runKernel(wx,{},r)}class n_ extends Qw{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Pb.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:Qb(()=>e_(r.shape,this.initialAccumulatorValue).variable(t))}}const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const s=this.accumulatedGrads[n].variable;Qb(()=>{const t=Uw(s,Gw(i));s.assign(t);const e=Uw(Vw(Bw(i,Ww(Uw(t,Pb.backend.epsilon()))),-this.learningRate),r);r.assign(e)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&tw(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}const r_=jb({pow_:function(t,e){let n=Gb(t,"base","pow"),r=Gb(e,"exp","pow");[n,r]=Cb(n,r);const i={a:n,b:r};return Pb.runKernel(gy,i)}}),i_=jb({sub_:function(t,e){let n=Gb(t,"a","sub"),r=Gb(e,"b","sub");[n,r]=Cb(n,r);const i={a:n,b:r};return Pb.runKernel(uv,i)}});class s_ extends Qw{static get className(){return"Adam"}constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Qb(()=>{this.accBeta1=qw(e).variable(),this.accBeta2=qw(n).variable()}),null==r&&(this.epsilon=Pb.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Qb(()=>{const n=i_(1,this.accBeta1),r=i_(1,this.accBeta2);e.forEach((e,i)=>{const s=Pb.registeredVariables[e],a=!1;null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${e}/m`,variable:Qb(()=>Hw(s).variable(a))}),null==this.accumulatedSecondMoment[i]&&(this.accumulatedSecondMoment[i]={originalName:`${e}/v`,variable:Qb(()=>Hw(s).variable(a))});const o=Array.isArray(t)?t[i].tensor:t[e];if(null==o)return;const l=this.accumulatedFirstMoment[i].variable,u=this.accumulatedSecondMoment[i].variable,c=Uw(Vw(l,this.beta1),Vw(o,1-this.beta1)),h=Uw(Vw(u,this.beta2),Vw(Gw(o),1-this.beta2)),d=Bw(c,n),p=Bw(h,r);l.assign(c),u.assign(h);const f=Uw(Vw(Bw(d,Uw(Ww(p),this.epsilon)),-this.learningRate),s);s.assign(f)}),this.accBeta1.assign(Vw(this.accBeta1,this.beta1)),this.accBeta2.assign(Vw(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&tw(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&tw(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),Qb(()=>{this.accBeta1.assign(r_(this.beta1,this.iterations_+1)),this.accBeta2.assign(r_(this.beta2,this.iterations_+1))});const e=t.length/2,n=!1;this.accumulatedFirstMoment=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.accumulatedSecondMoment=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}const a_=jb({abs_:function(t){const e=Gb(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return Pb.runKernel(Wg,t)}{const t={x:e};return Pb.runKernel(gg,t)}}});function o_(t,e){const n=t.length,r=[];for(let i=0;i<n;i++){const s=n-1-i,a=t[s]||1;(e[e.length-1-i]||1)>1&&1===a&&r.unshift(s)}return r}function l_(t,e){const n=[];for(let r=0;r<e.length;r++){const i=t[t.length-r-1],s=e.length-r-1,a=e[s];(null==i||1===i&&a>1)&&n.unshift(s)}return n}function u_(t,e){const n=Math.max(t.length,e.length),r=new Array(n);for(let i=0;i<n;i++){let s=t[t.length-i-1];null==s&&(s=1);let a=e[e.length-i-1];if(null==a&&(a=1),1===s)r[n-i-1]=a;else if(1===a)r[n-i-1]=s;else{if(s!==a)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);r[n-i-1]=s}}return r}const c_=jb({maximum_:function(t,e){let n=Gb(t,"a","maximum"),r=Gb(e,"b","maximum");[n,r]=Cb(n,r),"bool"===n.dtype&&(n=Ow(n,"int32"),r=Ow(r,"int32")),u_(n.shape,r.shape);const i={a:n,b:r};return Pb.runKernel(Xx,i)}});class h_ extends Qw{static get className(){return"Adamax"}constructor(t,e,n,r=null,i=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Qb(()=>{this.iteration=qw(0).variable(),this.accBeta1=qw(e).variable()}),null==r&&(this.epsilon=Pb.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Qb(()=>{const n=i_(1,this.accBeta1),r=Bw(-this.learningRate,Uw(Vw(this.iteration,this.decay),1));e.forEach((e,i)=>{const s=Pb.registeredVariables[e],a=!1;null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${e}/m`,variable:Hw(s).variable(a)}),null==this.accumulatedWeightedInfNorm[i]&&(this.accumulatedWeightedInfNorm[i]={originalName:`${e}/v`,variable:Hw(s).variable(a)});const o=Array.isArray(t)?t[i].tensor:t[e];if(null==o)return;const l=this.accumulatedFirstMoment[i].variable,u=this.accumulatedWeightedInfNorm[i].variable,c=Uw(Vw(l,this.beta1),Vw(o,1-this.beta1)),h=Vw(u,this.beta2),d=a_(o),p=c_(h,d);l.assign(c),u.assign(p);const f=Uw(Vw(Bw(r,n),Bw(c,Uw(p,this.epsilon))),s);s.assign(f)}),this.iteration.assign(Uw(this.iteration,1)),this.accBeta1.assign(Vw(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&tw(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&tw(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}class d_ extends Qw{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const i=Pb.registeredVariables[e];Qb(()=>{const t=Uw(Vw(this.c,r),i);i.assign(t)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=ew(qw(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}class p_ extends d_{static get className(){return"Momentum"}constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=qw(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Pb.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:Qb(()=>Hw(r).variable(t))}}const i=this.accumulations[n].variable,s=Array.isArray(t)?t[n].tensor:t[e];null!=s&&Qb(()=>{let t;const e=Uw(Vw(this.m,i),s);t=this.useNesterov?Uw(Vw(this.c,Uw(s,Vw(e,this.m))),r):Uw(Vw(this.c,e),r),i.assign(e),r.assign(t)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&tw(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}class f_ extends Qw{static get className(){return"RMSProp"}constructor(t,e=.9,n=0,r=null,i=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,null==r&&(this.epsilon=Pb.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Pb.registeredVariables[e],i=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:Qb(()=>Hw(r).variable(i))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:Qb(()=>Hw(r).variable(i))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:Qb(()=>Hw(r).variable(i))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Qb(()=>{const t=Uw(Vw(a,this.decay),Vw(Gw(s),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,i=Uw(Vw(e,this.decay),Vw(s,1-this.decay)),l=Bw(Vw(s,this.learningRate),Ww(i_(t,Uw(Gw(i),this.epsilon)))),u=Uw(Vw(o,this.momentum),l);a.assign(t),e.assign(i),o.assign(u);const c=i_(r,u);r.assign(c)}else{const t=Uw(Vw(a,this.decay),Vw(Gw(s),1-this.decay)),e=Uw(Vw(o,this.momentum),Bw(Vw(s,this.learningRate),Ww(Uw(t,this.epsilon))));a.assign(t),o.assign(e);const n=i_(r,e);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&tw(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&tw(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&tw(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.accumulatedMoments=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}const m_=[t_,n_,s_,h_,p_,f_,d_];function g_(t){return new Promise(t=>setTimeout(t)).then(t)}class x_{constructor(t){if(!hg().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(x_.URL_SCHEME)&&(t=t.slice(x_.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=Yb.join(t.weightData),n=window.URL.createObjectURL(new Blob([e],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const e=lw(t,[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(e)],{type:"application/json"})),i=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=r,await g_(()=>i.dispatchEvent(new MouseEvent("click"))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=n,await g_(()=>t.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:uw(t)}}}}function y_(t,e,n,r){!function(t){Rm(null!=t&&Array.isArray(t)&&t.length>0,()=>"promises must be a none empty array")}(t),function(t,e){Rm(t>=0&&t<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`),Rm(e>=0&&e<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`),Rm(e>=t,()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`)}(n=null==n?0:n,r=null==r?1:r);let i=0;return Promise.all(t.map(s=>(s.then(s=>{const a=n+ ++i/t.length*(r-n);return e(a),s}),s)))}async function v_(t,e){null==e&&(e={});const n=null==e.fetchFunc?hg().platform.fetch:e.fetchFunc,r=t.map(t=>n(t,e.requestInit,{isBinary:!0})),i=(null==e.onProgress?await Promise.all(r):await y_(r,e.onProgress,0,.5)).map(t=>t.arrayBuffer());return null==e.onProgress?await Promise.all(i):await y_(i,e.onProgress,.5,1)}x_.URL_SCHEME="downloads://",hw.registerSaveRouter(t=>hg().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(x_.URL_SCHEME)?function(t="model"){return new x_(t)}(t.slice(x_.URL_SCHEME.length)):null);class b_{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(Rm("function"==typeof e.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=hg().platform.fetch,Rm(null!=t&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&Rm(2===t.length,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{},this.loadOptions=e}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=lw(t,[{paths:["./model.weights.bin"],weights:t.weightSpecs}]);if(e.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=t.weightData){const n=Yb.join(t.weightData);e.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:uw(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){return this.loadOptions.streamWeights?this.loadStream():async function(t,e){let n,r;return null!=t.weightsManifest&&([n,r]=await e(t.weightsManifest)),function(t,e,n){const r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(null!=t.trainingConfig&&(r.trainingConfig=t.trainingConfig),null!=t.weightsManifest){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=e,r.weightData=n}return null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer),null!=t.initializerSignature&&(r.initializerSignature=t.initializerSignature),r}(t,n,r)}(await this.loadModelJSON(),t=>this.loadWeights(t))}async loadStream(){const t=await this.loadModelJSON(),e=await this.getWeightUrls(t.weightsManifest),n=cw(t.weightsManifest);return Object.assign(Object.assign({},t),{weightSpecs:n,getWeightStream:()=>function(t,e){var n;const r=null==e.fetchFunc?hg().platform.fetch:e.fetchFunc;let i,s=0;return null===(n=e.onProgress)||void 0===n||n.call(e,0),new ReadableStream({pull:async n=>{for(var a;s<t.length;){if(!i){const n=(await r(t[s],e.requestInit,{isBinary:!0})).body;i=n.getReader()}const{done:o,value:l}=await i.read();if(!o)return void n.enqueue(l);s++,i=void 0,null===(a=e.onProgress)||void 0===a||a.call(e,s/t.length)}n.close()}})}(e,this.loadOptions)})}async getWeightUrls(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),i=this.weightPathPrefix||n,s=[],a=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?a.push(this.weightUrlConverter(t)):s.push(i+t+r);return this.weightUrlConverter&&s.push(...await Promise.all(a)),s}async loadWeights(t){const e=await this.getWeightUrls(t);return[cw(t),await v_(e,this.loadOptions)]}}function w_(t){return null!=t.match(b_.URL_SCHEME_REGEX)}b_.URL_SCHEME_REGEX=/^https?:\/\//;const __=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every(t=>w_(t)):w_(t),n)return function(t,e){return new b_(t,e)}(t,e)}return null};hw.registerSaveRouter(__),hw.registerLoadRouter(__);const S_=-2,T_=-1;function M_(t,e,n){const r=t.shape.length;Rm(r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),Rm(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let i=0;i<r;++i)Rm(e[i]+n[i]<=t.shape[i],()=>`Error in slice${r}D: begin[${i}] + size[${i}] (${e[i]+n[i]}) would overflow input.shape[${i}] (${t.shape[i]})`)}function E_(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function I_(t,e,n){const r=[];for(let i=0;i<t.length;i++)r[i]=Math.ceil((e[i]-t[i])/n[i]);return r}function C_(t,e,n,r){const i=[...t];for(let t=i.length;t<r.length;t++)i.push(1);for(let t=0;t<n;t++)0===t?i[e]=1:(i.splice(e,0,1),i.pop());return i}function k_(t,e,n){return n<=t?n:n-(e-1)}function A_(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function R_(t,e,n,r,i,s,a,o,l){const u=t.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&n>0){const l=e[0],u=n+1;c=N_(a,l,u,r,t),h=D_(o,l,u,i,t),d=C_(s,l,u,t)}else for(let e=0;e<u;e++)c[e]=F_(a,r,s,t,e,l),h[e]=P_(o,i,s,t,e,l),d[e]=L_(s,e,l);return{begin:c,end:h,strides:d}}function N_(t,e,n,r,i){const s=[...i],a=A_(n,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=0;else{const a=k_(e,n,i);let o=r[a];t&1<<a&&(o=0),s[i]=o}return s}function D_(t,e,n,r,i){const s=[...i],a=A_(n,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{const a=k_(e,n,i);let o=r[a];t&1<<a&&(o=Number.MAX_SAFE_INTEGER),s[i]=o}for(let t=0;t<s.length;t++){const e=i[t];s[t]<0&&(s[t]+=e),s[t]=Cm(0,s[t],i[t])}return s}function L_(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function F_(t,e,n,r,i,s){let a=e[i];const o=n[i]||1;(t&1<<i||s&1<<i||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[i];return a<0&&(a+=l),a=Cm(0,a,l-1),a}function P_(t,e,n,r,i,s){let a=e[i];const o=n[i]||1;(t&1<<i||s&1<<i||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[i];return a<0&&(a+=l),a=o>0?Cm(0,a,l):Cm(-1,a,l-1),a}function O_(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let i=r+1;i<n.length;i++)if(e[i]>0||n[i]!==t[i])return!1;return!0}function $_(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function U_(t,e,n){let r;const i=t.shape.length;let s;return r="number"==typeof e?[e,...new Array(i-1).fill(0)]:e.length<i?e.concat(new Array(i-e.length).fill(0)):e.slice(),r.forEach(t=>{Rm(-1!==t,()=>"slice() does not support negative begin indexing.")}),s=null==n?new Array(i).fill(-1):"number"==typeof n?[n,...new Array(i-1).fill(-1)]:n.length<i?n.concat(new Array(i-n.length).fill(-1)):n,s=s.map((e,n)=>e>=0?e:(Rm(-1===e,()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`),t.shape[n]-r[n])),[r,s]}function z_(t,e,n,r,i,s,a,o,l){let u;if(null==r?(u=new Array(e.length),u.fill(1)):u=r,null!=a&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:u.slice(),beginMask:i,endMask:s,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};for(let t=0;t<h.dims;t++)c&&1<<t&o&&h.numAddAxisAfterEllipsis++,1<<t&a&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=null!=t.begin,e.endValid=null!=t.end,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<t.dims;r++)if(1<<r&t.ellipsisMask){const i=Math.min(e.dims-(t.dims-r)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<i;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&t.newAxisMask)e.finalShapeGatherIndices.push(S_),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${e.dims} dims, ${e.begin.length}.`);null!=t.begin&&(e.begin[n]=t.begin[r]),null!=t.end&&(e.end[n]=t.end[r]),e.strides[n]=t.strides[r],t.beginMask&1<<r&&(e.beginMask|=1<<n),t.endMask&1<<r&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(T_),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],x=[];for(let e=0;e<t.length;++e){if(0===d.strides[e])throw Error(`strides[${e}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<e),r=t[e];if(-1===r){g.push(n?1:-1);continue}const i=[d.beginMask&1<<e,d.endMask&1<<e],s=[d.strides[e]>0?0:-1,d.strides[e]>0?r:r-1];if(n&&d.strides[e]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[e];const a=!!(d.beginMask&1<<e&&d.endMask&1<<e);if(d.beginValid&&d.endValid){if(n){const t=d.begin[e]<0?r+d.begin[e]:d.begin[e];if(d.begin[e]=t,d.end[e]=d.begin[e]+1,t<0||t>=r)throw Error(`slice index ${d.begin[e]} of dimension ${e} out of bounds.`)}else d.begin[e]=B_(d.begin[e],0,d.strides[e],r,i,s),d.end[e]=B_(d.end[e],1,d.strides[e],r,i,s);const t=1===d.strides[e]&&0===d.begin[e]&&d.end[e]===r;p=p&&t,f=f&&(0===e&&1===d.strides[e]||t)}else p=p&&1===d.strides[e]&&a,f=f&&(0===e&&1===d.strides[e]||a);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[e]-d.begin[e],l=!0):n?(o=1,l=!0):a&&r>=0&&(o=d.strides[e]<0?-r:r,l=!0),l){let t;t=0===o||o<0!=d.strides[e]<0?0:Math.trunc(o/d.strides[e])+(o%d.strides[e]!==0?1:0),g.push(t)}else g.push(-1)}for(let t=0;t<d.finalShapeGatherIndices.length;++t){const e=d.finalShapeGatherIndices[t];e>=0?x.push(g[e]):e===S_&&x.push(1)}return{finalShapeSparse:x.filter((t,e)=>d.finalShapeGatherIndices[e]!==S_),finalShape:x,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function B_(t,e,n,r,i,s){if(i[e])return n>0?s[e]:s[e+1&1];{const e=t<0?r+t:t;return e<s[0]?s[0]:e>s[1]?s[1]:e}}const V_=jb({all_:function(t,e=null,n=!1){const r={x:Gb(t,"x","all","bool")},i={axis:e,keepDims:n};return Pb.runKernel(wg,r,i)}}),W_=jb({any_:function(t,e=null,n=!1){const r={x:Gb(t,"x","any","bool")},i={axis:e,keepDims:n};return Pb.runKernel(_g,r,i)}}),G_=jb({argMax_:function(t,e=0){const n={x:Gb(t,"x","argMax")},r={axis:e};return Pb.runKernel(Sg,n,r)}});function H_(t,e,n,r,i="NHWC",s){return X_(t,[...e,t[3]],n,s,r,null,null,iS(i))}function j_(t,e,n,r,i,s,a="channelsLast"){const[o,l]=Z_(e);let u;if("channelsLast"===a)u=[o,l,t[3],t[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[o,l,t[1],t[1]]}return X_(t,u,n,r,i,s,!1,a)}function q_(t,e,n,r,i,s,a="NDHWC"){const[o,l,u]=J_(e);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,l,u,t[4],t[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[o,l,u,t[1],t[1]]}return K_(t,c,n,r,i,!1,h,s)}function X_(t,e,n,r,i,s,a=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=t}const[d,p,,f]=e,[m,g]=Z_(n),[x,y]=Z_(r),v=Q_(d,x),b=Q_(p,y),{padInfo:w,outHeight:_,outWidth:S}=function(t,e,n,r,i,s,a,o,l){let u,c,h;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const i=function(t,e,n,r,i){null==r&&(r=Y_(t,e,n));const s=t[1];return[tS((t[0]-e+2*r)/n+1,i),tS((s-e+2*r)/n+1,i)]}([e,n],s,r,t,o);c=i[0],h=i[1]}else if("same"===t){c=Math.ceil(e/r),h=Math.ceil(n/i);const t=Math.max(0,(c-1)*r+s-e),o=Math.max(0,(h-1)*i+a-n),l=Math.floor(t/2),d=t-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-s+1)/r),h=Math.ceil((n-a+1)/i);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const d="channelsLast"===l?t[1][0]:t[2][0],p="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],m="channelsLast"===l?t[2][1]:t[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=tS((e-s+d+p)/r+1,o),h=tS((n-a+f+m)/i+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(i,u,c,m,g,v,b,s,o),T=a?f*h:f;let M;return"channelsFirst"===o?M=[l,T,_,S]:"channelsLast"===o&&(M=[l,_,S,T]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:_,outWidth:S,outChannels:T,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:v,effectiveFilterWidth:b,dilationHeight:x,dilationWidth:y,inShape:t,outShape:M,filterShape:e}}function K_(t,e,n,r,i,s=!1,a="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=t;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,d,u,c,h]=t}const[p,f,m,,g]=e,[x,y,v]=J_(n),[b,w,_]=J_(r),S=Q_(p,b),T=Q_(f,w),M=Q_(m,_),{padInfo:E,outDepth:I,outHeight:C,outWidth:k}=function(t,e,n,r,i,s,a,o,l,u,c){let h,d,p,f;if("valid"===t&&(t=0),"number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const m=function(t,e,n,r,i,s){null==i&&(i=Y_(t,e[0],r[0]));const a=[0,0,0,1];for(let n=0;n<3;n++)t[n]+2*i>=e[n]&&(a[n]=tS((t[n]-e[n]+2*i)/r[n]+1,s));return a}([e,n,r,1],[o,l,u],0,[i,s,a],t,c);d=m[0],p=m[1],f=m[2]}else{if("same"!==t)throw Error(`Unknown padding parameter: ${t}`);{d=Math.ceil(e/i),p=Math.ceil(n/s),f=Math.ceil(r/a);const t=(d-1)*i+o-e,c=(p-1)*s+l-n,m=(f-1)*a+u-r,g=Math.floor(t/2),x=t-g,y=Math.floor(c/2),v=c-y,b=Math.floor(m/2);h={top:y,bottom:v,left:b,right:m-b,front:g,back:x,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(i,u,c,h,x,y,v,S,T,M,o),A=s?g*d:g;let R;return"channelsFirst"===a?R=[l,A,I,C,k]:"channelsLast"===a&&(R=[l,I,C,k,A]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:I,outHeight:C,outWidth:k,outChannels:A,padInfo:E,strideDepth:x,strideHeight:y,strideWidth:v,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:T,effectiveFilterWidth:M,dilationDepth:b,dilationHeight:w,dilationWidth:_,inShape:t,outShape:R,filterShape:e}}function Y_(t,e,n,r=1){const i=Q_(e,r);return Math.floor((t[0]*(n-1)-n+i)/2)}function Z_(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function J_(t){return"number"==typeof t?[t,t,t]:t}function Q_(t,e){return e<=1?t:t+(t-1)*(e-1)}function tS(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function eS(t){const[e,n,r]=Z_(t);return 1===e&&1===n&&1===r}function nS(t,e){return eS(t)||eS(e)}function rS(t){return Z_(t).every(t=>t>0)}function iS(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}function sS(t,e,n){if(null!=n){if("string"==typeof e)throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if("number"==typeof e)Rm(Pm(e),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);else{if("object"!=typeof e)throw Error(`Error in ${t}: Unknown padding parameter: ${e}`);e.forEach(e=>{e.forEach(e=>{Rm(Pm(e),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`)})})}}}const aS=jb({reshape_:function(t,e){const n={x:Gb(t,"x","reshape","string_or_numeric")},r={shape:e};return Pb.runKernel(Ey,n,r)}}),oS=jb({avgPool_:function(t,e,n,r,i){const s=Gb(t,"x","avgPool","float32");Rm(nS(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let a=s,o=!1;3===s.rank&&(o=!0,a=aS(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Rm(4===a.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),sS("avgPool",r,i);const l={x:a},u={filterSize:e,strides:n,pad:r,dimRoundingMode:i};let c=Pb.runKernel(Ag,l,u);return c=Ow(c,s.dtype),o?aS(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),lS=jb({avgPool3d_:function(t,e,n,r,i,s="NDHWC"){const a=Gb(t,"x","avgPool3d","float32");let o=a,l=!1;4===a.rank&&(l=!0,o=aS(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),Rm(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),Rm("NDHWC"===s,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Rm("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),sS("avgPool3d",r,i);const u={x:o},c={filterSize:e,strides:n,pad:r,dimRoundingMode:i,dataFormat:s};let h=Pb.runKernel(Ng,u,c);return h=Ow(h,o.dtype),l?aS(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),uS=jb({batchNorm_:function(t,e,n,r,i,s){null==s&&(s=.001);const a=Gb(t,"x","batchNorm"),o=Gb(e,"mean","batchNorm"),l=Gb(n,"variance","batchNorm");let u,c;null!=i&&(u=Gb(i,"scale","batchNorm")),null!=r&&(c=Gb(r,"offset","batchNorm")),Rm(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),Rm(null==c||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),Rm(null==u||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:function(t){let e;return e=0===t.rank||1===t.rank?aS(t,[1,1,1,t.size]):2===t.rank?aS(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?aS(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(a),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:s},p=Pb.runKernel(Mx,h,d);return aS(p,a.shape)}}),cS=jb({batchNorm2d_:function(t,e,n,r,i,s){const a=Gb(t,"x","batchNorm"),o=Gb(e,"mean","batchNorm"),l=Gb(n,"variance","batchNorm");let u,c;return null!=i&&(u=Gb(i,"scale","batchNorm")),null!=r&&(c=Gb(r,"offset","batchNorm")),Rm(2===a.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),Rm(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),Rm(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=u&&Rm(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&Rm(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),uS(a,o,l,c,u,s)}}),hS=jb({batchNorm3d_:function(t,e,n,r,i,s){const a=Gb(t,"x","batchNorm"),o=Gb(e,"mean","batchNorm"),l=Gb(n,"variance","batchNorm");let u,c;return null!=i&&(u=Gb(i,"scale","batchNorm")),null!=r&&(c=Gb(r,"offset","batchNorm")),Rm(3===a.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),Rm(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),Rm(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=u&&Rm(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&Rm(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),uS(a,o,l,c,u,s)}}),dS=jb({batchNorm4d_:function(t,e,n,r,i,s){const a=Gb(t,"x","batchNorm"),o=Gb(e,"mean","batchNorm"),l=Gb(n,"variance","batchNorm");let u,c;return null!=i&&(u=Gb(i,"scale","batchNorm")),null!=r&&(c=Gb(r,"offset","batchNorm")),Rm(4===a.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),Rm(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),Rm(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=u&&Rm(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&Rm(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),uS(a,o,l,c,u,s)}}),pS=jb({broadcastTo_:function(t,e){let n=Gb(t,"broadcastTo","x");const r=n.shape;if(ig(e),e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=aS(n,t)}const i=n.shape,s=Array.from(e);for(let t=e.length-1;t>=0;t--)if(i[t]===e[t])s[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(0===s.map((t,e)=>t>1?e:-1).filter(t=>t>=0).length)return $w(n);const a={x:n},o={reps:s};return Pb.runKernel(dv,a,o)}}),fS=jb({clipByValue_:function(t,e,n){const r=Gb(t,"x","clipByValue");if(Rm(e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`),e===n)return e_(r.shape,e,r.dtype);const i={x:r},s={clipValueMin:e,clipValueMax:n};return Pb.runKernel(Bg,i,s)}}),mS=jb({concat_:function(t,e=0){Rm(t.length>=1,()=>"Pass at least one tensor to concat");const n=Hb(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)}),1===n.length)return $w(n[0]);const r=n,i={axis:e};return Pb.runKernel(Gg,r,i)}}),gS=jb({concat1d_:function(t){return mS(t,0)}}),xS=jb({concat2d_:function(t,e){return mS(t,e)}}),yS=jb({concat3d_:function(t,e){return mS(t,e)}}),vS=jb({concat4d_:function(t,e){return mS(t,e)}}),bS=jb({conv2d_:function(t,e,n,r,i="NHWC",s=[1,1],a){const o=Gb(t,"x","conv2d","float32"),l=Gb(e,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=aS(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Rm(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),Rm(4===l.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),sS("conv2d",r,a);const h="NHWC"===i?u.shape[3]:u.shape[1];Rm(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),Rm(nS(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),Rm(rS(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),Rm(rS(n),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:i,dilations:s,dimRoundingMode:a},f=Pb.runKernel(Hg,d,p);return c?aS(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),wS=jb({conv1d_:function(t,e,n,r,i="NWC",s=1,a){const o=Gb(t,"x","conv1d"),l=Gb(e,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=aS(o,[1,o.shape[0],o.shape[1]])),Rm(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),Rm(3===l.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),sS("conv1d",r,a),Rm(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),Rm(nS(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),Rm(rS(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),Rm(rS(n),()=>"Error in conv1D: Stride should be larger than 0."),Rm("NWC"===i,()=>`Error in conv1d: got dataFormat of ${i} but only NWC is currently supported.`);const h=aS(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=aS(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=bS(d,h,[1,n],r,"NHWC",[1,s],a);return aS(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),_S=jb({conv2DBackpropInput_:function(t,e,n,r,i,s="NHWC",a){Rm(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let o=t,l=e,u=!1;3===e.rank&&(u=!0,l=aS(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),Rm(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),Rm(4===l.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),Rm(4===n.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c="NHWC"===s?o[3]:o[1],h="NHWC"===s?l.shape[3]:l.shape[1];Rm(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),Rm(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),sS("conv2dDerInput",i,a);const d={dy:l,filter:n},p={strides:r,pad:i,dataFormat:s,dimRoundingMode:a,inputShape:o},f=Pb.runKernel(qg,d,p);return u?aS(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),SS=jb({conv2dTranspose_:function(t,e,n,r,i,s){const a=Gb(t,"x","conv2dTranspose"),o=Gb(e,"filter","conv2dTranspose");return _S(n,a,o,r,i,"NHWC",s)}}),TS=jb({conv3d_:function(t,e,n,r,i="NDHWC",s=[1,1,1]){const a=Gb(t,"x","conv3d"),o=Gb(e,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=aS(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),Rm(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),Rm(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),Rm(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),Rm(nS(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),Rm("NDHWC"===i,()=>`Error in conv3d: got dataFormat of ${i} but only NDHWC is currently supported.`),Rm(rS(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),Rm(rS(n),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:i,dilations:s},d=Pb.runKernel(Xg,c,h);return u?aS(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),MS=jb({conv3DBackpropInput_:function(t,e,n,r,i){Rm(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let s=t,a=e,o=!1;4===e.rank&&(o=!0,a=aS(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,t[0],t[1],t[2],t[3]]);const l=s[4],u=a.shape[4];Rm(5===s.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),Rm(5===a.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),Rm(5===n.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),Rm(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),Rm(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);const c={dy:a,filter:n},h={pad:i,strides:r,inputShape:s},d=Pb.runKernel(Yg,c,h);return o?aS(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),ES=jb({conv3dTranspose_:function(t,e,n,r,i){const s=Gb(t,"x","conv3dTranspose"),a=Gb(e,"filter","conv3dTranspose");return MS(n,s,a,r,i)}}),IS=jb({denseBincount_:function(t,e,n,r=!1){const i=Gb(t,"x","denseBincount"),s=Gb(e,"weights","denseBincount");Rm("int32"===i.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${i.dtype}`),Rm(i.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${i.rank}.`),Rm(n>=0,()=>`size must be non-negative, but got ${n}.`),Rm(s.size===i.size||0===s.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${i.shape}, weights shape: ${s.shape}.`);const a={x:i,weights:s},o={size:n,binaryOutput:r};return Pb.runKernel(nx,a,o)}}),CS=jb({depthwiseConv2d_:function(t,e,n,r,i="NHWC",s=[1,1],a){const o=Gb(t,"x","depthwiseConv2d","float32"),l=Gb(e,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=aS(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Rm(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),Rm(4===l.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h="NHWC"===i?u.shape[3]:u.shape[1];Rm(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),sS("depthwiseConv2d",r,a);const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:i,dilations:s,dimRoundingMode:a},f=Pb.runKernel(ix,d,p);return c?aS(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),kS=jb({elu_:function(t){const e={x:Gb(t,"x","elu","float32")};return Pb.runKernel(px,e)}}),AS=jb({equal_:function(t,e){let n=Gb(t,"a","equal","string_or_numeric"),r=Gb(e,"b","equal","string_or_numeric");[n,r]=Cb(n,r),u_(n.shape,r.shape);const i={a:n,b:r};return Pb.runKernel(gx,i)}}),RS=jb({erf_:function(t){let e=Gb(t,"x","erf");Rm("int32"===e.dtype||"float32"===e.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=Ow(e,"float32"));const n={x:e};return Pb.runKernel(mx,n)}}),NS=jb({exp_:function(t){const e={x:Gb(t,"x","exp")};return Pb.runKernel(xx,e)}}),DS=jb({expandDims_:function(t,e=0){const n=Gb(t,"x","expandDims","string_or_numeric");Rm(e<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},i={dim:e};return Pb.runKernel(yx,r,i)}}),LS=jb({tile_:function(t,e){const n=Gb(t,"x","tile","string_or_numeric");Rm(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const r={x:n},i={reps:e};return Pb.runKernel(dv,r,i)}}),FS=jb({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const i=Pw([t,e],r),s=t<=e?t:e;for(let t=0;t<s;++t)i.set(1,t,t);const a=aS(i.toTensor(),[t,e]);if(null==n)return a;if(1===n.length)return LS(DS(a,0),[n[0],1,1]);if(2===n.length)return LS(DS(DS(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return LS(DS(DS(DS(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),PS=jb({floor_:function(t){const e={x:Gb(t,"x","floor","float32")};return Pb.runKernel(Sx,e)}}),OS=jb({gather_:function(t,e,n=0,r=0){const i={x:Gb(t,"x","gather"),indices:Gb(e,"indices","gather","int32")},s={axis:n,batchDims:r};return Pb.runKernel(Ex,i,s)}}),$S=jb({greater_:function(t,e){let n=Gb(t,"a","greater","string_or_numeric"),r=Gb(e,"b","greater","string_or_numeric");[n,r]=Cb(n,r),u_(n.shape,r.shape);const i={a:n,b:r};return Pb.runKernel(Cx,i)}}),US=jb({greaterEqual_:function(t,e){let n=Gb(t,"a","greaterEqual","string_or_numeric"),r=Gb(e,"b","greaterEqual","string_or_numeric");[n,r]=Cb(n,r),u_(n.shape,r.shape);const i={a:n,b:r};return Pb.runKernel(kx,i)}}),zS=jb({leakyRelu_:function(t,e=.2){const n={x:Gb(t,"x","leakyRelu")},r={alpha:e};return Pb.runKernel(Px,n,r)}}),BS=jb({log_:function(t){const e={x:Gb(t,"x","log","float32")};return Pb.runKernel(zx,e)}}),VS=jb({log1p_:function(t){const e={x:Gb(t,"x","log1p")};return Pb.runKernel(Bx,e)}}),WS=jb({max_:function(t,e=null,n=!1){const r={x:Gb(t,"x","max")},i={reductionIndices:e,keepDims:n};return Pb.runKernel(qx,r,i)}}),GS=jb({sum_:function(t,e=null,n=!1){let r=Gb(t,"x","sum");"bool"===r.dtype&&(r=Ow(r,"int32"));const i={x:r},s={axis:e,keepDims:n};return Pb.runKernel(qy,i,s)}}),HS=jb({logSoftmax_:function(t,e=-1){const n=Gb(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const r=jw((t,n)=>{const r=WS(t,e,!0),i=i_(t,r),s=i_(Ow(i,"float32"),BS(GS(NS(i),e,!0)));return n([s]),{value:s,gradFunc:(t,n)=>{const[r]=n,i=NS(r);return i_(t,Vw(GS(t,e,!0),i))}}});return r(n)}});function jS(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function qS(t,e,n){const r=t.length+e.length,i=[];let s=0,a=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?i.push(t[s++]):i.push(e[a++]);return i}function XS(t,e){const n=[],r=t.length;for(let i=0;i<r;i++)-1===e.indexOf(i)&&n.push(t[i]);return[n,e.map(e=>t[e])]}function KS(t,e){return qS(t,e.map(t=>1),e)}function YS(t,e,n){Rm(jS(e,n),()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`)}function ZS(t,e){if(jS(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach(t=>n.push(t)),n}function JS(t){return t.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function QS(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}const tT=jb({logSumExp_:function(t,e=null,n=!1){const r=Gb(t,"x","logSumExp"),i=Bm(e,r.shape),s=WS(r,i,!0),a=i_(r,s),o=NS(a),l=GS(o,i),u=BS(l),c=Uw(aS(s,u.shape),u);if(n){const t=KS(c.shape,i);return aS(c,t)}return c}}),eT=jb({logicalAnd_:function(t,e){const n=Gb(t,"a","logicalAnd","bool"),r=Gb(e,"b","logicalAnd","bool");u_(n.shape,r.shape);const i={a:n,b:r};return Pb.runKernel(Vx,i)}}),nT=jb({matMul_:function(t,e,n=!1,r=!1){let i=Gb(t,"a","matMul"),s=Gb(e,"b","matMul");[i,s]=Cb(i,s);const a={a:i,b:s},o={transposeA:n,transposeB:r};return Pb.runKernel(Lg,a,o)}}),rT=jb({maxPool_:function(t,e,n,r,i){const s=Gb(t,"x","maxPool");let a=s,o=!1;3===s.rank&&(o=!0,a=aS(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Rm(4===a.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),Rm(nS(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),sS("maxPool",r,i);const l={x:a},u={filterSize:e,strides:n,pad:r,dimRoundingMode:i},c=Pb.runKernel(Kx,l,u);return o?aS(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),iT=jb({maxPool3d_:function(t,e=[1,1,1],n,r,i,s="NDHWC"){const a=Gb(t,"x","maxPool3d");let o=a,l=!1;4===a.rank&&(l=!0,o=aS(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),Rm(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),Rm("NDHWC"===s,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),sS("maxPool3d",r,i);const u={x:o},c={filterSize:e,strides:n,pad:r,dimRoundingMode:i,dataFormat:s},h=Pb.runKernel(Zx,u,c);return l?aS(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),sT=jb({mean_:function(t,e=null,n=!1){const r={x:Gb(t,"x","mean")},i={axis:e,keepDims:n};return Pb.runKernel(ty,r,i)}}),aT=jb({min_:function(t,e=null,n=!1){const r={x:Gb(t,"x","min")},i={axis:e,keepDims:n};return Pb.runKernel(ey,r,i)}}),oT=jb({minimum_:function(t,e){let n=Gb(t,"a","minimum"),r=Gb(e,"b","minimum");[n,r]=Cb(n,r),"bool"===n.dtype&&(n=Ow(n,"int32"),r=Ow(r,"int32")),u_(n.shape,r.shape);const i={a:n,b:r};return Pb.runKernel(ny,i)}}),lT=jb({moments_:function(t,e=null,n=!1){const r=Bm(e,(t=Gb(t,"x","moments")).shape),i=sT(t,r,n);let s=i.shape;n||(s=KS(i.shape,r));const a=Gw(i_(Ow(t,"float32"),aS(i,s)));return{mean:i,variance:sT(a,r,n)}}}),uT=jb({neg_:function(t){const e={x:Gb(t,"x","neg")};return Pb.runKernel(oy,e)}}),cT=jb({notEqual_:function(t,e){let n=Gb(t,"a","notEqual","string_or_numeric"),r=Gb(e,"b","notEqual","string_or_numeric");[n,r]=Cb(n,r),u_(n.shape,r.shape);const i={a:n,b:r};return Pb.runKernel(ly,i)}}),hT=jb({oneHot_:function(t,e,n=1,r=0,i="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const s={indices:Gb(t,"indices","oneHot","int32")},a={dtype:i,depth:e,onValue:n,offValue:r};return Pb.runKernel(py,s,a)}});function dT(t,e="float32"){if(ig(t),"complex64"===e){const e=dT(t,"float32"),n=dT(t,"float32");return qb(e,n)}const n=ng(Lm(t),e);return Pb.makeTensor(n,t,e)}function pT(t,e="float32"){if(ig(t),"complex64"===e){const e=pT(t,"float32"),n=dT(t,"float32");return qb(e,n)}const n=eg(Lm(t),e);return Pb.makeTensor(n,t,e)}const fT=jb({onesLike_:function(t){const e={x:Gb(t,"x","onesLike")};return Pb.runKernel(dy,e)}}),mT=jb({pad_:function(t,e,n=0){const r=Gb(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:e,constantValue:n},s={x:r};return Pb.runKernel(my,s,i)}}),gT=jb({prelu_:function(t,e){const n={x:Gb(t,"x","prelu"),alpha:Gb(e,"alpha","prelu")};return Pb.runKernel(xy,n)}});var xT=n(391);class yT{constructor(t,e,n,r,i){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=i||Math.random();this.random=xT.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,i,s;do{r=2*this.random()-1,i=2*this.random()-1,s=r*r+i*i}while(s>=1||0===s);const a=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*r*a,e=this.mean+this.stdDev*i*a,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class vT{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=xT.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const bT=jb({randomNormal_:function(t,e=0,n=1,r,i){if(ig(t),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new yT(e,n,r,!1,i),a=Pw(t,r);for(let t=0;t<a.values.length;t++)a.values[t]=s.nextValue();return a.toTensor()}}),wT=jb({randomUniform_:function(t,e=0,n=1,r="float32",i){ig(t);const s=Pw(t,r),a=new vT(e,n,null,i);for(let t=0;t<s.values.length;t++)s.values[t]=a.nextValue();return s.toTensor()}});function _T(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const i={start:t,stop:e,step:n,dtype:r};return Pb.runKernel(_y,{},i)}const ST=jb({relu_:function(t){const e={x:Gb(t,"x","relu")};return Pb.runKernel(My,e)}}),TT=jb({reverse_:function(t,e){const n={x:Gb(t,"x","reverse")},r={dims:e};return Pb.runKernel(Ny,n,r)}}),MT=jb({selu_:function(t){const e={x:Gb(t,"x","selu")};return Pb.runKernel(Uy,e)}}),ET=jb({separableConv2d_:function(t,e,n,r,i,s=[1,1],a="NHWC"){const o=Gb(t,"x","separableConv2d"),l=Gb(e,"depthwiseFilter","separableConv2d"),u=Gb(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=aS(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Rm(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),Rm(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),Rm(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),Rm(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),Rm(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],p=l.shape[3];Rm(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);const f=CS(c,l,r,i,a,s),m=bS(f,u,1,"valid",a);return h?aS(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),IT=jb({sigmoid_:function(t){const e={x:Gb(t,"x","sigmoid","float32")};return Pb.runKernel(Gy,e)}}),CT=jb({slice_:function(t,e,n){const r=Gb(t,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const i={x:r},s={begin:e,size:n};return Pb.runKernel(zy,i,s)}}),kT=jb({slice1d_:function(t,e,n){const r=Gb(t,"x","slice1d");return Rm(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),CT(r,[e],[n])}}),AT=jb({slice2d_:function(t,e,n){const r=Gb(t,"x","slice2d");return Rm(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),CT(r,e,n)}}),RT=jb({slice3d_:function(t,e,n){const r=Gb(t,"x","slice3d");return Rm(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),CT(r,e,n)}}),NT=jb({slice4d_:function(t,e,n){const r=Gb(t,"x","slice4d");return Rm(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),CT(r,e,n)}}),DT=jb({softmax_:function(t,e=-1){const n=Gb(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},i={dim:e};return Pb.runKernel(Yy,r,i)}}),LT=jb({softplus_:function(t){const e={x:Gb(t,"x","softplus")};return Pb.runKernel(Hy,e)}}),FT=jb({split_:function(t,e,n=0){const r={x:Gb(t,"x","split")},i={numOrSizeSplits:e,axis:n};return Pb.runKernel(Ky,r,i)}}),PT=jb({squeeze_:function(t,e){const n=Gb(t,"x","squeeze","string_or_numeric");return aS(n,Vm(n.shape,e).newShape)}}),OT=jb({stack_:function(t,e=0){const n=Hb(t,"tensors","stack","string_or_numeric");Rm(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&Rm(e<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,i={axis:e};return Pb.runKernel(fy,r,i)}}),$T=jb({tanh_:function(t){const e={x:Gb(t,"x","tanh","float32")};return Pb.runKernel(hv,e)}});function UT(t,e){Dm(t);const n=Bb(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Xb(t,null,n,e)}function zT(t,e,n){if(Dm(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Bb(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Xb(t,e,r,n)}const BT=jb({truncatedNormal_:function(t,e=0,n=1,r,i){if(ig(t),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new yT(e,n,r,!0,i),a=Pw(t,r);for(let t=0;t<a.values.length;t++)a.values[t]=s.nextValue();return a.toTensor()}}),VT=jb({unstack_:function(t,e=0){const n=Gb(t,"x","unstack","string_or_numeric");Rm(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},i={axis:e};return Pb.runKernel(xv,r,i)}}),WT=jb({where_:function(t,e,n){const r=Gb(e,"a","where"),i=Gb(n,"b","where"),s=Gb(t,"condition","where","bool"),a=u_(u_(s.shape,r.shape),i.shape),o={condition:pS(s,a),t:pS(r,a),e:pS(i,a)};return Pb.runKernel($y,o)}}),GT=jb({imag_:function(t){const e={input:Gb(t,"input","imag")};return Pb.runKernel(Nx,e)}}),HT=jb({real_:function(t){const e={input:Gb(t,"input","real")};return Pb.runKernel(Sy,e)}}),jT=jb({transpose_:function(t,e,n){const r=Gb(t,"x","transpose");if(null==e&&(e=r.shape.map((t,e)=>e).reverse()),Rm(r.rank===e.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`),e.forEach(t=>{Rm(t>=0&&t<r.rank,()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${e}`)}),r.rank<=1)return r.clone();const i={x:r},s={perm:e};return"complex64"===r.dtype?Qb(()=>{let t=HT(r),e=GT(r);return t=Pb.runKernel(mv,{x:t},s),e=Pb.runKernel(mv,{x:e},s),n&&(e=uT(e)),qb(t,e)}):Pb.runKernel(mv,i,s)}}),qT=jb({dropout_:function(t,e,n,r){const i=Gb(t,"x","dropout");if(Rm("float32"===i.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${i.dtype} tensor instead.`),Rm(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),0===e)return t instanceof mb?i.clone():i;const s=function(t,e){if(null==e)return t.shape.slice();if(Fm(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(i,n),a=1-e,o=Bw(PS(Uw(wT(s,0,1,"float32",r),a)),a);return Vw(i,o)}}),XT=jb({fft_:function(t){Rm("complex64"===t.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e={input:t};return Pb.runKernel(bx,e)}}),KT=jb({rfft_:function(t,e){Rm("float32"===t.dtype,()=>`The dtype for rfft() must be real value but got ${t.dtype}`);let n=t.shape[t.shape.length-1];const r=t.size/n;let i;if(null!=e&&e<n){const r=t.shape.map(t=>0),s=t.shape.map(t=>t);s[t.shape.length-1]=e,i=CT(t,r,s),n=e}else if(null!=e&&e>n){const r=t.shape.map(t=>t);r[t.shape.length-1]=e-n,i=mS([t,dT(r)],t.shape.length-1),n=e}else i=t;const s=Hw(i),a=aS(qb(i,s),[r,n]),o=XT(a),l=Math.floor(n/2)+1,u=HT(o),c=GT(o),h=FT(u,[l,n-l],u.shape.length-1),d=FT(c,[l,n-l],c.shape.length-1),p=i.shape.slice();return p[i.shape.length-1]=l,aS(qb(h[0],d[0]),p)}}),YT=jb({ifft_:function(t){Rm("complex64"===t.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e={input:t};return Pb.runKernel(Rx,e)}}),ZT=jb({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const i=aS(t,[n,e]);r=YT(i)}else{const i=[n,2*(e-1)],s=aS(HT(t),[n,e]),a=aS(GT(t),[n,e]),o=TT(CT(s,[0,1],[n,e-2]),1),l=Vw(TT(CT(a,[0,1],[n,e-2]),1),qw(-1)),u=mS([s,o],1),c=mS([a,l],1),h=aS(qb(u,c),[i[0],i[1]]);r=YT(h)}if(r=HT(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=aS(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}}),JT=jb({conv2DBackpropFilter_:function(t,e,n,r,i,s="NHWC",a){let o=t;3===t.rank&&(o=aS(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=aS(e,[1,e.shape[0],e.shape[1],e.shape[2]])),Rm(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),Rm(4===l.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),Rm(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const u="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?l.shape[3]:l.shape[1];Rm(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),Rm(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),sS("conv2dDerFilter",i,a);const h={x:o,dy:l},d={strides:r,pad:i,dataFormat:s,dimRoundingMode:a,filterShape:n};return Pb.runKernel(jg,h,d)}}),QT=jb({relu6_:function(t){const e={x:Gb(t,"x","relu6")};return Pb.runKernel(Ry,e)}}),tM=jb({step_:function(t,e=0){const n={x:Gb(t,"x","step")},r={alpha:e};return Pb.runKernel(bv,n,r)}});function eM(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Vw(t,tM(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function nM(t,e){let n=e;const r=l_(t.shape,e.shape);return r.length>0&&(n=GS(n,r)),aS(n,t.shape)}function rM(t,e,n,r){if("linear"===e)return t;if("relu"===e)return ST(t);if("elu"===e)return kS(t);if("relu6"===e)return QT(t);if("prelu"===e)return gT(t,n);if("leakyrelu"===e)return zS(t,r);if("sigmoid"===e)return IT(t);throw new Error(`Unknown fused activation ${e}.`)}const iM=(t,e)=>!(t>0)||"linear"===e,sM=jb({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:i="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===iM(Pb.state.gradientDepth,l)){Rm("NHWC"===i,()=>`Error in fused conv2d: got dataFormat of ${i} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let h=bS(t,e,n,r,i,s,a);return null!=o&&(h=Uw(h,o)),rM(h,l,u,c)}const h=Gb(t,"x","conv2d","float32"),d=Gb(e,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=aS(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Rm(4===p.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),Rm(4===d.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),sS("fused conv2d",r,a);const m="NHWC"===i?p.shape[3]:p.shape[1];Rm(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),Rm(nS(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);const g=X_(p.shape,d.shape,n,s,r,a);let x,y;if(null!=o&&(x=Gb(o,"bias","fused conv2d"),[x]=Cb(x,h),"NHWC"===i?u_(g.outShape,x.shape):(Rm(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),Rm(0===x.shape.length||x.shape[0]===g.outChannels||1===x.shape[0],()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${g.outChannels})`))),null!=u){const t=u.shape;if(Rm(t.length<=1||3===t.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${t.length}.`),1===t.length)Rm(1===t[0]||t[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${t}) is not compatible with the number of output channels (${g.outChannels}).`);else if(3===t.length)try{u_(t,g.outShape)}catch(e){const n=`Error in fused conv2d: PReLU activation weights (${t}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}y=Gb(u,"prelu weights","fused conv2d")}const v=(t,e)=>{Rm("NHWC"===i,()=>`Error in gradient of fused conv2D: got dataFormat of ${i} but only NHWC is currently supported.`);const[a,o,u,c]=e,h=eM(t,u,l);Rm(eS(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const d=[_S(o.shape,h,a,n,r),JT(o,h,a.shape,n,r)];if(null!=c){const t=nM(c,h);d.push(t)}return d},b={x:p,filter:d,bias:x,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:i,dilations:s,dimRoundingMode:a,activation:l,leakyreluAlpha:c};if(null==o){const t=jw((t,e,n)=>{let r=Pb.runKernel(Sv,b,w);return n([e,t,r]),f&&(r=aS(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}});return t(p,d)}{const t=jw((t,e,n,r)=>{let i=Pb.runKernel(Sv,b,w);return r([e,t,i,n]),f&&(i=aS(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:v}});return t(p,d,x)}}}),aM=jb({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r,i,s=[1,1],a){let o=t;3===t.rank&&(o=aS(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=aS(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:i,dimRoundingMode:a,dilations:s,filterShape:n};return Pb.runKernel(sx,u,c)}}),oM=jb({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r,i,s=[1,1],a){let o=e,l=!1;3===e.rank&&(l=!0,o=aS(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:i,dimRoundingMode:a,dilations:s,inputShape:t},h=Pb.runKernel(ax,u,c);return l?aS(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),lM=jb({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:i,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:o=.2}){if(!1===iM(Pb.state.gradientDepth,s)){let l=nT(t,e,n,r);return null!=i&&(l=Uw(l,i)),rM(l,s,a,o)}let l=Gb(t,"a","fused matMul"),u=Gb(e,"b","fused matMul");[l,u]=Cb(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=Lm(f),x=Lm(m);Rm(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);const y=u_(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),v=aS(l,n?[g,c,d]:[g,d,c]),b=aS(u,r?[x,p,h]:[x,h,p]);let w,_;null!=i&&(w=Gb(i,"bias","fused matMul"),[w]=Cb(w,l),u_(y,w.shape)),null!=a&&(_=Gb(a,"prelu weights","fused matMul"));const S=(t,e)=>{const[a,o,l,u]=e,c=eM(aS(t,l.shape),l,s);let h,d;return n||r?!n&&r?(h=nT(c,o,!1,!1),d=nT(c,a,!0,!1)):n&&!r?(h=nT(o,c,!1,!0),d=nT(a,c,!1,!1)):(h=nT(o,c,!0,!0),d=nT(c,a,!0,!0)):(h=nT(c,o,!1,!0),d=nT(a,c,!0,!1)),null!=i?[h,d,nM(u,c)]:[h,d]},T={a:v,b,bias:w,preluActivationWeights:_},M={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};if(null==i){const t=jw((t,e,n)=>{const r=Pb.runKernel(_v,T,M);return n([t,e,r]),{value:aS(r,y),gradFunc:S}});return t(v,b)}{const t=jw((t,e,n,r)=>{const i=Pb.runKernel(_v,T,M);return r([t,e,i,n]),{value:aS(i,y),gradFunc:S}});return t(v,b,w)}}}),uM=jb({cropAndResize_:function(t,e,n,r,i="bilinear",s=0){const a=Gb(t,"image","cropAndResize"),o=Gb(e,"boxes","cropAndResize","float32"),l=Gb(n,"boxInd","cropAndResize","int32"),u=o.shape[0];Rm(4===a.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),Rm(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),Rm(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),Rm(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),Rm(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),Rm("bilinear"===i||"nearest"===i,()=>`method must be bilinear or nearest, but was ${i}`);const c={image:a,boxes:o,boxInd:l},h={method:i,extrapolationValue:s,cropSize:r};return Pb.runKernel(ex,c,h)}}),cM=jb({flipLeftRight_:function(t){const e=Gb(t,"image","flipLeftRight","float32");Rm(4===e.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const n={image:e};return Pb.runKernel(_x,n,{})}}),hM=jb({grayscaleToRGB_:function(t){const e=Gb(t,"image","grayscaleToRGB"),n=e.rank-1,r=e.shape[n];Rm(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),Rm(1===r,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const i=new Array(e.rank);return i.fill(1,0,n),i[n]=3,LS(e,i)}}),dM=jb({einsum_:function(t,...e){const n=e.map((t,e)=>Gb(t,`tensors${e}`,"einsum")),r={equation:t};return Pb.runKernel(dx,n,r)}}),pM=jb({rgbToGrayscale_:function(t){const e=Gb(t,"image","RGBToGrayscale"),n=e.rank-1,r=e.shape[n];Rm(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),Rm(3===r,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);const i=e.dtype,s=Ow(e,"float32"),a=UT([.2989,.587,.114]);let o;switch(e.rank){case 2:o=dM("ij,j->i",s,a);break;case 3:o=dM("ijk,k->ij",s,a);break;case 4:o=dM("ijkl,l->ijk",s,a);break;case 5:o=dM("ijklm,m->ijkl",s,a);break;case 6:o=dM("ijklmn,n->ijklm",s,a);break;default:throw new Error("Not a valid tensor rank.")}return o=DS(o,-1),Ow(o,i)}}),fM=jb({rotateWithOffset_:function(t,e,n=0,r=.5){const i=Gb(t,"image","rotateWithOffset","float32");Rm(4===i.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${i.rank}.`);const s={image:i},a={radians:e,fillValue:n,center:r};return Pb.runKernel(wv,s,a)}});function mM(t,e,n,r,i,s){null==r&&(r=.5),null==i&&(i=Number.NEGATIVE_INFINITY),null==s&&(s=0);const a=t.shape[0];return n=Math.min(n,a),Rm(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),Rm(2===t.rank,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),Rm(4===t.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`),Rm(1===e.rank,()=>"scores must be a 1D tensor"),Rm(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),Rm(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:i,softNmsSigma:s}}const gM=jb({nonMaxSuppression_:function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY){const s=Gb(t,"boxes","nonMaxSuppression","float32"),a=Gb(e,"scores","nonMaxSuppression","float32"),o=mM(s,a,n,r,i),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:i=o.scoreThreshold};return Pb.runKernel(uy,{boxes:s,scores:a},l)}});function xM(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,i=t.length,s=0,a=!1;for(;r<i;){s=r+(i-r>>>1);const o=n(e,t[s]);o>0?r=s+1:(i=s,a=!o)}return a?r:-r-1}(t,e,n||yM)}(t,e,n),i=r<0?-(r+1):r;t.splice(i,0,e)}function yM(t,e){return t>e?1:t<e?-1:0}function vM(t,e,n,r,i){return _M(t,e,n,r,i,0)}function bM(t,e,n,r,i,s){return _M(t,e,n,r,i,0,!1,s,!0)}function wM(t,e,n,r,i,s){return _M(t,e,n,r,i,s,!0)}function _M(t,e,n,r,i,s,a=!1,o=!1,l=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>i&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(MM);const c=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:a}=e;if(n<i)break;let o=!1;for(let n=h.length-1;n>=a;--n){const a=SM(t,s,h[n]);if(a>=r){o=!0;break}if(e.score=e.score*TM(r,c,a),e.score<=i)break}e.suppressBeginIndex=h.length,o||(e.score===n?(h.push(s),d.push(e.score)):e.score>i&&xM(u,e,MM))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return a&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function SM(t,e,n){const r=t.subarray(4*e,4*e+4),i=t.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(i[0],i[2]),c=Math.min(i[1],i[3]),h=Math.max(i[0],i[2]),d=Math.max(i[1],i[3]),p=(o-s)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(s,u),g=Math.max(a,c),x=Math.min(o,h),y=Math.min(l,d),v=Math.max(x-m,0)*Math.max(y-g,0);return v/(p+f-v)}function TM(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function MM(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const EM=jb({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY,s=0){const a=Gb(t,"boxes","nonMaxSuppression"),o=Gb(e,"scores","nonMaxSuppression"),l=mM(a,o,n,r,i,s),u={boxes:a,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:i=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},h=Pb.runKernel(hy,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),IM=jb({nonMaxSuppressionPadded_:function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY,s=!1){const a=Gb(t,"boxes","nonMaxSuppression"),o=Gb(e,"scores","nonMaxSuppression"),l=mM(a,o,n,r,i,null),u={boxes:a,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},h=Pb.runKernel(cy,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),CM=jb({resizeBilinear_:function(t,e,n=!1,r=!1){const i=Gb(t,"images","resizeBilinear");Rm(3===i.rank||4===i.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`),Rm(2===e.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),Rm(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=i,a=!1;3===i.rank&&(a=!0,s=aS(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[]=e,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:e},u=Pb.runKernel(ky,o,l);return a?aS(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),kM=jb({resizeNearestNeighbor_:function(t,e,n=!1,r=!1){const i=Gb(t,"images","resizeNearestNeighbor");Rm(3===i.rank||4===i.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`),Rm(2===e.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),Rm("float32"===i.dtype||"int32"===i.dtype,()=>"`images` must have `int32` or `float32` as dtype"),Rm(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=i,a=!1;3===i.rank&&(a=!0,s=aS(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[]=e,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:e},u=Pb.runKernel(Iy,o,l);return a?aS(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),AM=jb({bincount_:function(t,e,n){const r=Gb(t,"x","bincount"),i=Gb(e,"weights","bincount");Rm("int32"===r.dtype,()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),Rm(n>=0,()=>`size must be non-negative, but got ${n}.`),Rm(i.size===r.size||0===i.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${i.shape}.`);const s={x:r,weights:i},a={size:n};return Pb.runKernel(Pg,s,a)}}),RM=jb({lessEqual_:function(t,e){let n=Gb(t,"a","lessEqual","string_or_numeric"),r=Gb(e,"b","lessEqual","string_or_numeric");[n,r]=Cb(n,r),u_(n.shape,r.shape);const i={a:n,b:r};return Pb.runKernel($x,i)}}),NM=jb({round_:function(t){const e={x:Gb(t,"x","round")};return Pb.runKernel(Dy,e)}}),DM=jb({threshold_:function(t,e="binary",n=!1,r=.5){const i=Gb(t,"image","threshold"),s=i.shape[0]*i.shape[1];let a,o,l,u,c=Vw(UT([r]),255);if(Rm(3===i.rank,()=>`Error in threshold: image must be rank 3,but got rank ${i.rank}.`),Rm(3===i.shape[2]||1===i.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${i.shape[2]}.`),Rm("int32"===i.dtype||"float32"===i.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${i.dtype}.`),Rm("otsu"===e||"binary"===e,()=>`Method must be binary or otsu, but was ${e}`),3===i.shape[2]){[a,o,l]=FT(i,[1,1,1],-1);const t=Vw(a,.2989),e=Vw(o,.587),n=Vw(l,.114);u=Uw(Uw(t,e),n)}else u=t;"otsu"===e&&(c=function(t,e){let n,r,i,s,a,o,l=UT([-1]),u=UT([0]),c=UT([0]);for(let h=0;h<t.size-1;h++){n=CT(t,0,h+1),r=CT(t,h+1),a=Bw(GS(n),e),o=Bw(GS(r),e);const d=GS(Vw(n,_T(0,n.size)));i=Bw(d,GS(n));const p=e_(r.shape,n.size),f=Uw(_T(0,r.size),p),m=Vw(r,f);s=Bw(GS(m),GS(r));const g=i_(i,s),x=i_(i,s),y=Vw(a,o);c=Vw(Vw(y,g),x);const v=$S(c,u);u=WT(v,c,u),l=WT(v,UT([h]),l)}return l}(AM(Ow(NM(u),"int32"),Kb([]),256),s));const h=n?RM(u,c):$S(u,c);return Ow(Vw(h,255),"int32")}}),LM=jb({transform_:function(t,e,n="nearest",r="constant",i=0,s){const a=Gb(t,"image","transform","float32"),o=Gb(e,"transforms","transform","float32");Rm(4===a.rank,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),Rm(2===o.rank&&(o.shape[0]===a.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),Rm(null==s||2===s.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);const l={image:a,transforms:o},u={interpolation:n,fillMode:r,fillValue:i,outputShape:s};return Pb.runKernel(fv,l,u)}}),FM=jb({less_:function(t,e){let n=Gb(t,"a","less","string_or_numeric"),r=Gb(e,"b","less","string_or_numeric");[n,r]=Cb(n,r),u_(n.shape,r.shape);const i={a:n,b:r};return Pb.runKernel(Ox,i)}}),PM=jb({bandPart_:function(t,e,n){const r=Gb(t,"a","bandPart");Rm(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const i=r.shape,[s,a]=r.shape.slice(-2);let o,l;"number"==typeof e?(Rm(e%1==0,()=>`bandPart(): numLower must be an integer, got ${e}.`),Rm(e<=s,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`),o=Gb(e<0?s:e,"numLower","bandPart")):(Rm("int32"===e.dtype,()=>"bandPart(): numLower's dtype must be an int32."),o=WT(FM(e,0),s,oT(e,s))),"number"==typeof n?(Rm(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),Rm(n<=a,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`),l=Gb(n<0?a:n,"numUpper","bandPart")):(Rm("int32"===n.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),l=WT(FM(n,0),a,oT(n,a)));const u=aS(_T(0,s,1,"int32"),[-1,1]),c=_T(0,a,1,"int32"),h=i_(u,c),d=eT(RM(h,o),US(h,uT(l))),p=dT([s,a],r.dtype);return aS(OT(VT(aS(r,[-1,s,a])).map(t=>WT(d,t,p))),i)}});function OM(t,e,n=null){if(0===t.rank)return a_(t);if(1!==t.rank&&null===n)return OM(aS(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return GS(a_(t),n);if(e===1/0)return WS(a_(t),n);if(e===-1/0)return aT(a_(t),n);if("euclidean"===e||2===e)return Ww(GS(r_(a_(t),qw(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return WS(GS(a_(t),n[0]),n[1]-1);if(e===1/0)return WS(GS(a_(t),n[1]),n[0]);if(e===-1/0)return aT(GS(a_(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return Ww(GS(Gw(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const $M=jb({norm_:function(t,e="euclidean",n=null,r=!1){const i=OM(t=Gb(t,"x","norm"),e,n);let s=i.shape;if(r){const e=Bm(n,t.shape);s=KS(i.shape,e)}return aS(i,s)}}),UM=jb({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,Rm(null!=t&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=t[0].shape[0];for(let e=1;e<t.length;++e)Rm(t[e].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`)}else e=!0,t=FT(t,t.shape[0],0).map(t=>PT(t,[0]));Rm(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],r=t;for(let e=0;e<t.length;++e)n.push(Pb.tidy(()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=Vw(GS(Vw(n[r],t)),n[r]);t=i_(t,e)}return Bw(t,$M(t,"euclidean"))}));return e?OT(n,0):n}});function zM(t,e=!1){return Pb.tidy(()=>{Rm(2===t.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],r=t.shape[1];let i=FS(n),s=$w(t);const a=zT([[1]],[1,1]);let o=$w(a);const l=n>=r?r:n;for(let t=0;t<l;++t){const e=s,l=o,u=i;[o,s,i]=Pb.tidy(()=>{const e=CT(s,[t,t],[n-t,1]),l=$M(e),u=CT(s,[t,t],[1,1]),c=WT($S(u,0),zT([[-1]]),zT([[1]])),h=i_(u,Vw(c,l)),d=Bw(e,h);o=1===d.shape[0]?$w(a):mS([a,CT(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=uT(Bw(nT(c,h),l)),f=CT(s,[t,0],[n-t,r]),m=Vw(p,o),g=jT(o);if(0===t)s=i_(f,nT(m,nT(g,f)));else{const e=i_(f,nT(m,nT(g,f)));s=mS([CT(s,[0,0],[t,r]),e],0)}const x=jT(m),y=CT(i,[0,t],[n,i.shape[1]-t]);if(0===t)i=i_(y,nT(nT(y,o),x));else{const e=i_(y,nT(nT(y,o),x));i=mS([CT(i,[0,0],[n,t]),e],1)}return[o,s,i]}),tw([e,l,u])}return!e&&n>r&&(i=CT(i,[0,0],[n,r]),s=CT(s,[0,0],[r,r])),[i,s]})}const BM=jb({qr_:function(t,e=!1){if(Rm(t.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`),2===t.rank)return zM(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((t,e)=>t*e),r=VT(aS(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),i=[],s=[];return r.forEach(t=>{const[n,r]=zM(t,e);i.push(n),s.push(r)}),[aS(OT(i,0),t.shape),aS(OT(s,0),t.shape)]}}});var VM;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(VM||(VM={}));const WM=jb({squaredDifference_:function(t,e){let n=Gb(t,"a","squaredDifference"),r=Gb(e,"b","squaredDifference");[n,r]=Cb(n,r),u_(n.shape,r.shape);const i={a:n,b:r};return Pb.runKernel(nv,i,{})}}),GM={flipLeftRight:cM,grayscaleToRGB:hM,resizeNearestNeighbor:kM,resizeBilinear:CM,rgbToGrayscale:pM,rotateWithOffset:fM,cropAndResize:uM,nonMaxSuppression:gM,nonMaxSuppressionAsync:async function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY){const s=Gb(t,"boxes","nonMaxSuppressionAsync"),a=Gb(e,"scores","nonMaxSuppressionAsync"),o=mM(s,a,n,r,i);n=o.maxOutputSize,r=o.iouThreshold,i=o.scoreThreshold;const l=await Promise.all([s.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:h}=vM(u,c,n,r,i);return s!==t&&s.dispose(),a!==e&&a.dispose(),UT(h,"int32")},nonMaxSuppressionWithScore:EM,nonMaxSuppressionWithScoreAsync:async function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY,s=0){const a=Gb(t,"boxes","nonMaxSuppressionAsync"),o=Gb(e,"scores","nonMaxSuppressionAsync"),l=mM(a,o,n,r,i,s);n=l.maxOutputSize,r=l.iouThreshold,i=l.scoreThreshold,s=l.softNmsSigma;const u=await Promise.all([a.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=wM(c,h,n,r,i,s);return a!==t&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:UT(d,"int32"),selectedScores:UT(p)}},nonMaxSuppressionPadded:IM,nonMaxSuppressionPaddedAsync:async function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY,s=!1){const a=Gb(t,"boxes","nonMaxSuppressionAsync"),o=Gb(e,"scores","nonMaxSuppressionAsync"),l=mM(a,o,n,r,i,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([a.data(),o.data()]),{selectedIndices:f,validOutputs:m}=bM(d,p,u,c,h,s);return a!==t&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:UT(f,"int32"),validOutputs:qw(m,"int32")}},threshold:DM,transform:LM},HM={bandPart:PM,gramSchmidt:UM,qr:BM},jM=class{static sgd(t){return new d_(t)}static momentum(t,e,n=!1){return new p_(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,i=!1){return new f_(t,e,n,r,i)}static adam(t=.001,e=.9,n=.999,r=null){return new s_(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new t_(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,i=0){return new h_(t,e,n,r,i)}static adagrad(t,e=.1){return new n_(t,e)}},qM="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function XM(){return new Promise(t=>qM(()=>t()))}function KM(t,e){const n=t[0].length;t.forEach((t,e)=>{Rm(t.length===n,()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`)}),Rm(e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=t[0];t.forEach((t,i)=>{for(let s=0;s<n;s++)Rm(s===e||t[s]===r[s],()=>`Error in concat${n}D: Shape of tensors[${i}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${i}.`)})}function YM(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}var ZM;function JM(t,e,n){let r=new Array;if(null==n&&null==e)return r;if(null==e)for(;r.length<t+n.length;)r.push(-1);else r=e.slice();if(null==n)return r;if(t+n.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${t+n.length}, but shape.rank = ${r.length}`);for(let i=1;i<n.length;++i){const s=n[i],a=r[r.length-n.length+i],o=r[a];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${i+t}] = ${s} but shape[${i+t}] = ${o}`)}else r[a]=s}return r}function QM(t){const e={FIRST_DIM_SIZE:ZM.FIRST_DIM_SIZE,VALUE_ROWIDS:ZM.VALUE_ROWIDS,ROW_LENGTHS:ZM.ROW_LENGTHS,ROW_SPLITS:ZM.ROW_SPLITS,ROW_LIMITS:ZM.ROW_LIMITS,ROW_STARTS:ZM.ROW_STARTS},n=[];for(const r of t){if(!(r in e))break;n.push(e[r])}return n}function tE(t){return 0===t.length?0:t[0]===ZM.FIRST_DIM_SIZE?t.length-1:t.length}function eE(t,e){if(null==t||null==e)return;const n=t.length,r=e.length;if(n>=r)throw new Error(`defaultValue.shape=${t} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let i=0;i<Math.min(n,r-1);++i){const n=t[i],r=e[i+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${t}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${i-t.length}] = ${n} but ragged tensor input.flatValues.shape[${i-t.length}] = ${r}`)}}!function(t){t[t.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",t[t.VALUE_ROWIDS=1]="VALUE_ROWIDS",t[t.ROW_LENGTHS=2]="ROW_LENGTHS",t[t.ROW_SPLITS=3]="ROW_SPLITS",t[t.ROW_LIMITS=4]="ROW_LIMITS",t[t.ROW_STARTS=5]="ROW_STARTS"}(ZM||(ZM={}));const nE=30;function rE(t){return t<=nE?t:Zm(t,Math.floor(Math.sqrt(t)))}function iE(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function sE(t,e,n,r=!0){let i=[];if(r)i=i.concat(e.slice(0)),i.push(t[0]/n),i=i.concat(t.slice(1));else{i=i.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)i=i.concat([t[r+1]/e[r],e[r]]);i=i.concat(t.slice(n+1))}return i}function aE(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],i=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?i.push(r):n.push(r);r.push(...n),r.push(0),r.push(...i)}return r}function oE(t,e,n,r=!0){const i=[];r?i.push(t[0]/n):i.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?i.push(e[n-1]*t[n]):i.push(t[n]/e[n-1]):i.push(t[n]);return i}function lE(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function uE(t,e,n){const r=t.slice(0,1);for(let i=0;i<n;++i)r.push(t[i+1]-e[i][0]-e[i][1]);return r}function cE(t,e){const n=t.shape.length,r=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${n}`);if(0===Lm(t.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const i=e.shape,s=i[i.length-1];let a=1;for(let t=0;t<i.length-1;++t)a*=i[t];const o=t.shape,l=i.slice();l.pop();let u=1;for(let t=s;t<n;++t)u*=o[t],l.push(o[t]);const c=[...Jm(t.shape).map(t=>t/u),1].slice(0,s);return[l,a,u,c]}function hE(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,i=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${i}.`;if(n.rank<i)throw new Error(s+` update.rank < ${i}. `);if(t.length<r+(n.rank-i))throw new Error(s+` Output shape length < ${r+(n.rank-i)}`);if(n.rank!==i+t.length-r)throw new Error(s+" update.rank != "+(i+t.length-r));for(let t=0;t<i;++t)if(n.shape[t]!==e.shape[t])throw new Error(s+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-i;++e)if(n.shape[e+i]!==t[e+r])throw new Error(s+` updates.shape[${e+i}] (${n.shape[e+i]}) != shape[${e+i}] (${t[e+i]})`)}function dE(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}hE(n,e,t)}function pE(t,e,n){const r=e.shape.length,i=r>1?e.shape[r-1]:1,s=n.length;let a=1;for(let t=i;t<s;++t)a*=n[t];const o=i<1?1:i;return{sliceRank:i,numUpdates:Lm(e.shape)/o,sliceSize:a,strides:[...Jm(n.slice(0,i)),1],outputSize:Lm(n)}}const fE=1.7580993408473768,mE=1.0507009873554805,gE=.3275911,xE=.254829592,yE=-.284496736,vE=1.421413741,bE=-1.453152027,wE=1.061405429;function _E(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function SE(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function TE(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function ME(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function EE(t,e){return{real:t[2*e],imag:t[2*e+1]}}function IE(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function CE(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let i=0;i<Math.ceil(t/2);i++){const s=(e?2:-2)*Math.PI*(i/t);n[i]=Math.cos(s),r[i]=Math.sin(s)}return{real:n,imag:r}}function kE(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}const AE="->",RE=/->/g,NE=",",DE="...";function LE(t,e){const n=((t=t.replace(/\s/g,"")).length-t.replace(RE,"").length)/AE.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${AE}").`);const[r,i]=t.split(AE);Rm(-1===r.indexOf(DE),()=>`The ellipsis notation ("${DE}") is not supported yet.`);const s=r.split(NE),a=s.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let t=0;t<i.length;++t){const e=i[t];if(!s.some(t=>-1!==t.indexOf(e)))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let t=0;t<r.length;++t){const e=r[t];-1===o.indexOf(e)&&e!==NE&&o.push(e)}const l=new Array(s.length);for(let t=0;t<a;++t){if(new Set(s[t].split("")).size!==s[t].length)throw new Error(`Found duplicate axes in input component ${s[t]}. Support for duplicate axes in input is not implemented yet.`);l[t]=[];for(let e=0;e<s[t].length;++e)l[t].push(o.indexOf(s[t][e]))}const u=o.length,c=[];for(let t=i.length;t<u;++t)c.push(t);return{allDims:o,summedDims:c,idDims:l}}function FE(t,e){let n=new Array(t);n.fill(-1);for(let t=0;t<e.length;++t)n[e[t]]=t;const r=[];for(let e=0;e<t;++e)-1===n[e]&&r.push(e);return n=n.filter(t=>-1!==t),{permutationIndices:n,expandDims:r}}function PE(t,e,n){const r=new Array(t);for(let t=0;t<n.length;++t){const i=n[t].shape;for(let n=0;n<e[t].length;++n)void 0===r[e[t][n]]?r[e[t][n]]=i[n]:Rm(r[e[t][n]]===i[n],()=>`Expected dimension ${r[e[t][n]]} at axis ${n} of input shaped ${JSON.stringify(i)}, but got dimension ${i[n]}`)}}function OE(t,e){const n=t,r=[];let i=0;0===t.length&&n.push(-1),i=t.length+1;for(let t=0;t<i;++t)r.push([]);const s=[];for(let t=0;t<n.length;++t){const i=UE(e,n[t]);for(const e of i)-1===s.indexOf(e)&&(r[t].push(e),s.push(e))}return{path:n,steps:r}}function $E(t){return t.every((t,e)=>t===e)}function UE(t,e){const n=[];for(let r=0;r<t.length;++r)0!==t[r].length&&-1===t[r].indexOf(e)&&-1!==e||n.push(r);return n}function zE(t,e,n=0){let r=[];if("number"==typeof e)Rm(t.shape[n]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(t.shape[n]/e);else{const i=e.reduce((t,e)=>(-1===e&&(t+=1),t),0);Rm(i<=1,()=>"There should be only one negative value in split array.");const s=e.indexOf(-1);if(-1!==s){const r=e.reduce((t,e)=>e>0?t+e:t);e[s]=t.shape[n]-r}Rm(t.shape[n]===e.reduce((t,e)=>t+e),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}function BE(t){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${t}`}function VE(t,e){return`indices(${t}, 0) is invalid: ${e} < 0`}function WE(t,e,n){return`indices(${t}, 0) is invalid: ${e} >= ${n}`}function GE(t,e){return`only one output dimension may be -1, not both ${t} and ${e}`}function HE(t,e){return`size ${t} must be non-negative, not ${e}`}function jE(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function qE(t,e){return`Input to reshape is a SparseTensor with ${Lm(t)}\n  dense values, but the requested shape requires a multiple of ${Lm(e)}. inputShape=${t} outputShape= ${e}`}function XE(t,e){return`Input to reshape is a tensor with ${Lm(t)} dense values, but the requested shape has ${Lm(e)}. inputShape=${t} outputShape=${e}`}function KE(){return"segment ids must be >= 0"}function YE(){return"segment ids are not increasing"}function ZE(t,e){return`Segment id ${t} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function JE(t,e,n){return`Bad: indices[${t}] == ${e} out of range [0, ${n})`}function QE(t,e){let n,r=!1;for(t<=nE?(n=t,r=!0):n=Zm(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=Zm(t,n+1);return n}function tI(t,e,n){const r=[],i=t.length;for(let s=0;s<i;s++)s!==e?r.push(t[s]):r.push(n);return r}function eI(t,e,n,r){const i=e.shape.length,s=t.shape.length;if(0!==r&&(r<-i||r>i))throw new Error(`Expect batchDims in the range of [-${i}, ${i}], but got ${r}`);if(r<0&&(r+=i),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(t.shape[n]!==e.shape[n])throw new Error(`x.shape[${n}]: ${t.shape[n]} should be equal to indices.shape[${n}]: ${e.shape[n]}.`);const a=t.shape[n],o=[];let l=1,u=1,c=1;for(let e=0;e<r;++e)o.push(t.shape[e]),l*=t.shape[e];for(let e=r;e<n;e++)o.push(t.shape[e]),u*=t.shape[e];for(let t=r;t<i;t++)o.push(e.shape[t]);for(let e=n+1;e<s;e++)o.push(t.shape[e]),c*=t.shape[e];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:o}}function nI(t){try{return t.map(t=>tb(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function rI(t){return t.map(t=>Qv(t))}function iI(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const r=Pw(t,"int32"),i=Pw([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const s=r.indexToLoc(n[e]),a=e*t.length;i.values.set(s,a)}return i.toTensor()}!function(){for(const t of m_)Jw(t)}();const sI={kernelName:gg,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Vw(t,tM(Ow(n,"float32"),-1))}}},aI={kernelName:xg,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Gw(Ow(n,"float32")),r=Ww(i_(qw(1),e));return uT(Bw(t,r))}}}},oI={kernelName:yg,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Ww(i_(Gw(Ow(n,"float32")),1));return Bw(t,e)}}}},lI={kernelName:vg,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=u_(n.shape,r.shape);return{a:()=>{let e=t;const r=l_(n.shape,i);return r.length>0&&(e=GS(e,r)),aS(e,n.shape)},b:()=>{let e=t;const n=l_(r.shape,i);return n.length>0&&(e=GS(e,n)),aS(e,r.shape)}}}},uI={kernelName:bg,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((e,r)=>{n[r]=()=>t.clone()}),n}},cI={kernelName:Sg,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Hw(n)}}},hI={kernelName:Tg,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Hw(n)}}},dI={kernelName:Mg,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Bw(t,Ww(i_(qw(1),Gw(Ow(n,"float32")))))}}},pI={kernelName:Eg,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Ww(Uw(qw(1),Gw(Ow(n,"float32"))));return Bw(t,e)}}}},fI={kernelName:kg,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=u_(n.shape,r.shape);return{a:()=>{const e=Uw(Gw(n),Gw(r));let s=Vw(t,Bw(r,e));const a=l_(n.shape,i);return a.length>0&&(s=GS(s,a)),aS(s,n.shape)},b:()=>{const e=Uw(Gw(n),Gw(r));let s=uT(Vw(t,Bw(n,e)));const a=l_(r.shape,i);return a.length>0&&(s=GS(s,a)),aS(s,r.shape)}}}},mI={kernelName:Ig,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Bw(t,Uw(Gw(Ow(n,"float32")),1))}}},gI={kernelName:Cg,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Bw(t,i_(qw(1),Gw(Ow(n,"float32"))))}}},xI=jb({avgPool3dGrad_:function(t,e,n,r,i,s){const a=Gb(t,"dy","avgPool3dGrad"),o=Gb(e,"input","avgPool3dGrad");let l=a,u=o,c=!1;4===o.rank&&(c=!0,l=aS(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=aS(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Rm(5===l.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),Rm(5===u.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),sS("avgPool3dGrad",i,s);const h={dy:l,input:u},d={filterSize:n,strides:r,pad:i,dimRoundingMode:s},p=Pb.runKernel(Dg,h,d);return c?aS(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),yI={kernelName:Ng,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:i,strides:s,pad:a,dimRoundingMode:o}=n;return{x:()=>xI(t,r,i,s,a,o)}}},vI=jb({avgPoolGrad_:function(t,e,n,r,i){const s=Gb(t,"dy","avgPoolGrad"),a=Gb(e,"input","avgPoolGrad");Rm(a.rank===s.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`);let o=a,l=s,u=!1;3===a.rank&&(u=!0,o=aS(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=aS(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Rm(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),Rm(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const c={dy:l,input:o},h={filterSize:n,strides:r,pad:i},d=Pb.runKernel(Rg,c,h);return u?aS(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),bI={kernelName:Ag,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:i,strides:s,pad:a}=n;return{x:()=>vI(t,r,i,s,a)}}},wI={kernelName:Lg,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,i]=e,{transposeA:s,transposeB:a}=n;return s||a?!s&&a?{a:()=>nT(t,i,!1,!1),b:()=>nT(t,r,!0,!1)}:s&&!a?{a:()=>nT(i,t,!1,!0),b:()=>nT(r,t,!1,!1)}:{a:()=>nT(i,t,!0,!0),b:()=>nT(t,r,!0,!0)}:{a:()=>nT(t,i,!1,!0),b:()=>nT(r,t,!0,!1)}}},_I=jb({spaceToBatchND_:function(t,e,n){const r=Gb(t,"x","spaceToBatchND");Rm(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),Rm(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),Rm(r.shape.reduce((t,r,i)=>i>0&&i<=e.length?t&&(r+n[i-1][0]+n[i-1][1])%e[i-1]===0:t,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const i={x:r},s={blockShape:e,paddings:n};return Pb.runKernel(Xy,i,s)}}),SI={kernelName:Fg,gradFunc:(t,e,n)=>{const{blockShape:r,crops:i}=n;return{x:()=>_I(t,r,i)}}},TI={kernelName:"BroadcastTo",gradFunc:(t,e,n)=>{const r=n,i=r.inputShape,s=r.shape,a=Array.from(s);for(let t=i.length-1;t>=0;t--)if(i[t]===s[t])a[t]=1;else if(1!==i[t])throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${s}].`);const o=[];for(let t=0;t<a.length;t++)a[t]>1&&o.push(t);return{x:()=>GS(t,o,!0)}}},MI={kernelName:Ug,gradFunc:t=>({x:()=>t.clone()})},EI={kernelName:zg,gradFunc:t=>({x:()=>Hw(t)})},II={kernelName:Bg,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:i,clipValueMax:s}=n;return{x:()=>WT(eT(US(r,i),RM(r,s)),t,Hw(t))}}},CI={kernelName:Wg,inputsToSave:["x"],gradFunc:sI.gradFunc},kI={kernelName:Gg,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map(t=>t.shape),{axis:i}=n,s=Bm(i,e[0].shape)[0],a=r.map(t=>t[s]);return FT(t,a,s).map(t=>()=>t)}},AI={kernelName:Hg,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,i]=e,{dilations:s,strides:a,pad:o,dataFormat:l}=n;return Rm(eS(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>_S(r.shape,t,i,a,o,l),filter:()=>JT(r,t,i.shape,a,o,l)}}},RI={kernelName:qg,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,i]=e,{strides:s,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>bS(t,i,s,a,o,1,l),filter:()=>JT(t,r,i.shape,s,a,o,l)}}},NI=jb({conv3DBackpropFilter_:function(t,e,n,r,i){let s=t;4===t.rank&&(s=aS(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let a=e;4===a.rank&&(a=aS(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),Rm(5===s.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),Rm(5===a.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),Rm(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),Rm(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),Rm(a.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`);const o={x:s,dy:a},l={strides:r,pad:i,filterShape:n};return Pb.runKernel(Kg,o,l)}}),DI={kernelName:Xg,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:i,pad:s}=n;Rm(eS(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[a,o]=e;return{x:()=>MS(a.shape,t,o,i,s),filter:()=>NI(a,t,o.shape,i,s)}}},LI=jb({sin_:function(t){const e={x:Gb(t,"x","sin","float32")};return Pb.runKernel(By,e)}}),FI={kernelName:Zg,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Vw(uT(LI(Ow(n,"float32"))),t)}}},PI=jb({sinh_:function(t){const e={x:Gb(t,"x","sinh")};return Pb.runKernel(Vy,e)}}),OI={kernelName:Jg,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Vw(PI(Ow(n,"float32")),t)}}},$I=jb({cumsum_:function(t,e=0,n=!1,r=!1){const i={x:Gb(t,"x","cumsum")},s={axis:e,exclusive:n,reverse:r};return Pb.runKernel(tx,i,s)}}),UI={kernelName:tx,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:i,exclusive:s,reverse:a}=n;return{x:()=>{const e=ZS([i],r.rank);let n=$I(t,i,s,!a);return null!=e&&(n=jT(n,e)),n}}}},zI={kernelName:ix,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:i,pad:s,dimRoundingMode:a}=n,o=null==r?[1,1]:r;Rm(eS(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[l,u]=e;return Rm(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),Rm(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),Rm(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),Rm(nS(i,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${i} and dilations '${o}'.`),sS("depthwiseConv2d",s,a),{x:()=>oM(l.shape,t,u,i,s,o,a),filter:()=>aM(l,t,u.shape,i,s,o,a)}}},BI={kernelName:lx,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,i]=e,s={x:r,filter:i,dy:t},a={x:r,filter:i,dy:t};return{x:()=>Pb.runKernel(ux,s,n),filter:()=>Pb.runKernel(cx,a,n)}}},VI={kernelName:px,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r={dy:t,y:n};return{x:()=>Pb.runKernel(fx,r)}}},WI={kernelName:mx,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Vw(NS(uT(Gw(n))),2/Math.sqrt(Math.PI));return{x:()=>Vw(t,r)}}},GI={kernelName:xx,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Vw(t,n)}}},HI={kernelName:yx,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>aS(t,n.shape)}}},jI={kernelName:vx,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Vw(t,NS(n))}}},qI={kernelName:Sx,gradFunc:t=>({x:()=>Hw(t)})},XI={kernelName:Tx,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=u_(n.shape,r.shape);return{a:()=>{const e=Bw(t,Ow(r,"float32")),s=l_(n.shape,i);return s.length>0?aS(GS(e,s),n.shape):e},b:()=>{let e=Vw(t,Ow(n,"float32"));const s=l_(r.shape,i);s.length>0&&(e=aS(GS(e,s),r.shape));const a=Gw(r);return uT(Bw(e,Ow(a,"float32")))}}}},KI=jb({rsqrt_:function(t){const e={x:Gb(t,"x","rsqrt","float32")};return Pb.runKernel(Ly,e)}}),YI={kernelName:Mx,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[i,s,a,o]=e,l=null==o?qw(1):o,u=l_(s.shape,i.shape),c=[];if(1===s.rank){for(let t=0;t<i.shape.length-1;++t)c.push(i.shape[t]);c.push(1)}const h=i_(i,s),d=Vw(t,l),p=KI(Uw(a,qw(r))),f=Vw(Vw(Vw(p,p),p),qw(-.5));return{x:()=>1===s.rank?aS(Vw(Vw(t,LS(aS(p,[1,1,1,s.shape[0]]),c)),l),i.shape):aS(Vw(Vw(t,p),l),i.shape),mean:()=>{let t=Vw(Vw(p,qw(-1)),d);return 1===s.rank&&(t=GS(t,u)),aS(t,s.shape)},variance:()=>{let t=Vw(Vw(f,h),d);return 1===s.rank&&(t=GS(t,u)),aS(t,s.shape)},scale:()=>{const e=Vw(h,p);let n=Vw(t,e);return 1===s.rank&&(n=GS(n,u)),aS(n,s.shape)},offset:()=>{let e=t;return 1===s.rank&&(e=GS(e,u)),aS(e,s.shape)}}}},ZI=jb({unsortedSegmentSum_:function(t,e,n){const r=Gb(t,"x","unsortedSegmentSum"),i=Gb(e,"segmentIds","unsortedSegmentSum","int32");Rm(Pm(n),()=>"numSegments must be of dtype int");const s={x:r,segmentIds:i},a={numSegments:n};return Pb.runKernel(yv,s,a)}}),JI={kernelName:Ex,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,i]=e,{axis:s,batchDims:a}=n,o=Bm(s,r.shape)[0],l=(t,e,n)=>()=>{const r=t.shape,i=e.size,a=r.slice(0,o),l=a.length,u=r.slice(s,r.length).slice(1),c=u.length,h=QI(0,l),d=QI(l+1,l+1+c),p=tC([a,[i],u]),f=aS(n,p),m=aS(e,[i]),g=tC([[l],h,d]),x=jT(f,g);let y=ZI(x,m,t.shape[o]);const v=JS(g);return y=jT(y,v),y};if(1===a){const e=r.shape[0],n=r.split(e,0);return{x:()=>{const e=OT(n.map((e,n)=>l(e,i.slice(n,1),t.slice(n,1))()));return e.reshape(r.shape)},indices:()=>i}}return{x:l(r,i,t),indices:()=>i}}};function QI(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function tC(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const eC={kernelName:kx,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Hw(n),b:()=>Hw(r)}}},nC={kernelName:Ax,gradFunc:t=>({x:()=>Ow(t,"float32")})},rC={kernelName:Dx,gradFunc:t=>({x:()=>Hw(t)})},iC={kernelName:Lx,gradFunc:t=>({x:()=>Hw(t)})},sC={kernelName:Fx,gradFunc:t=>({x:()=>Hw(t)})},aC={kernelName:Px,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{alpha:i}=n,s=$S(r,0);return{x:()=>WT(s,t,Vw(t,i))}}},oC={kernelName:Bx,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Bw(t,Uw(n,1))}}},lC={kernelName:zx,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Bw(t,Ow(n,"float32"))}}},uC={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:i}=n;return{logits:()=>{const e=NS(r);return i_(t,Vw(GS(t,i,!0),e))}}}},cC=jb({localResponseNormalizationBackprop_:function(t,e,n,r=5,i=1,s=1,a=.5){const o={x:t,y:e,dy:n},l={depthRadius:r,bias:i,alpha:s,beta:a};return Pb.runKernel(jx,o,l)}}),hC={kernelName:Hx,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,i]=e,{depthRadius:s,bias:a,alpha:o,beta:l}=n;return{x:()=>cC(r,i,t,s,a,o,l)}}};function dC(t,e,n,r){return e.rank<n.rank&&(e=aS(e,KS(e.shape,r))),t.rank<n.rank&&(t=aS(t,KS(t.shape,r))),{x:()=>Vw(t,Ow(AS(n,e),t.dtype))}}const pC={kernelName:qx,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:i}=r,s=e[0],a=dC(t,e[1],s,Bm(i,s.shape));return{x:()=>a.x()}}},fC={kernelName:Xx,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Vw(t,Ow(US(n,r),"float32")),b:()=>Vw(t,Ow(FM(n,r),"float32"))}}},mC=jb({maxPool3dGrad_:function(t,e,n,r,i,s,a){const o=Gb(t,"dy","maxPool3dGrad"),l=Gb(e,"input","maxPool3dGrad"),u=Gb(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=aS(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=aS(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=aS(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),Rm(5===c.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),Rm(5===h.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),Rm(5===d.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),sS("maxPool3dGrad",s,a);const f={dy:c,input:h,output:d},m={filterSize:r,strides:i,pad:s,dimRoundingMode:a},g=Pb.runKernel(Jx,f,m);return p?aS(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),gC={kernelName:Zx,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,i]=e,{filterSize:s,strides:a,pad:o,dimRoundingMode:l}=n;return{x:()=>mC(t,r,i,s,a,o,l)}}},xC=jb({maxPoolGrad_:function(t,e,n,r,i,s,a){const o=Gb(t,"dy","maxPoolGrad"),l=Gb(e,"input","maxPoolGrad"),u=Gb(n,"output","maxPoolGrad");Rm(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),Rm(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),Rm(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),sS("maxPoolGrad",s,a);const c={dy:o,input:l,output:u},h={filterSize:r,strides:i,pad:s,dimRoundingMode:a};return Pb.runKernel(Yx,c,h)}}),yC={kernelName:Kx,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,i]=e,{filterSize:s,strides:a,pad:o}=n;return{x:()=>xC(t,r,i,s,a,o)}}},vC={kernelName:ty,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:i}=n,s=Bm(i,r.shape),a=Lm(XS(r.shape,s)[1]);return{x:()=>{const e=r.shape.slice();s.forEach(t=>{e[t]=1});const n=aS(t,e);return Bw(Vw(n,pT(r.shape,"float32")),a)}}}},bC={kernelName:ey,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:i}=r,[s,a]=e,o=dC(t,a,s,Bm(i,s.shape));return{x:()=>o.x()}}},wC={kernelName:ny,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Vw(t,Ow(RM(n,r),"float32")),b:()=>Vw(t,Ow($S(n,r),"float32"))}}},_C={kernelName:ry,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:i}=n,s=i.map(t=>t[0]);return{x:()=>CT(t,s,r.shape)}}},SC={kernelName:iy,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=u_(n.shape,r.shape);return{a:()=>{const e=l_(n.shape,i);return e.length>0?aS(GS(t,e),n.shape):t},b:()=>{const e=Vw(t,uT(PS(Bw(n,r)))),s=l_(r.shape,i);return s.length>0?aS(GS(e,s),r.shape):e}}}},TC={kernelName:ay,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=u_(n.shape,r.shape);return{a:()=>{const e=Vw(t,Ow(r,"float32")),s=l_(n.shape,i);return s.length>0?aS(GS(e,s),n.shape):e},b:()=>{const e=Vw(t,Ow(n,"float32")),s=l_(r.shape,i);return s.length>0?aS(GS(e,s),r.shape):e}}}},MC={kernelName:oy,gradFunc:t=>({x:()=>uT(t)})},EC={kernelName:py,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>dT(n.shape,"float32")}}},IC={kernelName:dy,gradFunc:t=>({x:()=>Hw(t)})},CC={kernelName:fy,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:r}=n;return VT(t,r).map(t=>()=>t)}},kC={kernelName:my,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:i}=n,s=i.map(t=>t[0]);return{x:()=>CT(t,s,r.shape)}}},AC={kernelName:gy,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,i]=e,s=n,a=r,o=u_(s.shape,a.shape);return{a:()=>{const e=Ow(a,"float32");let n=Vw(t,Vw(e,r_(s,i_(e,qw(1)))));const r=l_(s.shape,o);return r.length>0&&(n=GS(n,r)),aS(n,s.shape)},b:()=>{const e=$S(s,0),n=WT(e,BS(s),Hw(s));let r=Vw(t,Vw(i,n));const l=l_(a.shape,o);return l.length>0&&(r=GS(r,l)),aS(r,a.shape)}}}},RC={kernelName:xy,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,i=$S(n,0);return{x:()=>WT(i,t,Vw(t,r)),alpha:()=>{let e=WT(i,Hw(t),Vw(t,n));const s=l_(r.shape,t.shape);return s.length>0&&(e=GS(e,s)),aS(e,r.shape)}}}},NC=jb({cumprod_:function(t,e=0,n=!1,r=!1){const i={x:Gb(t,"x","cumprod")},s={axis:e,exclusive:n,reverse:r};return Pb.runKernel(Qg,i,s)}});const DC={kernelName:yy,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:i}=n;let s=[];return s=null==i?r.shape.map((t,e)=>e):"number"==typeof i?[i]:i,{x:()=>function(t,e,n){const r=t.shape.length,i=r-n.length,s=ZS(n,r);let a=t;null!=s&&(a=jT(t,s));const o=a.shape.slice(),l=o.splice(r-n.length,n.length).reduce((t,e)=>t*e,1);o.push(l);let u=function(t,e,n){const r=t.shape.slice();r[n]=1;const i=aS(e,r),s=NC(t,n,!0,!1),a=NC(t,n,!0,!0),o=Vw(s,a);return Vw(i,o)}(a.reshape(o),e,i);if(u=u.reshape(a.shape),null!=s){const t=JS(s);u=jT(u,t)}return u}(r,t,s)}}},LC={kernelName:hx,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=u_(n.shape,r.shape);return{a:()=>{const e=Bw(t,Ow(r,"float32")),s=l_(n.shape,i);return s.length>0?aS(GS(e,s),n.shape):e},b:()=>{let e=Vw(t,Ow(n,"float32"));const s=l_(r.shape,i);s.length>0&&(e=aS(GS(e,s),r.shape));const a=Gw(r);return uT(Bw(e,Ow(a,"float32")))}}}},FC={kernelName:Ty,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Bw(t,uT(Gw(n)))}}},PC={kernelName:Ry,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Vw(RM(n,6),tM(n));return{x:()=>Vw(t,Ow(r,"float32"))}}},OC={kernelName:My,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Vw(t,Ow(tM(n),"float32"))}}},$C={kernelName:Ey,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>aS(t,n.shape)}}},UC={kernelName:ky,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,i={dy:t,images:r};return{images:()=>Pb.runKernel(Ay,i,n)}}},zC={kernelName:Iy,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,i={dy:t,images:r};return{images:()=>Pb.runKernel(Cy,i,n)}}},BC={kernelName:Ny,gradFunc:(t,e,n)=>{const{dims:r}=n,i=Bm(r,t.shape);return{x:()=>TT(t,i)}}},VC={kernelName:Dy,gradFunc:t=>({x:()=>Hw(t)})},WC={kernelName:Ly,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>uT(Bw(t,Vw(r_(n,1.5),2)))}}},GC=jb({logicalNot_:function(t){const e={x:Gb(t,"x","logicalNot","bool")};return Pb.runKernel(Wx,e)}}),HC={kernelName:$y,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Ow(Hw(n),"float32"),t:()=>Vw(t,Ow(n,t.dtype)),e:()=>Vw(t,Ow(GC(n),t.dtype))}}},jC={kernelName:Uy,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=$S(n,qw(0)),r=qw(fE),i=qw(mE),s=Vw(t,i),a=Vw(Vw(t,r),NS(Ow(n,"float32")));return WT(e,s,a)}}}},qC={kernelName:Gy,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Vw(t,Vw(n,i_(qw(1),n)))}}},XC={kernelName:Wy,gradFunc:t=>({x:()=>Hw(t)})},KC=jb({cos_:function(t){const e={x:Gb(t,"x","cos","float32")};return Pb.runKernel(Zg,e)}}),YC={kernelName:By,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Vw(KC(Ow(n,"float32")),t)}}},ZC=jb({cosh_:function(t){const e={x:Gb(t,"x","cosh","float32")};return Pb.runKernel(Jg,e)}}),JC={kernelName:Vy,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Vw(ZC(Ow(n,"float32")),t)}}},QC={kernelName:zy,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:i,size:s}=n,a=r.shape,[o,l]=U_(r,i,s),u=[];for(let e=0;e<t.rank;e++)u.push([o[e],a[e]-o[e]-l[e]]);return{x:()=>mT(t,u)}}},tk={kernelName:Yy,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:i}=n,s=Vw(t,r);return{logits:()=>i_(s,Vw(GS(s,[i],!0),r))}}},ek={kernelName:Hy,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Vw(t,IT(n))}}},nk=jb({batchToSpaceND_:function(t,e,n){const r=Gb(t,"x","batchToSpaceND"),i=e.reduce((t,e)=>t*e);Rm(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),Rm(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),Rm(r.shape[0]%i===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${i}`);const s={x:r},a={blockShape:e,crops:n};return Pb.runKernel(Fg,s,a)}}),rk={kernelName:Xy,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:i}=n;return{x:()=>nk(t,r,i)}}},ik={kernelName:Ky,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>mS(t,r)}}},sk=[sI,aI,oI,lI,uI,cI,hI,dI,pI,fI,mI,gI,yI,bI,wI,SI,TI,MI,EI,II,CI,kI,RI,AI,DI,FI,OI,UI,zI,BI,LC,VI,WI,GI,HI,jI,XI,qI,YI,JI,eC,nC,rC,iC,sC,aC,oC,lC,uC,hC,pC,pC,fC,gC,yC,vC,bC,wC,_C,SC,TC,MC,EC,IC,CC,kC,kC,AC,RC,DC,FC,PC,OC,$C,UC,zC,BC,VC,WC,HC,jC,qC,XC,YC,JC,QC,tk,ek,rk,rk,ik,ik,{kernelName:jy,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Bw(t,Vw(Ww(Ow(n,"float32")),2))}}},{kernelName:nv,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=qw(2);return{a:()=>Vw(t,Vw(i,i_(n,r))),b:()=>Vw(t,Vw(i,i_(r,n)))}}},{kernelName:rv,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Vw(t,Vw(Ow(n,"float32"),2))}}},{kernelName:bv,gradFunc:t=>({x:()=>Hw(t)})},{kernelName:uv,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=u_(n.shape,r.shape);return{a:()=>{let e=t;const r=l_(n.shape,i);return r.length>0&&(e=GS(e,r)),aS(e,n.shape)},b:()=>{let e=t;const n=l_(r.shape,i);return n.length>0&&(e=GS(e,n)),aS(uT(e),r.shape)}}}},{kernelName:qy,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,i=r.shape.slice(),{axis:s}=n;Bm(s,r.shape).forEach(t=>{i[t]=1});const a=aS(t,i),o=Vw(a,pT(r.shape,"float32"));return{x:()=>o}}},{kernelName:cv,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Bw(t,Gw(KC(n)))}}},{kernelName:hv,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Vw(i_(qw(1),Gw(n)),t)}}},{kernelName:dv,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:i}=n;return{x:()=>{let e=Hw(r);if(1===r.rank)for(let n=0;n<i[0];++n)e=Uw(e,CT(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<i[0];++n)for(let s=0;s<i[1];++s)e=Uw(e,CT(t,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<i[0];++n)for(let s=0;s<i[1];++s)for(let a=0;a<i[2];++a)e=Uw(e,CT(t,[n*r.shape[0],s*r.shape[1],a*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<i[0];++n)for(let s=0;s<i[1];++s)for(let a=0;a<i[2];++a)for(let o=0;o<i[3];++o)e=Uw(e,CT(t,[n*r.shape[0],s*r.shape[1],a*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},{kernelName:mv,gradFunc:(t,e,n)=>{const r=n,{perm:i}=r,s=JS(i);return{x:()=>jT(t,s)}}},{kernelName:xv,gradFunc:(t,e,n)=>{const r=n,{axis:i}=r;return{value:()=>OT(t,i)}}},{kernelName:yv,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=c_(e,Hw(e)),r=OS(t,n);let i=US(e,qw(0,"int32"));const s=r.rank-i.rank;for(let t=0;t<s;++t)i=DS(i,t+1);i=eT(i,pT(r.shape,"bool"));const a=Hw(r);return WT(i,r,a)}(t,n)}}},{kernelName:vv,gradFunc:t=>({x:()=>Hw(t)})}];for(const t of sk)Dv(t);gb().prototype.abs=function(){return this.throwIfDisposed(),a_(this)};const ak=jb({acos_:function(t){const e={x:Gb(t,"x","acos")};return Pb.runKernel(xg,e)}});gb().prototype.acos=function(){return this.throwIfDisposed(),ak(this)};const ok=jb({acosh_:function(t){const e={x:Gb(t,"x","acosh")};return Pb.runKernel(yg,e)}});gb().prototype.acosh=function(){return this.throwIfDisposed(),ok(this)},gb().prototype.add=function(t){return this.throwIfDisposed(),Uw(this,t)},gb().prototype.all=function(t,e){return this.throwIfDisposed(),V_(this,t,e)},gb().prototype.any=function(t,e){return this.throwIfDisposed(),W_(this,t,e)},gb().prototype.argMax=function(t){return this.throwIfDisposed(),G_(this,t)};const lk=jb({argMin_:function(t,e=0){const n={x:Gb(t,"x","argMin")},r={axis:e};return Pb.runKernel(Tg,n,r)}});gb().prototype.argMin=function(t){return this.throwIfDisposed(),lk(this,t)},gb().prototype.asScalar=function(){return this.throwIfDisposed(),Rm(1===this.size,()=>"The array must have only 1 element."),aS(this,[])},gb().prototype.asType=function(t){return this.throwIfDisposed(),Ow(this,t)},gb().prototype.as1D=function(){return this.throwIfDisposed(),aS(this,[this.size])},gb().prototype.as2D=function(t,e){return this.throwIfDisposed(),aS(this,[t,e])},gb().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),aS(this,[t,e,n])},gb().prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),aS(this,[t,e,n,r])},gb().prototype.as5D=function(t,e,n,r,i){return this.throwIfDisposed(),aS(this,[t,e,n,r,i])};const uk=jb({asin_:function(t){const e={x:Gb(t,"x","asin")};return Pb.runKernel(Mg,e)}});gb().prototype.asin=function(){return this.throwIfDisposed(),uk(this)};const ck=jb({asinh_:function(t){const e={x:Gb(t,"x","asinh")};return Pb.runKernel(Eg,e)}});gb().prototype.asinh=function(){return this.throwIfDisposed(),ck(this)};const hk=jb({atan_:function(t){const e={x:Gb(t,"x","atan")};return Pb.runKernel(Ig,e)}});gb().prototype.atan=function(){return this.throwIfDisposed(),hk(this)};const dk=jb({atan2_:function(t,e){let n=Gb(t,"a","atan2"),r=Gb(e,"b","atan2");[n,r]=Cb(n,r);const i={a:n,b:r};return Pb.runKernel(kg,i)}});gb().prototype.atan2=function(t){return this.throwIfDisposed(),dk(this,t)};const pk=jb({atanh_:function(t){const e={x:Gb(t,"x","atanh")};return Pb.runKernel(Cg,e)}});gb().prototype.atanh=function(){return this.throwIfDisposed(),pk(this)},gb().prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),oS(this,t,e,n,r)},gb().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),nk(this,t,e)},gb().prototype.batchNorm=function(t,e,n,r,i){return this.throwIfDisposed(),uS(this,t,e,n,r,i)},gb().prototype.broadcastTo=function(t){return this.throwIfDisposed(),pS(this,t)},gb().prototype.cast=function(t){return this.throwIfDisposed(),Ow(this,t)};const fk=jb({ceil_:function(t){const e={x:Gb(t,"x","ceil","float32")};return Pb.runKernel(zg,e)}});gb().prototype.ceil=function(){return this.throwIfDisposed(),fk(this)},gb().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),fS(this,t,e)},gb().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof mb&&(t=[t]),mS([this,...t],e)},gb().prototype.conv1d=function(t,e,n,r,i,s){return this.throwIfDisposed(),wS(this,t,e,n,r,i,s)},gb().prototype.conv2dTranspose=function(t,e,n,r,i){return this.throwIfDisposed(),SS(this,t,e,n,r,i)},gb().prototype.conv2d=function(t,e,n,r,i,s){return this.throwIfDisposed(),bS(this,t,e,n,r,i,s)},gb().prototype.cos=function(){return this.throwIfDisposed(),KC(this)},gb().prototype.cosh=function(){return this.throwIfDisposed(),ZC(this)},gb().prototype.cumprod=function(t,e,n){return this.throwIfDisposed(),NC(this,t,e,n)},gb().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),$I(this,t,e,n)};const mk=jb({depthToSpace_:function(t,e,n="NHWC"){const r=Gb(t,"x","depthToSpace","float32"),i="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],a="NHWC"===n?r.shape[3]:r.shape[1];Rm(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),Rm(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${e}  for depthToSpace with input shape\n    ${r.shape}`),Rm(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e} for depthToSpace with input shape\n        ${r.shape}`),Rm(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`);const o={x:r},l={blockSize:e,dataFormat:n};return Pb.runKernel(rx,o,l)}});gb().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),mk(this,t,e)},gb().prototype.depthwiseConv2d=function(t,e,n,r,i,s){return this.throwIfDisposed(),CS(this,t,e,n,r,i,s)};const gk=jb({dilation2d_:function(t,e,n,r,i=[1,1],s="NHWC"){const a=Gb(t,"x","dilation2d"),o=Gb(e,"filter","dilation2d");Rm(3===a.rank||4===a.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),Rm(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),Rm("NHWC"===s,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=a,u=!1;3===a.rank&&(l=aS(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0),Rm(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);const c={x:l,filter:o},h={strides:n,pad:r,dilations:i},d=Pb.runKernel(lx,c,h);return u?aS(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});gb().prototype.dilation2d=function(t,e,n,r,i){return this.throwIfDisposed(),gk(this,t,e,n,r,i)};const xk=jb({divNoNan_:function(t,e){let n=Gb(t,"a","div"),r=Gb(e,"b","div");[n,r]=Cb(n,r);const i=Bw(n,r),s=Hw(i),a=AS(r,s);return WT(a,s,i)}});gb().prototype.divNoNan=function(t){return this.throwIfDisposed(),xk(this,t)},gb().prototype.div=function(t){return this.throwIfDisposed(),Bw(this,t)};const yk=jb({dot_:function(t,e){const n=Gb(t,"t1","dot"),r=Gb(e,"t2","dot");Rm(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const i=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(Rm(i===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${i} and ${s}.`),1===n.rank&&1===r.rank){const t=aS(n,[1,-1]),e=aS(r,[-1,1]),i=nT(t,e);return aS(i,[])}if(1===n.rank&&2===r.rank){const t=aS(n,[1,-1]),e=aS(r,[r.shape[0],r.shape[1]]),i=nT(t,e);return aS(i,[i.size])}if(2===n.rank&&1===r.rank){const t=aS(r,[-1,1]),e=nT(n,t);return aS(e,[e.size])}{const t=aS(r,[r.shape[0],r.shape[1]]);return nT(n,t)}}});gb().prototype.dot=function(t){return this.throwIfDisposed(),yk(this,t)},gb().prototype.elu=function(){return this.throwIfDisposed(),kS(this)},gb().prototype.equal=function(t){return this.throwIfDisposed(),AS(this,t)},gb().prototype.erf=function(){return this.throwIfDisposed(),RS(this)};const vk=jb({euclideanNorm_:function(t,e=null,n=!1){return $M(t,"euclidean",e,n)}});gb().prototype.euclideanNorm=function(t,e){return this.throwIfDisposed(),vk(this,t,e)},gb().prototype.exp=function(){return this.throwIfDisposed(),NS(this)},gb().prototype.expandDims=function(t){return this.throwIfDisposed(),DS(this,t)};const bk=jb({expm1_:function(t){const e={x:Gb(t,"x","expm1")};return Pb.runKernel(vx,e)}});gb().prototype.expm1=function(){return this.throwIfDisposed(),bk(this)},gb().prototype.fft=function(){return this.throwIfDisposed(),XT(this)},gb().prototype.flatten=function(){return this.throwIfDisposed(),aS(this,[this.size])},gb().prototype.floor=function(){return this.throwIfDisposed(),PS(this)},gb().prototype.floorDiv=function(t){return this.throwIfDisposed(),zw(this,t)},gb().prototype.gather=function(t,e,n){return this.throwIfDisposed(),OS(this,t,e,n)},gb().prototype.greaterEqual=function(t){return this.throwIfDisposed(),US(this,t)},gb().prototype.greater=function(t){return this.throwIfDisposed(),$S(this,t)},gb().prototype.ifft=function(){return this.throwIfDisposed(),YT(this)},gb().prototype.irfft=function(){return this.throwIfDisposed(),ZT(this)};const wk=jb({isFinite_:function(t){const e={x:Gb(t,"x","isFinite")};return Pb.runKernel(Dx,e)}});gb().prototype.isFinite=function(){return this.throwIfDisposed(),wk(this)};const _k=jb({isInf_:function(t){const e={x:Gb(t,"x","isInf")};return Pb.runKernel(Lx,e)}});gb().prototype.isInf=function(){return this.throwIfDisposed(),_k(this)};const Sk=jb({isNaN_:function(t){const e={x:Gb(t,"x","isNaN")};return Pb.runKernel(Fx,e)}});gb().prototype.isNaN=function(){return this.throwIfDisposed(),Sk(this)},gb().prototype.leakyRelu=function(t){return this.throwIfDisposed(),zS(this,t)},gb().prototype.lessEqual=function(t){return this.throwIfDisposed(),RM(this,t)},gb().prototype.less=function(t){return this.throwIfDisposed(),FM(this,t)};const Tk=jb({localResponseNormalization_:function(t,e=5,n=1,r=1,i=.5){const s=Gb(t,"x","localResponseNormalization");Rm(4===s.rank||3===s.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`),Rm(Pm(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=s,o=!1;3===s.rank&&(o=!0,a=aS(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const l={x:a},u={depthRadius:e,bias:n,alpha:r,beta:i},c=Pb.runKernel(Hx,l,u);return o?aS(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});gb().prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Tk(this,t,e,n,r)};const Mk=jb({logSigmoid_:function(t){const e=Gb(t,"x","logSigmoid");return jw(t=>({value:uT(LT(uT(t))),gradFunc:e=>Vw(e,IT(uT(t)))}))(e)}});gb().prototype.logSigmoid=function(){return this.throwIfDisposed(),Mk(this)},gb().prototype.logSoftmax=function(t){return this.throwIfDisposed(),HS(this,t)},gb().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),tT(this,t,e)},gb().prototype.log=function(){return this.throwIfDisposed(),BS(this)},gb().prototype.log1p=function(){return this.throwIfDisposed(),VS(this)},gb().prototype.logicalAnd=function(t){return this.throwIfDisposed(),eT(this,t)},gb().prototype.logicalNot=function(){return this.throwIfDisposed(),GC(this)};const Ek=jb({logicalOr_:function(t,e){const n=Gb(t,"a","logicalOr","bool"),r=Gb(e,"b","logicalOr","bool");u_(n.shape,r.shape);const i={a:n,b:r};return Pb.runKernel(Gx,i)}});gb().prototype.logicalOr=function(t){return this.throwIfDisposed(),Ek(this,t)};const Ik=jb({logicalXor_:function(t,e){const n=Gb(t,"a","logicalXor","bool"),r=Gb(e,"b","logicalXor","bool");return u_(n.shape,r.shape),eT(Ek(t,e),GC(eT(t,e)))}});gb().prototype.logicalXor=function(t){return this.throwIfDisposed(),Ik(this,t)},gb().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),nT(this,t,e,n)},gb().prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),rT(this,t,e,n,r)},gb().prototype.max=function(t,e){return this.throwIfDisposed(),WS(this,t,e)},gb().prototype.maximum=function(t){return this.throwIfDisposed(),c_(this,t)},gb().prototype.mean=function(t,e){return this.throwIfDisposed(),sT(this,t,e)},gb().prototype.min=function(t,e){return this.throwIfDisposed(),aT(this,t,e)},gb().prototype.minimum=function(t){return this.throwIfDisposed(),oT(this,t)};const Ck=jb({mirrorPad_:function(t,e,n){Rm("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=Gb(t,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Rm(e.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`);const i="reflect"===n?1:0;for(let t=0;t<r.rank;t++)Rm(2===e[t].length,()=>"Invalid number of paddings. Must be length of 2 each."),Rm(e[t][0]>=0&&e[t][0]<=r.shape[t]-i&&e[t][1]>=0&&e[t][1]<=r.shape[t]-i,()=>`Padding in dimension ${t} cannot be greater than or equal to ${r.shape[t]-i} or less than 0 for input of shape ${r.shape}`);const s={paddings:e,mode:n},a={x:r};return Pb.runKernel(ry,a,s)}});gb().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Ck(this,t,e)};const kk=jb({mod_:function(t,e){let n=Gb(t,"a","mod"),r=Gb(e,"b","mod");[n,r]=Cb(n,r);const i={a:n,b:r};return Pb.runKernel(iy,i)}});gb().prototype.mod=function(t){return this.throwIfDisposed(),kk(this,t)},gb().prototype.mul=function(t){return this.throwIfDisposed(),Vw(this,t)},gb().prototype.neg=function(){return this.throwIfDisposed(),uT(this)},gb().prototype.norm=function(t,e,n){return this.throwIfDisposed(),$M(this,t,e,n)},gb().prototype.notEqual=function(t){return this.throwIfDisposed(),cT(this,t)},gb().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),hT(this,t,e,n)},gb().prototype.onesLike=function(){return this.throwIfDisposed(),fT(this)},gb().prototype.pad=function(t,e){return this.throwIfDisposed(),mT(this,t,e)};const Ak=jb({pool_:function(t,e,n,r,i,s,a){null==i&&(i=[1,1]),null==s&&(s=1),0===r&&(r="valid");const o=Gb(t,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=aS(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Rm(nS(s,i),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${i}'`);const c=j_(l.shape,e,s,i,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(t,e){const n=t.map((t,n)=>t+(t-1)*(e[n]-1)).map(t=>t-1),r=n.map(t=>Math.floor(t/2)),i=n.map((t,e)=>t-r[e]);return n.map((t,e)=>[r[e],i[e]])}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(t,e,n){const r=n.map(t=>t[0]),i=n.map(t=>t[1]),s=t.concat(r,i),a=e.map((t,e)=>(t-s[e]%t)%t),o=i.map((t,e)=>t+a[e]);return[e.map((t,e)=>[r[e],o[e]]),e.map((t,e)=>[0,a[e]])]}([c.inHeight,c.inWidth],h,d),g=p?r:"valid",x=p?l:_I(l,h,f),y=("avg"===n?()=>oS(x,e,s,g,a):()=>rT(x,e,s,g,a))(),v=p?y:nk(y,h,m);return u?aS(v,[v.shape[1],v.shape[2],v.shape[3]]):v}});gb().prototype.pool=function(t,e,n,r,i,s){return this.throwIfDisposed(),Ak(this,t,e,n,r,i,s)},gb().prototype.pow=function(t){return this.throwIfDisposed(),r_(this,t)},gb().prototype.prelu=function(t){return this.throwIfDisposed(),gT(this,t)};const Rk=jb({prod_:function(t,e=null,n=!1){let r=Gb(t,"x","prod");"bool"===r.dtype&&(r=Ow(r,"int32"));const i={x:r},s={axis:e,keepDims:n};return Pb.runKernel(yy,i,s)}});gb().prototype.prod=function(t,e){return this.throwIfDisposed(),Rk(this,t,e)};const Nk=jb({reciprocal_:function(t){const e={x:Gb(t,"x","reciprocal")};return Pb.runKernel(Ty,e)}});gb().prototype.reciprocal=function(){return this.throwIfDisposed(),Nk(this)},gb().prototype.relu=function(){return this.throwIfDisposed(),ST(this)},gb().prototype.relu6=function(){return this.throwIfDisposed(),QT(this)},gb().prototype.reshapeAs=function(t){return this.throwIfDisposed(),aS(this,t.shape)},gb().prototype.reshape=function(t){return this.throwIfDisposed(),aS(this,t)},gb().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),CM(this,t,e,n)},gb().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),kM(this,t,e,n)},gb().prototype.reverse=function(t){return this.throwIfDisposed(),TT(this,t)},gb().prototype.rfft=function(){return this.throwIfDisposed(),KT(this)},gb().prototype.round=function(){return this.throwIfDisposed(),NM(this)},gb().prototype.rsqrt=function(){return this.throwIfDisposed(),KI(this)},gb().prototype.selu=function(){return this.throwIfDisposed(),MT(this)},gb().prototype.separableConv2d=function(t,e,n,r,i,s){return this.throwIfDisposed(),ET(this,t,e,n,r,i,s)},gb().prototype.sigmoid=function(){return this.throwIfDisposed(),IT(this)};const Dk=jb({sign_:function(t){const e={x:Gb(t,"x","sign")};return Pb.runKernel(Wy,e)}});gb().prototype.sign=function(){return this.throwIfDisposed(),Dk(this)},gb().prototype.sin=function(){return this.throwIfDisposed(),LI(this)},gb().prototype.sinh=function(){return this.throwIfDisposed(),PI(this)},gb().prototype.slice=function(t,e){return this.throwIfDisposed(),CT(this,t,e)},gb().prototype.softmax=function(t){return this.throwIfDisposed(),DT(this,t)},gb().prototype.softplus=function(){return this.throwIfDisposed(),LT(this)},gb().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),_I(this,t,e)},gb().prototype.split=function(t,e){return this.throwIfDisposed(),FT(this,t,e)},gb().prototype.sqrt=function(){return this.throwIfDisposed(),Ww(this)},gb().prototype.square=function(){return this.throwIfDisposed(),Gw(this)},gb().prototype.squaredDifference=function(t){return this.throwIfDisposed(),WM(this,t)},gb().prototype.squeeze=function(t){return this.throwIfDisposed(),PT(this,t)},gb().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof mb?[this,t]:[this,...t];return OT(n,e)},gb().prototype.step=function(t){return this.throwIfDisposed(),tM(this,t)};const Lk=jb({stridedSlice_:function(t,e,n,r,i=0,s=0,a=0,o=0,l=0){const u={x:Gb(t,"x","stridedSlice","string_or_numeric")},c={begin:e,end:n,strides:r,beginMask:i,endMask:s,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return Pb.runKernel(sv,u,c)}});gb().prototype.stridedSlice=function(t,e,n,r,i,s,a,o){return this.throwIfDisposed(),Lk(this,t,e,n,r,i,s,a,o)},gb().prototype.sub=function(t){return this.throwIfDisposed(),i_(this,t)},gb().prototype.sum=function(t,e){return this.throwIfDisposed(),GS(this,t,e)};const Fk=jb({tan_:function(t){const e={x:Gb(t,"x","tan","float32")};return Pb.runKernel(cv,e)}});gb().prototype.tan=function(){return this.throwIfDisposed(),Fk(this)},gb().prototype.tanh=function(){return this.throwIfDisposed(),$T(this)},gb().prototype.tile=function(t){return this.throwIfDisposed(),LS(this,t)},gb().prototype.toBool=function(){return this.throwIfDisposed(),Ow(this,"bool")},gb().prototype.toFloat=function(){return this.throwIfDisposed(),Ow(this,"float32")},gb().prototype.toInt=function(){return this.throwIfDisposed(),Ow(this,"int32")};const Pk=jb({topk_:function(t,e=1,n=!0){const r=Gb(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${e}`);const s={x:r},a={k:e,sorted:n},[o,l]=Pb.runKernel(pv,s,a);return{values:o,indices:l}}});gb().prototype.topk=function(t,e){return this.throwIfDisposed(),Pk(this,t,e)},gb().prototype.transpose=function(t){return this.throwIfDisposed(),jT(this,t)};const Ok=jb({unique_:function(t,e=0){const n=Gb(t,"x","unique","string_or_numeric");Rm(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},i={axis:e},[s,a]=Pb.runKernel(gv,r,i);return{values:s,indices:a}}});gb().prototype.unique=function(t){return this.throwIfDisposed(),Ok(this,t)},gb().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),ZI(this,t,e)},gb().prototype.unstack=function(t){return this.throwIfDisposed(),VT(this,t)},gb().prototype.where=function(t,e){return this.throwIfDisposed(),WT(t,this,e)},gb().prototype.zerosLike=function(){return this.throwIfDisposed(),Hw(this)};class $k extends Error{constructor(t){super(t),Object.setPrototypeOf(this,$k.prototype)}}class Uk extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Uk.prototype)}}class zk extends Error{constructor(t){super(t),Object.setPrototypeOf(this,zk.prototype)}}class Bk extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Bk.prototype)}}class Vk extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Vk.prototype)}}Error;class Wk{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const t=this.cache.keys().next().value;this.cache.delete(t)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const t=this.cache.keys().next().value;this.cache.delete(t)}this.maxEntries=t}}function Gk(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function Hk(t,e){if(!t)throw new Vk(e)}function jk(t,e){let n=0;for(const r of t)r===e&&n++;return n}function qk(t){return 1===t.length?t[0]:t}function Xk(t){return Array.isArray(t)?t:[t]}function Kk(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Yk(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let Zk={};function Jk(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function Qk(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach(t=>Qk(t));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?Qk(e):t[n]=e.value)}}}function tA(t,e={},n={},r="object",i=!1){if("string"==typeof t){const i=t;let s;if(i in n)s=n[i];else if(i in Zk)s=Zk[i];else if(s=e[i],null==s)throw new zk(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=t;if(null==s.className||null==s.config)throw new zk(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const a=s.className;let o,l;if(a in n?[o,l]=n[a]:a in Zk?[o,l]=Zk.className:a in e&&([o,l]=e[a]),null==o)throw new zk(`Unknown ${r}: ${a}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const e of Object.keys(Zk))t[e]=Zk[e];for(const e of Object.keys(n))t[e]=n[e];s.config.customObjects=t;const e=Object.assign({},Zk);for(const t of Object.keys(n))Zk[t]=n[t];Qk(s.config);const r=l(o,s.config,n,i);return Zk=Object.assign({},e),r}{const t=Object.assign({},Zk);for(const t of Object.keys(n))Zk[t]=n[t];const e=new o(s.config);return Zk=Object.assign({},t),e}}}function eA(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function nA(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function rA(t){if(null==t)throw new zk(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function iA(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new zk(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function sA(t,e,n=0,r=1/0){return Hk(n>=0),Hk(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every(t=>typeof t===e)}function aA(t,e){Array.isArray(t)?(Rm(t.length>0,()=>`${e} is unexpectedly an empty array.`),t.forEach((t,n)=>aA(t,`element ${n+1} of ${e}`))):Rm(Number.isInteger(t)&&t>0,()=>`Expected ${e} to be a positive integer, but got ${oA(t)}.`)}function oA(t){return null===t?"null":Array.isArray(t)?"["+t.map(t=>oA(t)).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function lA(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}let uA=0;function cA(){return uA++}const hA={};function dA(t=""){return t in hA||(hA[t]=0),hA[t]+=1,t+hA[t].toString()}const pA=["channelsFirst","channelsLast"],fA=["nearest","bilinear"],mA=["valid","same","causal"],gA=["max","avg"],xA=["sum","mul","concat","ave"],yA=new Map;function vA(t){iA(pA,"DataFormat",t)}function bA(t){iA(mA,"PaddingMode",t)}function wA(t){iA(gA,"PoolMode",t)}const _A=[];function SA(t,e){_A.push(t);try{const t=e();return _A.pop(),t}catch(t){throw _A.pop(),t}}function TA(t){if(!IA(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===_A.length?"":_A.join("/")+"/")+t}function MA(t){if(!IA(t))throw new Error("Not a valid tensor name: '"+t+"'");yA.has(t)||yA.set(t,0);const e=yA.get(t);if(yA.set(t,yA.get(t)+1),e>0){const n=`${t}_${e}`;return yA.set(n,1),n}return t}const EA=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function IA(t){return!!t.match(EA)}function CA(t){return t===parseInt(t.toString(),10)}function kA(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let i=e;i<n;++i)r*=t[i];return r}function AA(t){if(0===t.length)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const r=t[n];r<e&&(e=r)}return e}function RA(t){if(0===t.length)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const r=t[n];r>e&&(e=r)}return e}function NA(t,e){if(e<t)throw new zk(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}let DA;function LA(){return null==DA&&(DA=rw().epsilon()),DA}function FA(t,e){return Ow(t,e)}function PA(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),aS(t,n)}function OA(t,e,n){return Qb(()=>{switch(t.rank){case 1:return kT(t,e,n);case 2:return AT(t,[e,0],[n,t.shape[1]]);case 3:return RT(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return NT(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return CT(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return CT(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new zk(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}})}function $A(t,e,n){return Qb(()=>{switch(t.rank){case 1:return kT(t,e,n);case 2:return AT(t,[0,e],[t.shape[0],n]);case 3:return RT(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return NT(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new zk(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function UA(t,e,n,r){return Qb(()=>{switch(t.rank){case 1:return kT(t,e,n);case 2:switch(r){case 1:return OA(t,e,n);case 2:return $A(t,e,n);default:throw new zk(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return OA(t,e,n);case 2:return RT(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return $A(t,e,n);default:throw new zk(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return OA(t,e,n);case 2:return NT(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return NT(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return $A(t,e,n);default:throw new zk(`The axis is not within the rank of the tensor ${r}`)}default:throw new zk(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function zA(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),mS(t,e)}function BA(t,e){switch(t.rank){case 1:return gS([t,e]);case 2:return xS([t,e],0);case 3:return yS([t,e],0);case 4:return vS([t,e],0);default:throw new zk(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function VA(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new zk(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return LS(t,e)}function WA(t,e=0,n=1,r,i){return bT(t,e,n,r,i)}function GA(t,e,n,r){if(t.rank<2||e.rank<2)throw new Bk(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new Bk(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank)return lM({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?qA(t.rank,r,"channelsLast"):null,activation:n});{const i=t.shape.slice(),s=i.pop();t=aS(t,[-1,s]);const a=e.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:e.rank},(t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n);e=aS(jT(e,c),[l,-1]);const h=[...i,...u];return aS(lM({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?qA(t.rank,r,"channelsLast"):null,activation:n}),h)}}function HA(t,e,n){return Qb(()=>(e=Array.isArray(e)?UT(e,"int32"):Ow(e,"int32"),OS(t,e,n)))}function jA(t){return Vw(t,t)}function qA(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new zk(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===r.length?aS(e,[1,r[0],1,1,1]):aS(e,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?aS(e,[1,1,1,1,r[0]]):aS(e,[1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?aS(e,[1,r[0],1,1]):aS(e,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?aS(e,[1,1,1,r[0]]):aS(e,[1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?aS(e,[1,r[0],1]):aS(e,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?aS(e,[1,1,r[0]]):aS(e,[1].concat(r))}else if(t<3)return e;throw new zk(`Unsupported input rank by biasAdd: ${e.rank}`)}function XA(t,e,n){return Qb(()=>(null==n&&(n="channelsLast"),vA(n),Uw(t,qA(t.rank,e,n))))}function KA(t,e,n,r){return Qb(()=>qT(t,e,n,r))}function YA(t,e,n=!1){return n?t():e()}const ZA=["fanIn","fanOut","fanAvg"],JA=["normal","uniform","truncatedNormal"];class QA extends Yw{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class tR extends QA{apply(t,e){return dT(t,e)}}tR.className="Zeros",Jw(tR);class eR extends QA{apply(t,e){return pT(t,e)}}eR.className="Ones",Jw(eR);class nR extends QA{constructor(t){if(super(),"object"!=typeof t)throw new zk(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new zk(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return Qb(()=>Vw(qw(this.value),pT(t,e)))}getConfig(){return{value:this.value}}}nR.className="Constant",Jw(nR);class rR extends QA{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return wT(t,this.minval,this.maxval,e,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}rR.className="RandomUniform",Jw(rR);class iR extends QA{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Bk(`randomNormal does not support dType ${e}.`);return WA(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}iR.className="RandomNormal",Jw(iR);class sR extends QA{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Bk(`truncatedNormal does not support dType ${e}.`);return BT(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}sR.className="TruncatedNormal",Jw(sR);class aR extends QA{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Qb(()=>{if(2!==t.length||t[0]!==t[1])throw new zk("Identity matrix initializer can only be used for 2D square matrices.");return Vw(this.gain,FS(t[0]))})}getConfig(){return{gain:this.gain}}}aR.className="Identity",Jw(aR);class oR extends QA{constructor(t){if(super(),t.scale<0)throw new zk(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,iA(ZA,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){iA(JA,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(vA(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=kA(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=kA(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=kA(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],i=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,i):s/=Math.max(1,(r+i)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Bk(`${this.getClassName()} does not support dType ${e}.`);return BT(t,0,n,e,this.seed)}{const n=Math.sqrt(3*s);return wT(t,-n,n,e,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}oR.className="VarianceScaling",Jw(oR);class lR extends oR{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return oR.className}}lR.className="GlorotUniform",Jw(lR);class uR extends oR{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return oR.className}}uR.className="GlorotNormal",Jw(uR);class cR extends oR{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return oR.className}}cR.className="HeNormal",Jw(cR);class hR extends oR{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return oR.className}}hR.className="HeUniform",Jw(hR);class dR extends oR{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return oR.className}}dR.className="LeCunNormal",Jw(dR);class pR extends oR{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return oR.className}}pR.className="LeCunUniform",Jw(pR);class fR extends QA{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,e){return Qb(()=>{if(t.length<2)throw new Bk("Shape must be at least 2D.");if("int32"!==e&&"float32"!==e&&void 0!==e)throw new TypeError(`Unsupported data type ${e}.`);const n=Lm(t.slice(0,-1)),r=t[t.length-1],i=n*r;i>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${i}) elements: Slowness may result.`);const s=WA([Math.max(r,n),Math.min(r,n)],0,1,e,this.seed),a=HM.qr(s,!1);let o=a[0];const l=a[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return o=Vw(o,l.sign()),n<r&&(o=o.transpose()),Vw(qw(this.gain),o.reshape(t))})}getConfig(){return{gain:this.gain,seed:this.seed}}}fR.className="Orthogonal",Jw(fR);const mR={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function gR(t,e={}){return tA(t,Zw.getMap().classNameMap,e,"initializer")}function xR(t){return Jk(t)}function yR(t){if("string"==typeof t){const e=t in mR?mR[t]:t;if("GlorotNormal"===e)return new uR;if("GlorotUniform"===e)return new lR;if("HeNormal"===e)return new cR;if("HeUniform"===e)return new hR;if("LeCunNormal"===e)return new dR;if("LeCunUniform"===e)return new pR;{const t={};return t.className=e,t.config={},gR(t)}}return t instanceof QA?t:gR(t)}function vR(t){return Array.isArray(t)&&Array.isArray(t[0])}function bR(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function wR(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new zk(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function _R(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new zk(`Expected exactly 1 Shape; got ${t.length}`)}return t}function SR(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce((t,e)=>t*e);return e}const TR="Variable";class MR{constructor(t,e="float32",n=TR,r=!0,i=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=cA(),n=null==n?TR:n,this.originalName=TA(n),this.name=MA(this.originalName),this.trainable_=r,this.constraint=i,this.val=function(t,e=!0,n,r){return Pb.makeVariable(t,e,n,r)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function ER(t){return t.map(t=>t.read())}function IR(t){t.forEach(t=>{t[0].write(t[1])})}class CR{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class kR{constructor(t,e,n,r,i,s,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=i,this.outputTensorIndex=a,this.id=cA(),null!=s&&(this.originalName=TA(s),this.name=MA(this.originalName)),this.rank=e.length}}let AR=0;class RR{constructor(t,e){this.callArgs=e,this.id=AR++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let NR=0;class DR extends Yw{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=NR++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=Kk(t)+"_"+dA(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Uk(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new zk(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return qk(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return qk(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new $k(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new $k(`Layer ${this.name} is not connected, no input to return.`);return qk(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new $k(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new $k(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return qk(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){const e=Xk(t);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=Xk(this.inputSpec);if(e.length!==n.length)throw new zk(`Layer ${this.name} expects ${n.length} inputs, but it received ${e.length} input tensors. Input received: ${t}`);for(let t=0;t<e.length;t++){const r=e[t],i=n[t];if(null==i)continue;const s=r.rank;if(null!=i.ndim&&s!==i.ndim)throw new zk(`Input ${t} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${s}`);if(null!=i.maxNDim&&s>i.maxNDim)throw new zk(`Input ${t} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${s}`);if(null!=i.minNDim&&s<i.minNDim)throw new zk(`Input ${t} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${s}.`);if(null!=i.dtype&&r.dtype!==i.dtype)throw new zk(`Input ${t} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${r.dtype}.`);if(i.axes){const e=r.shape;for(const n in i.axes){const r=Number(n),s=i.axes[n],a=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(a))throw new zk(`Input ${t} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=i.shape)for(let e=0;e<i.shape.length;++e){const n=i.shape[e],s=r.shape[e];if(null!=n&&null!=s&&n!==s)throw new zk(`Input ${t} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=Xk(t),r=function(t){let e=!0;for(const n of Xk(t))if(!(n instanceof kR)){e=!1;break}return e}(t),i=function(t){let e=!0;for(const n of Xk(t))if(n instanceof kR){e=!1;break}return e}(t);if(r===i)throw new zk("Arguments to apply() must be all SymbolicTensors or all Tensors");return SA(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of Xk(t))e.push(n.shape);this.build(qk(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&i&&(this._refCount=1)}if(this.assertInputCompatibility(t),i){let r=this.call(t,e);this.supportsMasking&&this.setMaskMetadata(t,r);const i=Xk(r),s=[];for(let t of i)-1!==n.indexOf(t)&&(t=t.clone()),s.push(t);if(r=qk(s),null!=this.activityRegularizer)throw new Bk("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=Xk(t);const e=[];for(const n of t)e.push(n.shape);return qk(e)}(t),r=this.computeOutputShape(n);let i;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),i=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new kR(s,n,this,Xk(t),e,this.name,r)):new kR(s,r,this,Xk(t),e,this.name),this.addInboundNode(t,i,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new Bk("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new $k(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new $k(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Uk(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return SR(this.weights)}build(t){this.built=!0}getWeights(t=!1){return ER(t?this.trainableWeights:this.weights)}setWeights(t){Qb(()=>{const e=this.weights;if(e.length!==t.length)throw new zk(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=ER(e);for(let i=0;i<r.length;++i){const s=r[i],a=e[i],o=t[i];if(!Fm(s.shape,o.shape))throw new zk(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}IR(n)})}addWeight(t,e,n,r,i,s,a,o){if(-1!==this._addedWeightNames.indexOf(t))throw new zk(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():yR("zeros"));const l=r.apply(e,n),u=new MR(l,n,t,s,a);return l.dispose(),null!=i&&this.addLoss(()=>i.apply(u.read())),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=Xk(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}setMaskMetadata(t,e,n){if(!this.supportsMasking)return;const r=this.computeMask(t,n),i=Xk(e),s=Xk(r);if(i.length!==s.length)throw new Error(`${this.name} outputs ${i.length} tensors but ${i.length} masks for those tensors`);for(let t=0;t<i.length;t++)i[t].kerasMask=s[t]}addInboundNode(t,e,n,r,i,s,a=null){const o=Xk(t);e=Xk(e),n=Xk(n),r=Xk(r),i=bR(i),s=bR(s);const l=[],u=[],c=[];for(const t of o)l.push(t.sourceLayer),u.push(t.nodeIndex),c.push(t.tensorIndex);new RR({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:i,outputShapes:s},a);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0===--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function LR(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=LR(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}class FR extends DR{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:dA("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new zk("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new zk("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new zk("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new kR(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new RR({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new zk(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}FR.className="InputLayer",Jw(FR);class PR{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof PR)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new zk(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Ow(e,t.dtype)}catch(n){throw new zk(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof kR){if(null==this.id2Value[t.id])throw new zk(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new zk(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof kR){if(null==this.id2Value[t.id])throw new zk(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new zk(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&tw(this.id2Mask)}}const OR=new Wk,$R=new Wk;function UR(t,e,n,r){const i=null!=n&&n.training,s=Array.isArray(t),a=s?t:[t],o=a.map(t=>t.name),l=[],u=e.names();for(const t of o)-1!==u.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+e.names().sort().join(",");let h,d=OR.get(c);if(null==d){const t=function(t,e){Rm(null!=t&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===t.length){const i=BR(t[0],e);n=i.sorted,r=i.recipientMap}else{const i=new Set;for(const s of t){const{sorted:t,recipientMap:a}=BR(s,e);for(const e of t)i.has(e.name)||(n.push(e),i.add(e.name));for(const t in a)null==r[t]&&(r[t]=new Set),a[t].forEach(e=>r[t].add(e))}}return{sorted:n,recipientCounts:zR(r)}}(a,e);d=t.sorted,h=t.recipientCounts,OR.put(c,d),$R.put(c,h)}h={},i||Object.assign(h,$R.get(c));const p=new PR(e);for(let t=0;t<d.length;++t){if(null!=r){const t=Jb().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const s=d[t],a=s.sourceLayer;if(a instanceof FR)continue;const u=[],c=[],f=[];let m=!1;for(const t of s.inputs){const n=p.getValue(t),r=p.getMask(t);u.push(n),c.push(r),null!=r&&(m=!0),i||(h[t.name]--,0!==h[t.name]||e.hasKey(t)||-1!==o.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=Xk(a.apply(u,n));let x=null;a.supportsMasking&&(x=a.computeMask(u,c));const y=VR(s),v=Array.isArray(y)?y:[y];for(let t=0;t<v.length;++t){p.hasKey(v[t])||p.add(v[t],g[t],Array.isArray(x)?x[0]:x);const e=o.indexOf(v[t].name);-1!==e&&(l[e]=g[t])}i||tw(f)}return p.disposeMasks(),s?l:l[0]}function zR(t){const e={};for(const n in t)e[n]=t[n].size;return e}function BR(t,e){const n=new Set,r=[],i={};for(const t of e.names())n.add(t);const s=[],a=[];for(s.push(t);s.length>0;){const t=s[s.length-1];if(n.has(t.name)){s.pop();continue}const e=a[a.length-1]===s.length-1;if(0===t.inputs.length||e)s.pop(),r.push(t),n.add(t.name),e&&a.pop();else{a.push(s.length-1);for(const e of t.inputs)null==i[e.name]&&(i[e.name]=new Set),i[e.name].add(t.name),n.has(e.name)||s.push(e)}}return{sorted:r,recipientMap:i}}function VR(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}function WR(t,e){return Qb(()=>Ww(GS(Vw(t,t),e,!0)))}hg().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function(t){null!=OR&&OR.setMaxEntries(t),null!=$R&&$R.setMaxEntries(t)});class GR extends Yw{getConfig(){return{}}}class HR extends GR{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Qb(()=>{const e=WR(t,this.axis),n=fS(e,0,this.maxValue);return Vw(t,Bw(n,Uw(LA(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}HR.className="MaxNorm",Jw(HR);class jR extends GR{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Qb(()=>Bw(t,Uw(LA(),WR(t,this.axis))))}getConfig(){return{axis:this.axis}}}jR.className="UnitNorm",Jw(jR);class qR extends GR{apply(t){return ST(t)}}qR.className="NonNeg",Jw(qR);class XR extends GR{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Qb(()=>{const e=WR(t,this.axis),n=Uw(Vw(this.rate,fS(e,this.minValue,this.maxValue)),Vw(1-this.rate,e));return Vw(t,Bw(n,Uw(LA(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}XR.className="MinMaxNorm",Jw(XR);const KR={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function YR(t){return Jk(t)}function ZR(t,e={}){return tA(t,Zw.getMap().classNameMap,e,"constraint")}function JR(t){return null==t?null:"string"==typeof t?ZR({className:t in KR?KR[t]:t,config:{}}):t instanceof GR?t:ZR(t)}async function QR(t){if(null==t)return;const e=[],n=[],r=[];for(const i in t){const s=t[i];if("number"!=typeof s){const t=s;e.push(t.data()),n.push(i),r.push(t)}}if(e.length>0){const i=await Promise.all(e);for(let e=0;e<i.length;++e)t[n[e]]=i[e][0];tw(r)}}function tN(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var eN;!function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(eN||(eN={}));class nN{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class rN{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class iN extends nN{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const r=e[t];if("number"==typeof r)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+r*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const i=Qb(()=>Uw(this.totals[t],Vw(r,n)));this.totals[t]=i,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:Qb(()=>{const n=Vw(Bw(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),ew(e[t])}))}}class sN extends nN{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const i=this.history[r];for(let s=0;s<i.length;++s)if("number"!=typeof i[s]){const a=i[s];t.push(a.data()),e.push(r),n.push(s)}}const r=await Promise.all(t);for(let t=0;t<r.length;++t)this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=r[t][0]}}class aN extends nN{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||XM,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Xm(this.yieldEvery)&&(this.maybeWait=function(t,e,n){let r,i=null!=n?n():Jv();return(...s)=>{const a=null!=n?n():Jv();return a-i<e||(i=a,r=t(...s)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await QR(n),r.push(this.yield(t,e,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await QR(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await QR(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await QR(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await QR(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Xm(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await QR(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await QR(t),await this.trainEnd(t))}}function oN(t,e){return null==t&&(t={}),t instanceof nN?[t]:Array.isArray(t)&&t[0]instanceof nN?t:Xk(t).map(t=>new aN(t,e))}class lN{constructor(){}static registerCallbackConstructor(t,e){Rm(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),lN.checkForDuplicate(e),null==lN.constructors[t]&&(lN.constructors[t]=[]),lN.constructors[t].push(e)}static checkForDuplicate(t){for(const e in lN.constructors)lN.constructors[+e].forEach(e=>{if(e===t)throw new zk("Duplicate callback constructor.")})}static clear(){lN.constructors={}}static createCallbacks(t){const e=[];for(const n in lN.constructors){const r=+n;t>=r&&e.push(...lN.constructors[r])}return e.map(t=>new t)}}function uN(t,e,n,r,i,s,a,o,l){const u=new sN,c=[new iN,...lN.createCallbacks(e)];null!=t&&c.push(...t),c.push(u);const h=new rN(c);return h.setParams({epochs:n,initialEpoch:r,samples:i,steps:s,batchSize:a,verbose:e,doValidation:o,metrics:l}),{callbackList:h,history:u}}function cN(t,e={},n=!1){return tA(t,Zw.getMap().classNameMap,e,"layer",n)}function hN(t,e){return Qb(()=>{"float32"!==t.dtype&&(t=Ow(t,"float32"));const n=GS(jA(t),e,!0),r=e_(n.shape,LA()),i=Ww(c_(n,r));return Bw(t,i)})}function dN(t,e){return Qb(()=>sT(jA(i_(e,t)),-1))}function pN(t,e){return Qb(()=>sT(a_(i_(e,t)),-1))}function fN(t,e){return Qb(()=>{const n=i_(t,e),r=fS(a_(t),LA(),Number.MAX_VALUE),i=a_(Bw(n,r));return Vw(100,sT(i,-1))})}function mN(t,e,n=!1){return Qb(()=>{if(n)e=DT(e);else{const t=GS(e,e.shape.length-1,!0);e=Bw(e,t)}return e=fS(e,LA(),1-LA()),uT(GS(Vw(Ow(t,"float32"),BS(e)),e.shape.length-1))})}function gN(t,e,n=!1){return Qb(()=>{const r=Ow(PS(function(t){const e=[kA(t.shape)];return aS(t,e)}(t)),"int32"),i=(e=fS(e,LA(),1-LA())).shape;return mN(aS(hT(r,i[i.length-1]),i),e,n)})}function xN(t,e){return Qb(()=>{let n;return n=fS(e,LA(),1-LA()),n=BS(Bw(n,i_(1,n))),sT(function(t,e){if(!Fm(t.shape,e.shape))throw new zk(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Qb(()=>{const n=ST(e),r=uT(a_(e));return Uw(i_(n,Vw(e,t)),VS(NS(r)))})}(t,n),-1)})}function yN(t,e){return Qb(()=>{const n=hN(t,-1),r=hN(e,-1),i=Vw(n,r);return uT(GS(i,-1))})}lN.constructors={};const vN={meanSquaredError:dN,meanAbsoluteError:pN,meanAbsolutePercentageError:fN,meanSquaredLogarithmicError:function(t,e){return Qb(()=>{const n=fS(e,LA(),Number.MAX_VALUE),r=BS(Uw(1,n)),i=fS(t,LA(),Number.MAX_VALUE),s=BS(Uw(1,i));return sT(jA(i_(r,s)),-1)})},squaredHinge:function(t,e){return Qb(()=>{const n=c_(0,i_(1,Vw(t,e)));return sT(jA(n),-1)})},hinge:function(t,e){return Qb(()=>{const n=c_(0,i_(1,Vw(t,e)));return sT(n,-1)})},categoricalHinge:function(t,e){return Qb(()=>{const n=GS(Vw(t,e),-1),r=WS(Vw(i_(1,t),e),-1);return c_(0,Uw(1,i_(r,n)))})},logcosh:function(t,e){return Qb(()=>{const n=Math.log(2),r=i_(e,t),i=i_(Uw(r,LT(Vw(-2,r))),n);return sT(i,-1)})},categoricalCrossentropy:mN,sparseCategoricalCrossentropy:gN,binaryCrossentropy:xN,kullbackLeiblerDivergence:function(t,e){return Qb(()=>{const n=fS(t,LA(),1),r=fS(e,LA(),1);return GS(Vw(t,BS(Bw(n,r))),-1)})},poisson:function(t,e){return Qb(()=>{const n=BS(Uw(LA(),e));return sT(i_(e,Vw(t,n)),-1)})},cosineProximity:yN};function bN(t){if("string"==typeof t){if(t in vN)return vN[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new zk(e)}return t}function wN(t,e){return Qb(()=>{const n=Vw(.5,fT(e)),r=FA($S(e,n),t.dtype);return sT(AS(t,r),-1)})}function _N(t,e){return Qb(()=>FA(AS(G_(t,-1),G_(e,-1)),"float32"))}function SN(t,e){return xN(t,e)}function TN(t,e){return t.rank===e.rank&&(t=PT(t,[t.rank-1])),(e=G_(e,-1)).dtype!==t.dtype&&(e=Ow(e,t.dtype)),Ow(AS(t,e),"float32")}const MN=mN,EN=gN,IN={binaryAccuracy:wN,categoricalAccuracy:_N,precision:function(t,e){return Qb(()=>{const n=function(t,e){return Qb(()=>Ow(GS(eT(AS(t,1),AS(e,1))),"float32"))}(t,e),r=function(t,e){return Qb(()=>Ow(GS(eT(AS(t,0),AS(e,1))),"float32"))}(t,e),i=Uw(n,r);return Ow(WT($S(i,0),Bw(n,i),0),"float32")})},categoricalCrossentropy:MN,sparseCategoricalCrossentropy:EN,mse:dN,MSE:dN,mae:pN,MAE:pN,mape:fN,MAPE:fN,cosine:yN};function CN(t){if("string"==typeof t&&t in IN)return IN[t];if("string"!=typeof t&&null!=t)return t;throw new zk(`Unknown metric ${t}`)}function kN(t){if(Hk(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(vN))if(vN[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(IN))if(IN[n]===t){e=n;break}return void 0!==e?e:t.name}}function AN(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!RN(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function RN(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!RN(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!RN(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function NN(t,e,n=console.log){let r="";for(let n=0;n<t.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=t[n],r=r.slice(0,e[n]),r+=" ".repeat(e[n]-r.length);n(r)}function DN(t,e,n){let r,i;try{i=t.inboundNodes.map(t=>JSON.stringify(t.inputShapes)).join(",")}catch(t){i="multiple"}try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}NN([`${t.name} (${t.getClassName()})`,i,r,t.countParams().toString()],e,n)}function LN(t,e,n,r){let i,s;try{s=t.inboundNodes.map(t=>JSON.stringify(t.inputShapes)).join(",")}catch(t){s="multiple"}try{i=JSON.stringify(t.outputShape)}catch(t){i="multiple"}const a=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,r=e.nodeIndices[t],i=e.tensorIndices[t];a.push(`${n}[${r}][${i}]`)}const o=t.name,l=t.getClassName(),u=0===a.length?"":a[0];NN([`${o} (${l})`,s,i,t.countParams().toString(),u],e,r);for(let t=1;t<a.length;++t)NN(["","","","",a[t]],e,r)}function FN(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function PN(t,e){if(null===t)return null;if("string"==typeof t)return Yk(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let i=0;i<r;++i){const r=t[i];FN(e,i,r)?n.push(r):n.push(PN(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=Yk(n);e[t]=PN(r,t)}}return e}}function ON(t,e){if(null==t)return null;if("string"==typeof t)return Kk(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let i=0;i<r;++i){const r=t[i];FN(e,i,r)?n.push(r):n.push(ON(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];e[Kk(n)]="name"!==n&&"className"!==n||"string"!=typeof r?ON(r,n):r}return e}}const $N="4.22.0";class UN extends DR{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=dA(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],nA(this.inputs).length!==this.inputs.length)throw new zk(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(t=>t.name)}`);nA(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(t=>t.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;Hk(0===n,"input layer has >1 nodes"),Hk(0===r,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof FR))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map(t=>t.shape),this.internalOutputShapes=this.outputs.map(t=>t.shape);const e={},n={},r={},i={},s={},a=[],o=(t,e,n,r,i,l)=>{null!=r&&null!=i&&null!=l||(r=t.sourceLayer,i=t.nodeIndex,l=t.tensorIndex);const u=r.inboundNodes[i];if(-1!==n.indexOf(u))throw new Uk(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(UN.nodeKey(r,i)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let t=0;t<c;t++){const r=u.inputTensors[t],i=u.inboundLayers[t],s=u.nodeIndices[t],a=u.tensorIndices[t];o(r,e,n,i,s,a)}for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const t of this.outputs)o(t,l,u);const c=a.slice().reverse();for(const t of c){n[t.id]=t,t.id in e||(e[t.id]=0);let s=e[t.id];const a=null==r[t.outboundLayer.id]?0:r[t.outboundLayer.id];s=Math.max(s,a),r[t.outboundLayer.id]=s,i[t.outboundLayer.id]=t.outboundLayer,e[t.id]=s;for(let r=0;r<t.inboundLayers.length;r++){const i=t.inboundLayers[r],a=t.nodeIndices[r],o=i.inboundNodes[a],l=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(s+1,l),n[o.id]=o}}const h={};for(const t in e){const r=e[t];r in h||(h[r]=[]),h[r].push(n[t])}const d={};for(const t in r){const e=r[t];e in d||(d[e]=[]),d[e].push(i[t])}let p=Object.keys(d).map(t=>parseInt(t,10)).sort(eA);this.layers=[];for(const t of p){const e=d[t];e.sort((t,e)=>{const n=s[t.id],r=s[e.id];return n<r?-1:n>r?1:0});for(const t of e)t instanceof UN&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map(t=>parseInt(t,10)).sort(eA);const f=this.inputs.slice(),m=[];for(const t of p)for(const e of h[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Uk(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map(t=>t.name);for(const t of g){const e=g.filter(e=>e===t).length;if(1!==e)throw new Uk(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new RR({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(t=>null),outputMasks:this.outputs.map(t=>null),inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs.map(t=>t.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(e=>e.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new zk("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;const i=(t=>{const e=Object.keys(t);if(0===e.length)return!1;const n=e[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(t);i&&this.parseWeights(t);for(const t of this.layers)for(const[e,s]of t.weights.entries()){const t=i?`${s.name.split("/").slice(0,-1).join("/")+"/"}${e}`:s.originalName;if(null!=n[t])throw new zk(`Duplicate weight name: ${t}`);n[t]=s,r++}const s=[];for(const r in t){let i=r;if(null==n[r]){const t=r.split("/");i=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[i])s.push([n[i],t[r]]);else if(e)throw new zk(`Provided weight data has no target variable: ${r}`);delete n[i]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new zk(`${t.length} of ${r} weights are not set: ${t}`)}IR(s)}parseWeights(t){for(const e in Object.keys(t)){const n=e.split("/"),r=["vars","layer_checkpoint_dependencies"],i=n.map(t=>t.startsWith("_")?t.slice(1):t).filter(t=>!r.includes(t)).join("/");i!==e&&(t[i]=t[e],delete t[e])}}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${$N}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=ON(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Qb(()=>{t=Xk(t);const n=new PR;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return UR(this.outputs,n,e)})}computeMask(t,e){return Qb(()=>{let n;return t=Xk(t),n=null==e?Gk(null,t.length):Xk(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=bR(t);if(e.length!==this.inputLayers.length)throw new zk(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const r=this.inputLayers[t],i=e[t];n[r.name+"_0_0"]=i}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(eA);if(r.length>1)for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map(t=>t.id).indexOf(e.id))continue;const r=[];for(let e=0;e<t.inboundLayers.length;e++){const i=t.inboundLayers[e],s=t.nodeIndices[e],a=t.tensorIndices[e],o=n[`${i.name}_${s}_${a}`];r.push(o)}const i=bR(e.computeOutputShape(qk(r))),s=e.inboundNodes.indexOf(t);for(let t=0;t<i.length;t++)n[`${e.name}_${s}_${t}`]=i[t]}}const i=[],s=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],r=this.outputLayersTensorIndices[t],i=`${e.name}_${n}_${r}`;s.push(i)}for(let t=0;t<s.length;t++){const e=s[t];Hk(e in n),i.push(n[e])}return qk(i)}runInternalGraph(t,e){null==e&&(e=Gk(null,t.length));const n={};for(let r=0;r<this.inputs.length;++r){const i=this.inputs[r],s=t[r],a=e[r];n[i.id]=[s,a]}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(eA);for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,i=t.outputTensors,s=new Array;for(const t of r)t.id in n&&s.push(n[t.id]);if(s.length===r.length){let r,a,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===s.length){const[t,n]=s[0];null==u.mask&&(u.mask=n),o=Xk(e.call(t,u)),l=Xk(e.computeMask(t,n)),r=[t],a=[n]}else r=s.map(t=>t[0]),a=s.map(t=>t[1]),null==u.mask&&(u.mask=a),o=Xk(e.call(r,u)),l=Xk(e.computeMask(r,a));if(e.activityRegularizer)throw new Bk("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<i.length;++t){const e=i[t],r=o[t],s=l[t];n[e.id]=[r,s]}}}}const i=[],s=[],a=[];for(const t of this.outputs){Hk(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,r]=n[t.id];a.push(e.shape),i.push(e),s.push(r)}return[i,s,a]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof UN?1:0;for(let r=0;r<t.inboundNodes.length;r++){const i=UN.nodeKey(t,r);this.containerNodes.has(i)&&(e[i]=n,n+=1)}}return e}getLayer(t,e){if(null!=e)return this.findLayer(e);if(null==t)throw new zk("Provide either a layer name or layer index");if("number"==typeof t)return this.findLayer(t);for(const e of this.layers)if(e.name===t)return e;throw new zk(`No such layer: ${t}`)}findLayer(t){if(this.layers.length<=t)throw new zk(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}calculateLosses(){return Qb(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=UN.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const r=t.getClassName(),i=t.getConfig(),s=[];for(let n=0;n<t.inboundNodes.length;n++){const r=t.inboundNodes[n],i=UN.nodeKey(t,n);let a={};if(this.containerNodes.has(i)){if(r.callArgs)try{JSON.stringify(r.callArgs),a=r.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(r.inboundLayers.length>0){const t=[];for(let n=0;n<r.inboundLayers.length;n++){const i=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let l=e[UN.nodeKey(i,s)];null==l&&(l=0),t.push([i.name,l,o,a])}s.push(t)}}}const a={};a.name=t.name,a.className=r,a.config=i,a.inboundNodes=s,n.push(a)}t.layers=n;const r=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],i=this.inputLayersNodeIndices[t],s=UN.nodeKey(n,i);if(!this.containerNodes.has(s))continue;let a=e[s];null==a&&(a=0);const o=this.inputLayersTensorIndices[t];r.push([n.name,a,o])}t.inputLayers=r;const i=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],r=this.outputLayersNodeIndices[t],s=UN.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let a=e[s];null==a&&(a=0);const o=this.outputLayersTensorIndices[t];i.push([n.name,a,o])}return t.outputLayers=i,t}static fromConfig(t,e,n={},r=!1){const i={},s={};function a(t,e){t.name in s?s[t.name].push(e):s[t.name]=[e]}function o(t,e){const n=[];let r;for(const s of e){const o=s[0],l=s[1],u=s[2];if(r=null==s[3]?{}:s[3],!(o in i))return void a(t,e);const c=i[o];if(c.inboundNodes.length<=l)return void a(t,e);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&t.apply(qk(n),r)}function l(t){const n=t.name,s=cN(t,null!=e.customObjects?e.customObjects:{});s.setFastWeightInitDuringBuild(r),i[n]=s,t.inboundNodes.forEach(t=>{if(!(t instanceof Array))throw new zk(`Corrupted configuration, expected array for nodeData: ${t}`);a(s,t)})}const u=e.name,c=e.layers;for(const t of c)l(t);for(;!rA(s);)for(const t of c){const e=i[t.name];if(e.name in s){const t=s[e.name];delete s[e.name];for(const n of t)o(e,n)}}const h=[],d=[],p=e.inputLayers;for(const t of p){const e=t[0],n=t[1],r=t[2];Hk(e in i);const s=i[e].inboundNodes[n].outputTensors;h.push(s[r])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],r=t[2];Hk(e in i);const s=i[e].inboundNodes[n].outputTensors;d.push(s[r])}return new t({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new zk("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Qb(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}function zN(t,e){return function(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>null);if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach(e=>{e in t?n.push(t[e]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function BN(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Qb(()=>{if(1===t.shape.length)return $w(t);if(2===t.shape.length){if(t.shape[1]>1)return G_(t,1);if(1===t.shape[1])return aS(t,[t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await e.data());tw(e);const i=[];return r.forEach(t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);i.push(n[t])}),UT(i,"float32")}return null}function VN(t,e){return Vw(t,e)}function WN(t,e){let n,r;const i=e;n=i.xs,r=i.ys,Rm(null!=n&&null!=r,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const s=GN("input",t.inputNames,n),a=GN("output",t.outputNames,r),o=s[0].shape[0];Rm(s.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`),Rm(a.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`);for(let e=0;e<s.length;e++)Rm(s[e].shape[0]===o,()=>`Batch size mismatch: input ${t.inputNames[e]} has ${s[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`);for(let e=0;e<a.length;e++)Rm(a[e].shape[0]===o,()=>`Batch size mismatch: output ${t.outputNames[e]} has ${a[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`);return{xs:s,ys:a}}function GN(t,e,n){if(n instanceof mb)return[n];if(Array.isArray(n))return Rm(n.length===e.length,()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`),n;{const r=[];for(const i of e){if(null==n[i])throw new zk(`The feature data generated by the dataset lacks the required ${t} key '${i}'.`);r.push(n[i])}return r}}function HN(t){return"function"==typeof t.iterator}function jN(t){Rm(t>0&&Number.isInteger(t),()=>`batchSize is required to be a positive integer, but got ${t}`)}function qN(t,e,n){return null==t?[null]:Array.isArray(t)?t.map(t=>OA(t,e,n-e)):OA(t,e,n-e)}function XN(t,e){return Qb(()=>null==t?null:Array.isArray(t)?t.map(t=>XN(t,e)):HA(t,"int32"===e.dtype?e:Ow(e,"int32")))}function KN(t,e){const n=[];let r=0,i=null;for(;r<t;)i=r+e,i>=t&&(i=t),n.push([r,i]),r=i;return n}function YN(t){const e=[];t instanceof mb&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(PA(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function ZN(t,e){if(null==t)return;const n=[];if(e instanceof mb)n.push(e.id);else if(Array.isArray(e))e.forEach(t=>n.push(t.id));else if(null!=e)for(const t in e){const r=e[t];n.push(r.id)}const r=[];if(t instanceof mb)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach(t=>{-1===n.indexOf(t.id)&&r.push(t)});else if(null!=t)for(const e in t){const i=t[e];-1===n.indexOf(i.id)&&r.push(i)}r.forEach(t=>{t.isDisposed||t.dispose()})}function JN(t){return Array.isArray(t)}function QN(t){return!function(t){return t instanceof mb}(t)&&!JN(t)}function tD(t,e,n,r=!0,i=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(JN(t)&&t.length>0)e=!0;else if(QN(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new zk(`Error when checking model ${i} expected no data, but got ${t}`)}return[]}if(null==t)return e.map(t=>null);let s;if(QN(t)){s=[];for(const n of e){if(null==t[n])throw new zk(`No data provided for "${n}". Need data for each key in: ${e}`);s.push(t[n])}}else if(JN(t)){if(t.length!==e.length)throw new zk(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);s=t}else{if(e.length>1)throw new zk(`The model ${i} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);s=[t]}if(s=YN(s),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=s[t];if(a.shape.length!==n[t].length)throw new zk(`Error when checking ${i}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${a.shape}`);for(let e=0;e<n[t].length;++e){if(0===e&&!r)continue;const s=a.shape[e],o=n[t][e];if(null!=o&&o>=0&&s!==o)throw new zk(`${i} expected a batch of elements where each example has shape [${n[t].slice(1,n[t].length)}] (i.e.,tensor shape [*,${n[t].slice(1,n[t].length)}]) but the ${i} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return s}function eD(t,e,n,r=!0,i=""){let s;if(Array.isArray(t)){if(t.length!==e.length)throw new zk(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);s=t}else{if(e.length>1)throw new zk(`The model expects ${e.length} ${i} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);s=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=s[t];if(a.shape.length!==n[t].length)throw new zk(`Error when checking ${i}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let s=0;s<n[t].length;++s){if(0===s&&!r)continue;const o=a.shape[s],l=n[t][s];if(null!=l&&l!==o)throw new zk(`Error when checking ${i}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}class nD extends UN{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new zk("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,r=console.log){const i=function(t){let e=!0;const n=[],r=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}r.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const i of n.inboundNodes)if(-1!==r.indexOf(i)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),s=["Layer (type)","Input Shape","Output shape","Param #"];let a;if(i?(e=e||90,n=n||[.32,.61,.89,1]):(e=e||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(t=>Math.floor(e*t))),!i){s.push("Receives inputs"),a=[];for(const e in t.nodesByDepth)a.push(...t.nodesByDepth[e])}r("_".repeat(e)),NN(s,n,r),r("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)i?DN(o[t],n,r):LN(o[t],n,a,r),r((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;return e=null!=t.collectedTrainableWeights?SR(t.collectedTrainableWeights):SR(t.trainableWeights),e}(t),u=SR(t.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>jM.adagrad(.01),Adadelta:()=>jM.adadelta(1,.95,LA()),Adam:()=>jM.adam(.001,.9,.999,LA()),Adamax:()=>jM.adamax(.002,.9,.999,LA(),0),RMSProp:()=>jM.rmsprop(.001,.9,0,LA()),SGD:()=>jM.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new zk(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Qw))throw new zk("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new zk(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map(t=>bN(t))}else{const n=bN(t.loss);this.outputs.forEach(t=>{e.push(n)})}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new zk(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(bN(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],SA("loss",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}});const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>[]);let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map(t=>n);{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),i=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};SA("metric",()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,r,s;for(const a of e){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const e=this.internalOutputShapes[t];let i;1===e[e.length-1]||this.lossFunctions[t]===xN?-1!==["accuracy","acc"].indexOf(a)?r=wN:-1!==["crossentropy","ce"].indexOf(a)&&(r=SN):this.lossFunctions[t]===gN?-1!==["accuracy","acc"].indexOf(a)?r=TN:-1!==["crossentropy","ce"].indexOf(a)&&(r=EN):-1!==["accuracy","acc"].indexOf(a)?r=_N:-1!==["crossentropy","ce"].indexOf(a)&&(r=MN),-1!==["accuracy","acc"].indexOf(a)?i="acc":-1!==["crossentropy","ce"].indexOf(a)&&(i="ce"),s=r,n=""+i}else{const t=CN(a);s=t,n=""+kN(a)}let e;SA(n,()=>{e=s}),i(t,n,e)}})(r[t])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;jN(r);const i=this.standardizeUserDataXY(t,e,!0,r);try{const t=i[0].concat(i[1]);this.makeTestFunction();const e=this.testFunction;return qk(this.testLoop(e,t,r,n.verbose,n.steps))}finally{ZN(i[0],t),ZN(i[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,i=t.testFunction;let s=[];if(n.verbose>0)throw new Bk("Verbose mode is not implemented yet.");Rm(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const a="function"==typeof e.next?e:await e.iterator();let o=0,l=0;for(;!r||l<n.batches;){const e=await a.next();if(s=Qb(()=>{if(e.value){const{xs:n,ys:r}=WN(t,e.value),a=n.concat(r),u=Qb(()=>i(a));if(tw(a),0===l)for(let t=0;t<u.length;++t)s.push(qw(0));const c=a[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=s[t];s[t]=Qb(()=>Uw(s[t],Vw(c,e))),l>0&&tw(n)}tw(u),o+=c,++l}return s}),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<s.length;++t){const e=s[t];s[t]=Bw(s[t],o),tw(e)}return qk(s)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let i;if(null!=n){if(i=null,null!=e)throw new zk(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new zk(`Either the input data should have a defined shape, or ${r} shoud be specified.`);i=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return i}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new zk("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],i=this.retrieveSymbolicTensors(r),s=new PR;if(t instanceof mb&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new zk(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)s.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new zk(`No value is provided for the model's input ${e.name}`);s.add(e,n)}const a=UR(i,s);return n?a:a[0]}retrieveSymbolicTensors(t){const e=Gk(null,t.length);let n=t.length;for(const r of this.layers){const i=Array.isArray(r.output)?r.output:[r.output],s=i.map(t=>t.name);for(let r=0;r<t.length;++r){const a=s.indexOf(t[r]);if(-1!==a&&(e[r]=i[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach((e,r)=>{null==e&&n.push(t[r])}),new zk(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return Qb(()=>{const r=this.checkNumSamples(t);if(n)throw new Bk("Verbose predictLoop() is not implemented yet.");const i=KN(r,e),s=this.outputs.map(t=>[]);for(let e=0;e<i.length;++e)Qb(()=>{const n=i[e][0],r=i[e][1],s=qN(t,n,r),a=[];if(Array.isArray(s))for(let t=0;t<s.length;++t)a.push({key:this.inputs[t],value:s[t]});else a.push({key:this.inputs[0],value:s});const o=new PR(a);return UR(this.outputs,o)}).forEach((t,e)=>s[e].push(t));return qk(s.map(t=>mS(t,0)))})}predict(t,e={}){const n=YN(t);eD(n,this.inputNames,this.feedInputShapes,!1);try{const t=null==e.batchSize?32:e.batchSize;return jN(t),this.predictLoop(n,t)}finally{ZN(n,t)}}predictOnBatch(t){eD(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new Uk("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===gN?i.push(e.slice(0,e.length-1).concat([1])):i.push(e)}if(function(t,e){const n=nA(t.map(t=>t.shape[0]));n.sort();const r=nA(e.map(t=>t.shape[0]));if(r.sort(),n.length>1)throw new zk(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(t=>t.shape))}`);if(r.length>1)throw new zk(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(t=>t.shape))}`);if(n.length>0&&r.length>0&&!Fm(n,r))throw new zk(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(t=tD(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=tD(e,this.feedOutputNames,i,!1,"target")),function(t,e,n){const r=[dN,xN,mN];for(let i=0;i<t.length;++i){const s=t[i],a=e[i],o=n[i];if(null!=a){if(a===mN&&1===s.shape[s.shape.length-1])throw new zk(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(a)){const t=s.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],i=e[n];if(null!=i&&r!==i)throw new zk(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!==0)throw new zk(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,i=!0,s){const[a,o]=this.standardizeUserDataXY(t,e,i,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const t=zN(r,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await BN(o[e],null,t[e]))}return[a,o,l]}testLoop(t,e,n,r=0,i){return Qb(()=>{const s=this.checkNumSamples(e,n,i,"steps"),a=[];if(r>0)throw new Bk("Verbose mode is not implemented yet.");if(null!=i)throw new Bk("steps mode in testLoop() is not implemented yet");{const r=KN(s,n),i=UT(NA(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],l=OA(i,s,o-s),u=XN(e,l),c=t(u);if(0===n)for(let t=0;t<c.length;++t)a.push(qw(0));for(let t=0;t<c.length;++t){const e=c[t];a[t]=Uw(a[t],Vw(o-s,e))}}for(let t=0;t<a.length;++t)a[t]=Bw(a[t],s)}return a})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let i=r;jk(t,r)>1&&(i+=`_${jk(t.slice(0,n),r)}`),e.push(i)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],a=this.collectedTrainableWeights.map(t=>t.read());return[this.optimizer_.minimize(()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const a=new PR(t),o=UR(this.outputs,a,{training:!0});let l;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(r[t],o[t]);null!=i[t]&&(n=VN(n,i[t]));const s=sT(n);e.push(s),l=0===t?n:Uw(l,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],i=this.metricsTensors[t][1];n=sT(e(r[i],o[i]))}ew(n),s.push(n)}return l=sT(l),this.calculateLosses().forEach(t=>{l=Uw(l,t)}),l},!0,a)].concat(s)}}makeTestFunction(){this.testFunction=t=>Qb(()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),i=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let t=0;t<this.inputs.length;++t)s.push({key:this.inputs[t],value:r[t]});const a=new PR(s),o=UR(this.outputs,a);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],s=sT(r(i[t],o[t]));n=0===t?s:Uw(n,s),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],s=sT(n(i[r],o[r]));e.push(s)}return e})}async fit(t,e,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,i,s,a,o,l,u,c,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;jN(d);const p=!1,f=await this.standardizeUserData(t,e,n.sampleWeight,n.classWeight,p,d);r=f[0],i=f[1],h=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new Bk("validationData including sample weights is not supported yet."):new zk(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];const t=!0,e=await this.standardizeUserData(o,l,null,null,t,d);u=e[0],c=e[1],m=u.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const t=Math.floor(r[0].shape[0]*(1-n.validationSplit)),e=r[0].shape[0];u=qN(r,t,e),s=r,r=qN(r,0,t),c=qN(i,t,e),a=i,i=qN(i,0,t),m=u.concat(c)}else null!=n.validationSteps&&(g=!0);const x=r.concat(i).concat(h);this.checkTrainableWeightsConsistency();const y=this.makeTrainFunction(),v=this.getDedupedMetricsNames();let b,w;g?(this.makeTestFunction(),b=this.testFunction,w=v.slice().concat(v.map(t=>"val_"+t))):(b=null,m=[],w=v.slice());const _=oN(n.callbacks,n.yieldEvery);return await this.fitLoop(y,x,v,d,n.epochs,n.verbose,_,b,m,n.shuffle,w,n.initialEpoch,null,null)}finally{this.isTraining=!1,ZN(r,t),ZN(i,e),ZN(s,t),ZN(a,e),ZN(u,o),ZN(c,l),null!=h&&tw(h)}}async fitLoop(t,e,n,r,i,s,a,o,l,u,c,h,d,p){null==r&&(r=32),null==i&&(i=1),null==u&&(u=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=l&&(f=!0),null!=p&&(f=!0,null==d))throw new zk("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(e,r,d,"steps_per_epoch");let g;null!=m&&(g=NA(0,m)),null==s&&(s=1);const{callbackList:x,history:y}=uN(a,s,i,h,m,d,r,f,c);x.setModel(this),this.history=y,await x.onTrainBegin(),this.stopTraining_=!1;for(let s=h;s<i;++s){await x.onEpochBegin(s);const i={};if(null!=d)throw new Bk("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new Bk("batch shuffling is not implemneted yet");u&&Im(g);const s=UT(g),a=KN(m,r);for(let u=0;u<a.length;++u){const c={};if(await x.onBatchBegin(u,c),Qb(()=>{const h=a[u][0],d=a[u][1],p=OA(s,h,d-h);c.batch=u,c.size=d-h;const m=XN(e,p),g=t(m);for(let t=0;t<n.length;++t){const e=n[t],r=g[t];c[e]=r,ew(r)}if(u===a.length-1&&f){const t=this.testLoop(o,l,r);for(let e=0;e<n.length;++e){const r=n[e],s=t[e];ew(s),i["val_"+r]=s}}}),await x.onBatchEnd(u,c),tN(c),this.stopTraining_)break}s.dispose()}if(await x.onEpochEnd(s,i),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,e){return async function(t,e,n){const r=null!=n.batchesPerEpoch;if(Rm(null!=t.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),Rm(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),Rm(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),Rm(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),Rm(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const i=null!=n.validationData;let s,a;if(i)if(HN(n.validationData))Rm(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const t=function(t){if(3===t.length)throw new Bk("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);s=t.xs,a=t.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=i?l.slice().concat(l.map(t=>"val_"+t)):l.slice();const c=oN(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=uN(c,h,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,i,u);d.setModel(t),t.history=p,await d.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await e.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(r||(m=await e.iterator());!r||c<n.batchesPerEpoch;){const e=await m.next();if(r&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:i}=WN(t,e.value),s={};s.batch=h,s.size=r[0].shape[0],await d.onBatchBegin(h,s);const a=[];if(null!=n.classWeight){const e=zN(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)a.push(await BN(i[t],null,e[t]))}const u=r.concat(i).concat(a),p=o(u);tw(u);for(let t=0;t<l.length;++t){const e=l[t],n=p[t];s[e]=n,ew(n)}await d.onBatchEnd(h,s),tN(s),h++,c++}if(r?c>=n.batchesPerEpoch:e.done){if(i){let e;e=HN(n.validationData)?Xk(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):Xk(t.evaluate(s,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],i=n[1],s=this.makeTrainFunction()(r.concat(i)),a=[];for(const t of s){const e=await t.data();a.push(e[0])}return tw(s),ZN(n[0],t),ZN(n[1],e),qk(a)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,i=this.getWeights(n);for(let t=0;t<r.length;++t)n&&!r[t].trainable||e.push({name:r[t].originalName,tensor:i[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=Jb().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Jb().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=Kk(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(t=>Kk(t))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=Kk(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Kk(kN(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Kk(kN(t)));{const t={};for(const e in this.metrics)t[e]=Kk(kN(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=cN(PN(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=Yk(t.loss);else if(Array.isArray(t.loss))n=t.loss.map(t=>Yk(t));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=Yk(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map(t=>Yk(t));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=Yk(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=(n=t,hw.getSaveHandlers(n));if(0===e.length)throw new zk(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new zk(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}var n;if(null==t.save)throw new zk("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await iw(this.getNamedWeights(e)),i={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${$N}`,convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){i.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:n}=await iw(await this.optimizer.getWeights(),t);r.specs.push(...n),r.data=(s=[r.data,e],Yb.join(s))}var s;if(null!=this.userDefinedMetadata){const t=!0;AN(this.userDefinedMetadata,this.name,t),i.userDefinedMetadata=this.userDefinedMetadata}return i.weightData=r.data,i.weightSpecs=r.specs,t.save(i)}setUserDefinedMetadata(t){AN(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}nD.className="Model",Jw(nD);class rD extends nD{}rD.className="Functional",Jw(rD);class iD extends nD{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:dA("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new zk(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof iD||t instanceof nD;let n;if(e){if(n=t,1!==n.outputs.length)throw new zk("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new zk("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new zk("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new zk("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new FR({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new zk(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new zk("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=LR(this.outputs[0])}this.inboundNodes=[],new RR({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Gk(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(_R(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new nD({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new Uk("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new Uk("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new Uk("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new Uk("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let i,s={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new zk("Legacy serialization format not supported yet.");i=e}else Rm(null!=e.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=e.layers,delete e.layers,s=e;const a=new t(s);if(!(a instanceof iD))throw new Bk(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const t of i){const e=cN(t,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),a.add(e)}return a}set stopTraining(t){if(null==this.model)throw new zk("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new zk("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}iD.className="Sequential",Jw(iD);class sD extends Yw{getConfig(){return{}}}class aD extends sD{apply(t,e=1){return function(t,e=1){if(1!==e)throw new Bk(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return kS(t)}(t,e)}}aD.className="elu",Jw(aD);class oD extends sD{apply(t){return MT(t)}}oD.className="selu",Jw(oD);class lD extends sD{apply(t){return ST(t)}}lD.className="relu",Jw(lD);class uD extends sD{apply(t){return Qb(()=>oT(6,ST(t)))}}uD.className="relu6",Jw(uD);class cD extends sD{apply(t){return t}}cD.className="linear",Jw(cD);class hD extends sD{apply(t){return IT(t)}}hD.className="sigmoid",Jw(hD);class dD extends sD{apply(t){return function(t){return Qb(()=>{const e=Uw(.5,Vw(.2,t));return fS(e,0,1)})}(t)}}dD.className="hardSigmoid",Jw(dD);class pD extends sD{apply(t){return LT(t)}}pD.className="softplus",Jw(pD);class fD extends sD{apply(t){return function(t){return Qb(()=>Bw(t,Uw(a_(t),1)))}(t)}}fD.className="softsign",Jw(fD);class mD extends sD{apply(t){return $T(t)}}mD.className="tanh",Jw(mD);class gD extends sD{apply(t,e=-1){return DT(t,e)}}gD.className="softmax",Jw(gD);class xD extends sD{apply(t,e=-1){return HS(t,e)}}xD.className="logSoftmax",Jw(xD);class yD extends sD{apply(t){return Qb(()=>Qb(()=>{const e=Math.sqrt(2),n=Vw(.5,Uw(1,RS(Bw(t,e))));return Vw(t,n)}))}}yD.className="gelu",Jw(yD);class vD extends sD{apply(t){return Qb(()=>Vw(.5,Vw(t,Uw(1,$T(Vw(Ww(Bw(2,Math.PI)),Uw(t,Vw(.044715,r_(t,3)))))))))}}vD.className="gelu_new",Jw(vD);class bD extends sD{apply(t){return Qb(()=>Vw(t,$T(LT(t))))}}bD.className="mish",Jw(bD);class wD extends sD{apply(t,e=1){return Qb(()=>Vw(IT(Vw(t,e)),t))}}function _D(t){return t.getClassName()}function SD(t,e={}){return tA(t,Zw.getMap().classNameMap,e,"activation")}function TD(t){if(null==t){return SD({className:"linear",config:{}})}if("string"==typeof t){const e={};return e.className=t,e.config={},SD(e)}return t instanceof sD?t:SD(t)}wD.className="swish",Jw(wD);class MD extends Yw{}class ED extends MD{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Qb(()=>{let e=dT([1]);return this.hasL1&&(e=Uw(e,GS(Vw(this.l1,a_(t))))),this.hasL2&&(e=Uw(e,GS(Vw(this.l2,jA(t))))),aS(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}ED.className="L1L2",Jw(ED);const ID={l1l2:"L1L2"};function CD(t){return Jk(t)}function kD(t,e={}){return tA(t,Zw.getMap().classNameMap,e,"regularizer")}function AD(t){return null==t?null:"string"==typeof t?kD({className:t in ID?ID[t]:t,config:{}}):t instanceof MD?t:kD(t)}class RD extends DR{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=wR(t);let n=ST(t);return null!=this.maxValue&&(n=fS(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}RD.className="ReLU",Jw(RD);class ND extends DR{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=wR(t);return zS(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}ND.className="LeakyReLU",Jw(ND);class DD extends DR{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=yR(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=AD(t.alphaRegularizer),this.alphaConstraint=JR(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new zk(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=_R(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new CR({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=wR(t),gT(t,this.alpha.read())}getConfig(){const t={alphaInitializer:xR(this.alphaInitializer),alphaRegularizer:CD(this.alphaRegularizer),alphaConstraint:YR(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}DD.className="PReLU",Jw(DD);class LD extends DR{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new Bk(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=wR(t);return kS(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}LD.className="ELU",Jw(LD);class FD extends DR{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=wR(t);return Vw(n,Ow($S(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}FD.className="ThresholdedReLU",Jw(FD);class PD extends DR{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new gD).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){return Qb(()=>{let n=wR(t);const r=e.mask;if(null!=r){const t=Vw(i_(pT(n.shape),Ow(r,n.dtype)),qw(-1e9));n=Uw(n,t)}return this.axis instanceof Array?this.axis.length>1?NS(i_(n,tT(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)})}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function OD(t,e,n){if("number"==typeof t)return Gk(t,e);if(t.length!==e)throw new zk(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let r=0;r<e;++r){const i=t[r];if(!CA(i))throw new zk(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${i}`)}return t}function $D(t,e,n,r,i=1){if(null==t)return t;let s;return s="same"===n?t:t-(e+(e-1)*(i-1))+1,Math.floor((s+r-1)/r)}function UD(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+RA([n-e,0]);else{if("same"!==r)throw new zk(`Unsupport padding mode: ${r}.`);t*=e}return t}function zD(t,e){return Qb(()=>(vA(e),"channelsFirst"===e?jT(t,[0,2,3,1]):t))}function BD(t,e){return Qb(()=>(vA(e),"channelsFirst"===e?jT(t,[0,2,3,4,1]):t))}function VD(t,e,n,r=[1,1],i="valid",s,a,o=null){return Qb(()=>{if(null==s&&(s="channelsLast"),vA(s),3!==t.rank&&4!==t.rank)throw new zk(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new zk(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=zD(t,s);if("causal"===i)throw new Bk("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=sM({x:l,filter:e,strides:r,pad:"same"===i?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=jT(l,[0,3,1,2])),l})}PD.className="Softmax",Jw(PD);class WD extends DR{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",WD.verifyArgs(e),this.rank=t,aA(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Bk(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=OD(e.kernelSize,t,"kernelSize"),this.strides=OD(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,bA(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,vA(this.dataFormat),this.activation=TD(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=yR(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=JR(e.biasConstraint),this.biasRegularizer=AD(e.biasRegularizer),this.activityRegularizer=AD(e.activityRegularizer),this.dilationRate=OD(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new zk(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new zk(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new zk(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(Hk("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!sA(t.kernelSize,"number",1,3))throw new zk(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:_D(this.activation),useBias:this.useBias,biasInitializer:xR(this.biasInitializer),biasRegularizer:CD(this.biasRegularizer),activityRegularizer:CD(this.activityRegularizer),biasConstraint:YR(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class GD extends WD{constructor(t,e){super(t,e),this.kernel=null,GD.verifyArgs(e),this.filters=e.filters,aA(this.filters,"filters"),this.kernelInitializer=yR(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=JR(e.kernelConstraint),this.kernelRegularizer=AD(e.kernelRegularizer)}build(t){t=_R(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new zk(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Qb(()=>{let e;t=wR(t);const n=null==this.bias?null:this.bias.read(),r=lA(this.activation.getClassName());if(null!=r&&2===this.rank)e=VD(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=function(t,e,n,r=1,i="valid",s,a=1){return Qb(()=>{if(null==s&&(s="channelsLast"),vA(s),3!==t.shape.length)throw new zk(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new zk(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new zk(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===s&&(t=jT(t,[0,2,1])),"causal"===i)throw new Bk("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=wS(t,e,r,"same"===i?"same":"valid","NWC",a);return null!=n&&(o=XA(o,n)),o})}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=VD(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Bk("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,r=[1,1,1],i="valid",s,a){return Qb(()=>{if(null==s&&(s="channelsLast"),vA(s),4!==t.rank&&5!==t.rank)throw new zk(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new zk(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=BD(t,s);if("causal"===i)throw new Bk("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=TS(o,e,r,"same"===i?"same":"valid","NDHWC",a),null!=n&&(o=XA(o,n)),"channelsFirst"===s&&(o=jT(o,[0,4,1,2,3])),o})}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e})}computeOutputShape(t){t=_R(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const r=$D(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(r)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:xR(this.kernelInitializer),kernelRegularizer:CD(this.kernelRegularizer),kernelConstraint:YR(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new zk(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class HD extends GD{constructor(t){super(2,t),HD.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!sA(t.kernelSize,"number",1,2))throw new zk(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}HD.className="Conv2D",Jw(HD);class jD extends GD{constructor(t){super(3,t),jD.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new zk(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}jD.className="Conv3D",Jw(jD);class qD extends HD{constructor(t){if(super(t),this.inputSpec=[new CR({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new zk(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=_R(t)).length)throw new zk("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new zk("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new CR({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return Qb(()=>{let e=wR(t);if(4!==e.shape.length)throw new zk(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let i,s;"channelsFirst"===this.dataFormat?(i=2,s=3):(i=1,s=2);const a=n[i],o=n[s],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,UD(a,c,l,this.padding),UD(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=jT(e,[0,2,3,1]));let p=SS(e,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=jT(p,[0,3,1,2])),null!=this.bias&&(p=XA(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p})}computeOutputShape(t){const e=(t=_R(t)).slice();let n,r,i;"channelsFirst"===this.dataFormat?(n=1,r=2,i=3):(n=3,r=1,i=2);const s=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[r]=UD(e[r],o,s,this.padding),e[i]=UD(e[i],l,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}qD.className="Conv2DTranspose",Jw(qD);class XD extends jD{constructor(t){if(super(t),this.inputSpec=[new CR({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new zk(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(5!==(t=_R(t)).length)throw new zk("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new zk("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new CR({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return Qb(()=>{let e=wR(t);if(5!==e.shape.length)throw new zk(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let i,s,a;"channelsFirst"===this.dataFormat?(a=2,i=3,s=4):(a=1,i=2,s=3);const o=n[a],l=n[i],u=n[s],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,UD(o,p,c,this.padding),UD(l,f,h,this.padding),UD(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=jT(e,[0,2,3,4,1]));let x=ES(e,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(x=jT(x,[0,4,1,2,3])),null!==this.bias&&(x=XA(x,this.bias.read(),this.dataFormat)),null!==this.activation&&(x=this.activation.apply(x)),x})}computeOutputShape(t){const e=(t=_R(t)).slice();let n,r,i,s;"channelsFirst"===this.dataFormat?(n=1,r=2,i=3,s=4):(n=4,r=1,i=2,s=3);const a=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return e[n]=this.filters,e[r]=UD(e[r],u,a,this.padding),e[i]=UD(e[i],c,o,this.padding),e[s]=UD(e[s],h,l,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}XD.className="Conv3DTranspose",Jw(XD);class KD extends GD{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new zk("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new zk("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new zk(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=yR(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=AD(e.depthwiseRegularizer),this.depthwiseConstraint=JR(e.depthwiseConstraint),this.pointwiseInitializer=yR(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=AD(e.pointwiseRegularizer),this.pointwiseConstraint=JR(e.pointwiseConstraint)}build(t){if((t=_R(t)).length<this.rank+2)throw new zk(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new zk(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),i=[];for(let t=0;t<this.rank;++t)i.push(1);i.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new CR({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Qb(()=>{let e;if(t=wR(t),1===this.rank)throw new Bk("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=jT(t,[0,2,3,1])),e=ET(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=XA(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=jT(e,[0,3,1,2])),e})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=xR(this.depthwiseInitializer),t.pointwiseInitializer=xR(this.pointwiseInitializer),t.depthwiseRegularizer=CD(this.depthwiseRegularizer),t.pointwiseRegularizer=CD(this.pointwiseRegularizer),t.depthwiseConstraint=YR(this.depthwiseConstraint),t.pointwiseConstraint=YR(this.pointwiseConstraint),t}}KD.className="SeparableConv";class YD extends KD{constructor(t){super(2,t)}}YD.className="SeparableConv2D",Jw(YD);class ZD extends GD{constructor(t){super(1,t),ZD.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!sA(t.kernelSize,"number",1,1))throw new zk(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}ZD.className="Conv1D",Jw(ZD);class JD extends DR{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Qb(()=>{if(t=wR(t),"channelsLast"===this.dataFormat){const e=UA(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return UA(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=UA(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return UA(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}JD.className="Cropping2D",Jw(JD);class QD extends DR{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,vA(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,iA(fA,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return Qb(()=>{let e=wR(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=jT(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],i="nearest"===this.interpolation?GM.resizeNearestNeighbor(e,[t,r]):GM.resizeBilinear(e,[t,r]);return jT(i,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?GM.resizeNearestNeighbor(e,[t,r]):GM.resizeBilinear(e,[t,r])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}QD.className="UpSampling2D",Jw(QD);class tL extends WD{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=yR(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=JR(t.depthwiseConstraint),this.depthwiseRegularizer=AD(t.depthwiseRegularizer)}build(t){if((t=_R(t)).length<4)throw new zk(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new zk(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Qb(()=>{let e=function(t,e,n=[1,1],r="valid",i,s){return Qb(()=>{null==i&&(i="channelsLast"),vA(i);let a=zD(t,i);if(4!==t.rank)throw new zk(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new zk(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=CS(a,e,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===i&&(a=jT(a,[0,3,1,2])),a})}(t=wR(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=XA(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e})}computeOutputShape(t){t=_R(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,i=$D(e,this.kernelSize[0],this.padding,this.strides[0]),s=$D(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,i,s]:[t[0],i,s,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=xR(this.depthwiseInitializer),t.depthwiseRegularizer=CD(this.depthwiseRegularizer),t.depthwiseConstraint=YR(this.depthwiseRegularizer),t}}function eL(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new zk("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function i(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=i(e),constants:n=i(n)}}function nL(t,e,n,r=!1,i,s,a=!1,o=!1){return Qb(()=>{const l=e.shape.length;if(l<3)throw new zk(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(NA(2,l));if(e=jT(e,u),null!=s)throw new Bk("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=i&&((i=Ow(Ow(i,"bool"),"float32")).rank===l-1&&(i=DS(i,-1)),i=jT(i,u)),r&&(e=TT(e,0),null!=i&&(i=TT(i,0)));const c=[];let h,d=n;const p=e.shape[0],f=VT(e);let m,g;null!=i&&(m=VT(i));for(let e=0;e<p;++e){const n=f[e],r=Qb(()=>t(n,d));if(null==i)h=r[0],d=r[1];else{const t=Qb(()=>{const t=m[e],n=i_(fT(t),t);return{output:Uw(Vw(r[0],t),Vw(d[0],n)),newStates:d.map((e,i)=>Uw(Vw(r[1][i],t),Vw(e,n)))}});h=t.output,d=t.newStates}o&&c.push(h)}return o&&(g=OT(c,1)),[h,g,d]})}tL.className="DepthwiseConv2D",Jw(tL);class rL extends DR{constructor(t){let e;if(super(t),null==t.cell)throw new zk("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new hL({cells:t.cell}):t.cell,null==e.stateSize)throw new zk("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new CR({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?NA(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(t=>null):this.states_}setStates(t){this.states_=t}computeOutputShape(t){vR(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return Qb(()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map(t=>null);return[t].concat(e)}return t})}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new Bk("Constants support is not implemented in RNN yet.");vR(t)&&(t=t[0]);const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new CR({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let i;if(this.cell.build(r),i=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!Fm(this.stateSpec.map(t=>t.shape[t.shape.length-1]),i))throw new zk(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(t=>new CR({shape:[null,t]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){Qb(()=>{if(!this.stateful)throw new $k("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new zk("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>dT([n,t])):this.states_=[dT([n,this.cell.stateSize])];else if(null==t)tw(this.states_),null!=this.keptStates&&(tw(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>dT([n,t])):this.states_[0]=dT([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new zk(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):tw(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,s=[n,i];if(!Fm(r.shape,s))throw new zk(`State ${e} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map(t=>ew(t.clone()))})}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const i=eL(t,n,r,this.numConstants);t=i.inputs,n=i.initialState,r=i.constants;let s=[],a=[];if(null!=n){e.initialState=n,s=s.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new CR({shape:t.shape}));a=a.concat(this.stateSpec)}if(null!=r&&(e.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof kR){const n=[t].concat(s),r=this.inputSpec.concat(a),i=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=i,o}return super.apply(t,e)}call(t,e){return Qb(()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let i=null==e?null:e.initialState;t=wR(t),null==i&&(i=this.stateful?this.states_:this.getInitialState(t));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==s)throw new zk(`RNN Layer has ${s} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},o=nL((t,e)=>{const n=this.cell.call([t].concat(e),a);return[n[0],n.slice(1)]},t,i,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h})}getInitialState(t){return Qb(()=>{let e=dT(t.shape);return e=GS(e,[1,2]),e=PA(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(t=>t>1?VA(e,[1,t]):e):this.cell.stateSize>1?[VA(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===rL.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),t),e)}static fromConfig(t,e,n={}){const r=cN(e.cell,n);return new t(Object.assign(e,{cell:r}))}}rL.className="RNN",Jw(rL);class iL extends DR{}class sL extends iL{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,aA(this.units,"units"),this.activation=TD(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=yR(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=yR(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=yR(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=AD(t.kernelRegularizer),this.recurrentRegularizer=AD(t.recurrentRegularizer),this.biasRegularizer=AD(t.biasRegularizer),this.kernelConstraint=JR(t.kernelConstraint),this.recurrentConstraint=JR(t.recurrentConstraint),this.biasConstraint=JR(t.biasConstraint),this.dropout=AA([1,RA([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=AA([1,RA([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=_R(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Qb(()=>{if(2!==t.length)throw new zk(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let i;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dL({ones:()=>fT(t),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dL({ones:()=>fT(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;i=GA(null!=s?Vw(t,s):t,this.kernel.read()),null!=this.bias&&(i=XA(i,this.bias.read())),null!=a&&(n=Vw(n,a));let o=Uw(i,GA(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:_D(this.activation),useBias:this.useBias,kernelInitializer:xR(this.kernelInitializer),recurrentInitializer:xR(this.recurrentInitializer),biasInitializer:xR(this.biasInitializer),kernelRegularizer:CD(this.kernelRegularizer),recurrentRegularizer:CD(this.recurrentRegularizer),biasRegularizer:CD(this.biasRegularizer),activityRegularizer:CD(this.activityRegularizer),kernelConstraint:YR(this.kernelConstraint),recurrentConstraint:YR(this.recurrentConstraint),biasConstraint:YR(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}sL.className="SimpleRNNCell",Jw(sL);class aL extends rL{constructor(t){t.cell=new sL(t),super(t)}call(t,e){return Qb(()=>{null!=this.cell.dropoutMask&&(tw(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(tw(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,i=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:i})})}static fromConfig(t,e){return new t(e)}}aL.className="SimpleRNN",Jw(aL);class oL extends iL{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new zk("GRUCell does not support reset_after parameter set to true.");this.units=t.units,aA(this.units,"units"),this.activation=TD(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=TD(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=yR(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=yR(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=yR(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=AD(t.kernelRegularizer),this.recurrentRegularizer=AD(t.recurrentRegularizer),this.biasRegularizer=AD(t.biasRegularizer),this.kernelConstraint=JR(t.kernelConstraint),this.recurrentConstraint=JR(t.recurrentConstraint),this.biasConstraint=JR(t.biasConstraint),this.dropout=AA([1,RA([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=AA([1,RA([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=_R(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Qb(()=>{if(2!==t.length)throw new zk(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dL({ones:()=>fT(t),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dL({ones:()=>fT(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,s=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(t=Vw(t,i[0]));let u=GA(t,this.kernel.read());this.useBias&&(u=XA(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Vw(r,s[0]));const c=this.recurrentKernel.read(),[h,d]=FT(c,[2*this.units,this.units],c.rank-1),p=GA(r,h),[f,m,g]=FT(u,3,u.rank-1),[x,y]=FT(p,2,p.rank-1);a=this.recurrentActivation.apply(Uw(f,x)),o=this.recurrentActivation.apply(Uw(m,y));const v=GA(Vw(o,r),d);l=this.activation.apply(Uw(g,v));const b=Uw(Vw(a,r),Vw(Uw(1,uT(a)),l));return[b,b]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:_D(this.activation),recurrentActivation:_D(this.recurrentActivation),useBias:this.useBias,kernelInitializer:xR(this.kernelInitializer),recurrentInitializer:xR(this.recurrentInitializer),biasInitializer:xR(this.biasInitializer),kernelRegularizer:CD(this.kernelRegularizer),recurrentRegularizer:CD(this.recurrentRegularizer),biasRegularizer:CD(this.biasRegularizer),activityRegularizer:CD(this.activityRegularizer),kernelConstraint:YR(this.kernelConstraint),recurrentConstraint:YR(this.recurrentConstraint),biasConstraint:YR(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}oL.className="GRUCell",Jw(oL);class lL extends rL{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new oL(t),super(t)}call(t,e){return Qb(()=>{null!=this.cell.dropoutMask&&(tw(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(tw(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,i=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:i})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}lL.className="GRU",Jw(lL);class uL extends iL{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,aA(this.units,"units"),this.activation=TD(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=TD(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=yR(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=yR(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=yR(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=AD(t.kernelRegularizer),this.recurrentRegularizer=AD(t.recurrentRegularizer),this.biasRegularizer=AD(t.biasRegularizer),this.kernelConstraint=JR(t.kernelConstraint),this.recurrentConstraint=JR(t.recurrentConstraint),this.biasConstraint=JR(t.biasConstraint),this.dropout=AA([1,RA([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=AA([1,RA([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=_R(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends QA{apply(e,r){const i=t.apply([n]),s=(new eR).apply([n]),a=t.apply([2*n]);return BA(BA(i,s),a)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Qb(()=>{const n=null!=e.training&&e.training;if(3!==t.length)throw new zk(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const i=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dL({ones:()=>fT(t),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dL({ones:()=>fT(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(t=Vw(t,s[0]));let h=GA(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Vw(r,a[0])),h=Uw(h,GA(r,this.recurrentKernel.read())),this.useBias&&(h=XA(h,this.bias.read()));const[d,p,f,m]=FT(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=Uw(Vw(l,i),Vw(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Vw(c,this.activation.apply(u));return[g,g,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:_D(this.activation),recurrentActivation:_D(this.recurrentActivation),useBias:this.useBias,kernelInitializer:xR(this.kernelInitializer),recurrentInitializer:xR(this.recurrentInitializer),biasInitializer:xR(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:CD(this.kernelRegularizer),recurrentRegularizer:CD(this.recurrentRegularizer),biasRegularizer:CD(this.biasRegularizer),activityRegularizer:CD(this.activityRegularizer),kernelConstraint:YR(this.kernelConstraint),recurrentConstraint:YR(this.recurrentConstraint),biasConstraint:YR(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}uL.className="LSTMCell",Jw(uL);class cL extends rL{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new uL(t),super(t)}call(t,e){return Qb(()=>{null!=this.cell.dropoutMask&&(tw(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(tw(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,i=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:i})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}cL.className="LSTM",Jw(cL);class hL extends iL{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Qb(()=>{let n=t.slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const i=[];let s;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=r[a],s=0===a?[t[0]].concat(n):[s[0]].concat(n),s=o.call(s,e),i.push(s.slice(1))}n=[];for(const t of i.slice().reverse())n.push(...t);return[s[0]].concat(n)})}build(t){let e;vR(t)&&(t=t[0]),this.cells.forEach((n,r)=>{SA(`RNNCell_${r}`,()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map(t=>({className:t.getClassName(),config:t.getConfig()}))};return Object.assign(Object.assign({},t),e)}static fromConfig(t,e,n={}){const r=[];for(const t of e.cells)r.push(cN(t,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return ER(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,i=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],i[t]])}IR(e)}}function dL(t){const{ones:e,rate:n,training:r=!1,count:i=1,dropoutFunc:s}=t,a=()=>null!=s?s(e(),n):KA(e(),n),o=()=>YA(a,e,r);return!i||i<=1?ew(o().clone()):Array(i).fill(void 0).map(o).map(t=>ew(t.clone()))}hL.className="StackedRNNCells",Jw(hL);class pL extends rL{constructor(t){if(t.unroll)throw new Bk("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Bk("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new CR({ndim:5})]}call(t,e){return Qb(()=>{if(null!=this.cell.dropoutMask&&(tw(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(tw(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new zk("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,i=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:i})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return Qb(()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),i=dT([r[0],...r.slice(2)]);return Array.isArray(e)?Array(e.length).fill(i):[i]})}resetStates(t,e=!1){Qb(()=>{if(!this.stateful)throw new $k("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),i=[r[0],...r.slice(2)];if(null==n[0])throw new zk("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>dT(i)):this.states_=[dT(i)];else if(null==t)tw(this.states_),null!=this.keptStates&&(tw(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>dT(i)):this.states_[0]=dT(i);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new zk(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):tw(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=i;if(!Fm(n.shape,r))throw new zk(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map(t=>ew(t.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:i,strides:s,dilationRate:a}=this.cell,o="channelsFirst"===e,l=t[o?3:2],u=t[o?4:3],c=$D(l,r[0],i,s[0],a[0]),h=$D(u,r[1],i,s[1],a[1]);return[...t.slice(0,2),...o?[n,c,h]:[c,h,n]]}}pL.className="ConvRNN2D";class fL extends uL{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:i,dataFormat:s,dilationRate:a}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,aA(this.filters,"filters"),this.kernelSize=OD(n,2,"kernelSize"),this.kernelSize.forEach(t=>aA(t,"kernelSize")),this.strides=OD(r||1,2,"strides"),this.strides.forEach(t=>aA(t,"strides")),this.padding=i||"valid",bA(this.padding),this.dataFormat=s||"channelsLast",vA(this.dataFormat),this.dilationRate=OD(a||1,2,"dilationRate"),this.dilationRate.forEach(t=>aA(t,"dilationRate"))}build(t){var e;t=_R(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new zk(`The channel dimension of the input should be defined. Found ${t[n]}`);const r=t[n],i=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends QA{apply(t,e){return zA([n.apply([r]),pT([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return Qb(()=>{if(3!==t.length)throw new zk(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,r=t[0],i=t[1],s=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dL({ones:()=>fT(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=(t,e,n)=>e&&e[n]?Vw(e[n],t):t;let l=o(r,a,0),u=o(r,a,1),c=o(r,a,2),h=o(r,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dL({ones:()=>fT(i),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(i,d,0),f=o(i,d,1),m=o(i,d,2),g=o(i,d,3);const[x,y,v,b]=FT(this.kernel.read(),4,3),[w,_,S,T]=this.useBias?FT(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,x,w,this.padding),u=this.inputConv(u,y,_,this.padding),c=this.inputConv(c,v,S,this.padding),h=this.inputConv(h,b,T,this.padding);const[M,E,I,C]=FT(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,M),f=this.recurrentConv(f,E),m=this.recurrentConv(m,I),g=this.recurrentConv(g,C);const k=this.recurrentActivation.apply(Uw(l,p)),A=this.recurrentActivation.apply(Uw(u,f)),R=Uw(Vw(A,s),Vw(k,this.activation.apply(Uw(c,m)))),N=Vw(this.recurrentActivation.apply(Uw(h,g)),this.activation.apply(R));return[N,N,R]})}getConfig(){const t=super.getConfig(),{units:e}=t,n=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(t);i<r.length;i++)e.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(t,r[i])&&(n[r[i]]=t[r[i]])}return n}(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(t,e,n,r){const i=bS(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?XA(i,n,this.dataFormat):i}recurrentConv(t,e){return bS(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}fL.className="ConvLSTM2DCell",Jw(fL);class mL extends pL{constructor(t){const e=new fL(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}mL.className="ConvLSTM2D",Jw(mL);class gL extends DR{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return Qb(()=>{this.invokeCallHook(t,e);const n=wR(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return YA(()=>KA(n,this.rate,r,this.seed),()=>n,t)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}gL.className="Dropout",Jw(gL);class xL extends gL{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}xL.className="SpatialDropout1D",Jw(xL);class yL extends DR{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,aA(this.units,"units"),this.activation=TD(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=yR(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=yR(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=JR(t.kernelConstraint),this.biasConstraint=JR(t.biasConstraint),this.kernelRegularizer=AD(t.kernelRegularizer),this.biasRegularizer=AD(t.biasRegularizer),this.activityRegularizer=AD(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=_R(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=_R(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Qb(()=>{this.invokeCallHook(t,e);const n=wR(t),r=lA(this.activation.getClassName());let i;return null!=r?i=GA(n,this.kernel.read(),r,this.bias?this.bias.read():null):(i=GA(n,this.kernel.read()),null!=this.bias&&(i=XA(i,this.bias.read())),null!=this.activation&&(i=this.activation.apply(i))),i})}getConfig(){const t={units:this.units,activation:_D(this.activation),useBias:this.useBias,kernelInitializer:xR(this.kernelInitializer),biasInitializer:xR(this.biasInitializer),kernelRegularizer:CD(this.kernelRegularizer),biasRegularizer:CD(this.biasRegularizer),activityRegularizer:CD(this.activityRegularizer),kernelConstraint:YR(this.kernelConstraint),biasConstraint:YR(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}yL.className="Dense",Jw(yL);class vL extends DR{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=_R(t);for(const e of t.slice(1))if(null==e)throw new zk(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],kA(t,1)]}call(t,e){return Qb(()=>{this.invokeCallHook(t,e);let n=wR(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=jT(n,t)}return function(t){if(t.rank<=1)throw new zk(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],kA(t.shape,1)];return aS(t,e)}(n)})}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}vL.className="Flatten",Jw(vL);class bL extends DR{constructor(t){super(t),this.supportsMasking=!0,this.activation=TD(t.activation)}call(t,e){return Qb(()=>{this.invokeCallHook(t,e);const n=wR(t);return this.activation.apply(n)})}getConfig(){const t={activation:_D(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}bL.className="Activation",Jw(bL);class wL extends DR{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Qb(()=>{return t=wR(t),e=t,n=this.n,Qb(()=>{if(2!==e.shape.length)throw new zk(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return VA(PA(e,1),[1,n,1])});var e,n})}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}wL.className="RepeatVector",Jw(wL);class _L extends DR{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let i=1,s=null;for(let t=0;t<r.length;++t){const e=r[t];if(this.isUnknown(e)){if(null!==s)throw new zk("Can only specifiy one unknown dimension.");s=t}else i*=e}const a=kA(t);if(null!==s){if(0===i||a%i!==0)throw new zk(n);r[s]=a/i}else if(a!==i)throw new zk(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Qb(()=>{this.invokeCallHook(t,e);const n=wR(t),r=n.shape,i=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return aS(n,i)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}_L.className="Reshape",Jw(_L);class SL extends DR{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=NA(1,t.dims.length+1);if(!Fm(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new CR({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=_R(t)).slice();return this.dims.forEach((n,r)=>{e[r+1]=t[n]}),e}call(t,e){return jT(wR(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}SL.className="Permute",Jw(SL);class TL extends DR{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=wR(t);return W_(cT(n,this.maskValue),-1)}call(t,e){return Qb(()=>{this.invokeCallHook(t,e);const n=wR(t),r=W_(cT(n,this.maskValue),-1,!0);return Vw(n,Ow(r,n.dtype))})}}TL.className="Masking",Jw(TL);class ML extends DR{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Xk(t.inputLength))}this.inputDim=t.inputDim,aA(this.inputDim,"inputDim"),this.outputDim=t.outputDim,aA(this.outputDim,"outputDim"),this.embeddingsInitializer=yR(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=AD(t.embeddingsRegularizer),this.activityRegularizer=AD(t.activityRegularizer),this.embeddingsConstraint=JR(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Qb(()=>this.maskZero?(t=wR(t),cT(t,Hw(t))):null)}computeOutputShape(t){if(t=_R(t),null==this.inputLength)return[...t,this.outputDim];const e=Xk(this.inputLength);if(e.length!==t.length-1)throw new zk(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let r=0;r<e.length;++r){const i=e[r],s=t[r+1];if(null!=i&&null!=s&&i!==s)throw new zk(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==i&&(e[n]=s),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Qb(()=>{this.invokeCallHook(t,e);let n=wR(t);"int32"!==n.dtype&&(n=FA(n,"int32"));const r=HA(this.embeddings.read(),aS(n,[n.size]));return aS(r,_R(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:xR(this.embeddingsInitializer),embeddingsRegularizer:CD(this.embeddingsRegularizer),activityRegularizer:CD(this.activityRegularizer),embeddingsConstraint:YR(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}ML.className="Embedding",Jw(ML);class EL extends DR{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Bk}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const i=t[t.length-e.length+r],s=e[r];if(null==i||null==s||i<0||s<0)n.push(null);else if(1===i)n.push(s);else if(1===s)n.push(i);else{if(i!==s)throw new zk("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(i)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[_R(t)]),t.length<2)throw new zk(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=nA(e),e.length>1)throw new zk(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=t.map(t=>t.length);-1===t.indexOf(null)&&1===nA(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Qb(()=>{if(this.reshapeRequired){const e=[],n=t.map(t=>t.rank);if(-1===n.indexOf(null)){const r=RA(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=PA(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const r of t){const t=r.rank;if(null==t){const t=r.shape,i=t[0],s=t.slice(1).concat([i]);let a=aS(r,[i].concat(kA(t.slice(1))));a=jT(a,[1,0]),a=aS(a,s),e.push(a),n=!0}else if(t>1){const i=NA(1,t).concat([0]);e.push(jT(r,i)),n=!0}else e.push(r)}let r=this.mergeFunction(e);const i=r.rank;if(n)if(null==i){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=aS(jT(aS(r,[-1,e]),[1,0]),n)}else if(i>1){const t=[i-1].concat(NA(0,i-1));r=jT(r,t)}return r}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const r=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=nA(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return Qb(()=>{if(null==e)return null;if(!Array.isArray(e))throw new zk("`mask` should be an Array");if(!Array.isArray(t))throw new zk("`inputs` should be an Array");if(e.length!==t.length)throw new zk(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(t=>null==t))return null;let n=(e=e.map(t=>null==t?t:DS(t,0)))[0];for(let t=1;t<e.length-1;++t)n=eT(n,e[t]);return n})}}class IL extends EL{constructor(t){super(t)}mergeFunction(t){return Qb(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Uw(e,t[n]);return e})}}IL.className="Add",Jw(IL);class CL extends EL{constructor(t){super(t)}mergeFunction(t){return Qb(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Vw(e,t[n]);return e})}}CL.className="Multiply",Jw(CL);class kL extends EL{constructor(t){super(t)}mergeFunction(t){return Qb(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Uw(e,t[n]);return Vw(1/t.length,e)})}}kL.className="Average",Jw(kL);class AL extends EL{constructor(t){super(t)}mergeFunction(t){return Qb(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=c_(e,t[n]);return e})}}AL.className="Maximum",Jw(AL);class RL extends EL{constructor(t){super(t)}mergeFunction(t){return Qb(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=oT(e,t[n]);return e})}}RL.className="Minimum",Jw(RL);class NL extends EL{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new zk("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const r=t[e].slice();r.splice(this.axis,1);let i=!1;for(const t of n)if(Fm(t,r)){i=!0;break}i||n.push(r)}if(n.length>1)throw new zk("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Qb(()=>zA(t,this.axis))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new zk("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[r]||null==t[r]){n[r]=null;break}n[r]+=t[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new zk("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new zk("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new zk(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return Qb(()=>{let n=!0;if(e.forEach(t=>{null==t||(n=!1)}),n)return null;const r=[];for(let n=0;n<t.length;++n)null==e[n]?r.push(Ow(fT(t[n]),"bool")):e[n].rank<t[n].rank?r.push(DS(e[n],-1)):r.push(e[n]);const i=mS(r,this.axis);return V_(i,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function DL(t,e){for(;t<0;)t+=e;return t}NL.className="Concatenate",Jw(NL);class LL extends EL{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){Rm(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new Bk("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new zk(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new zk(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map((e,n)=>DL(e,t[n].shape.length)):[DL(this.axes,n.shape.length),DL(this.axes,r.shape.length)],this.normalize&&(n=hN(n,e[0]),r=hN(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Bk("batchDot is not implemented for tensors of 4D or higher rank yet");if(Rm(t.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`),Rm(t.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new Bk("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,i=e.shape.length;null==n&&(n=[r-1,i-2]);const s=n;return Qb(()=>{let n,a;if(r>i){n=r-i;const t=[];for(let e=0;e<n;++e)t.push(1);e=aS(e,e.shape.concat(t))}else if(i>r){n=i-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=aS(t,t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)a=s[0]===s[1]?GS(Vw(t,e),s[0]):GS(Vw(jT(t,[1,0]),e),s[1]);else{const n=s[0]!==t.shape.length-1,r=s[1]===e.shape.length-1;a=nT(t,e,n,r)}if(n>0){let t;t=r>i?r+i-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);a=PT(a,e)}return 1===a.shape.length&&(a=DS(a,1)),a})}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[DL(this.axes,t.length),DL(this.axes,e.length)],n}computeOutputShape(t){Rm(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new Bk("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const i=e.concat(n);return 1===i.length&&i.push(1),i}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}LL.className="Dot",Jw(LL);class FL extends DR{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Qb(()=>{this.invokeCallHook(t,e);const n=wR(t);return YA(()=>Uw(WA(n.shape,0,this.stddev),n),()=>n,e.training||!1)})}}FL.className="GaussianNoise",Jw(FL);class PL extends DR{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Qb(()=>{this.invokeCallHook(t,e);const n=wR(t);return this.rate>0&&this.rate<1?YA(()=>{const t=Math.sqrt(this.rate/(1-this.rate));return Vw(n,WA(n.shape,1,t))},()=>n,e.training||!1):n})}}PL.className="GaussianDropout",Jw(PL);class OL extends DR{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||wR(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Qb(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return YA(()=>{const e=wR(t),r=-1.7580993408473766;let i=US(wT(n),this.rate);i=FA(i,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,a=-s*r*this.rate,o=Uw(Vw(e,i),Vw(Uw(i,-1),r));return Uw(Vw(o,s),a)},()=>wR(t),e.training||!1)}return t})}}function $L(t,e,n,r,i,s=.001){let a;if(2===t.rank)a=cS(t,e,n,r,i,s);else if(3===t.rank)a=hS(t,e,n,r,i,s);else{if(4!==t.rank)throw new Bk(`batchNormalization is not implemented for array of rank ${t.rank} yet`);a=dS(t,e,n,r,i,s)}return a}OL.className="AlphaDropout",Jw(OL);class UL extends DR{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=yR(t.betaInitializer||"zeros"),this.gammaInitializer=yR(t.gammaInitializer||"ones"),this.movingMeanInitializer=yR(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=yR(t.movingVarianceInitializer||"ones"),this.betaConstraint=JR(t.betaConstraint),this.gammaConstraint=JR(t.gammaConstraint),this.betaRegularizer=AD(t.betaRegularizer),this.gammaRegularizer=AD(t.gammaRegularizer)}build(t){t=_R(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new zk(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new CR({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Qb(()=>{const n=null!=e.training&&e.training,r=wR(t),i=r.shape,s=i.length,a=NA(0,s),o=this.axis>=0?this.axis:this.axis+s;a.splice(o,1);const l=Gk(1,s);l[o]=i[o];const u=a.slice();u.sort();const c=!Fm(u,NA(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const t=aS(this.movingMean.read(),l),e=aS(this.movingVariance.read(),l),n=this.center?aS(this.beta.read(),l):null,i=this.scale?aS(this.gamma.read(),l):null;return $L(r,t,e,n,i,this.epsilon)}return $L(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(t,e,n,r,i=.001){return Fm(r.slice().sort(),NA(0,t.rank-1))?function(t,e,n,r,i=.001){return Qb(()=>{const s=lT(t,r),a=s.mean,o=s.variance;return[$L(t,a,o,n,e,i),a,o]})}(t,e,n,r,i):function(t,e,n,r,i=.001){return Qb(()=>{const s=lT(t,r),a=s.mean,o=s.variance,l=[];for(const e of NA(0,t.rank))-1!==r.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=aS(a,l),c=aS(o,l),h=null==e?null:aS(e,l),d=null==n?null:aS(n,l);return[$L(t,u,c,d,h,i),a,o]})}(t,e,n,r,i)}(r,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(t,e,n)=>{Qb(()=>{const r=1-n,i=t.read(),s=Vw(i_(i,e),r);t.write(i_(i,s))})};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:xR(this.betaInitializer),gammaInitializer:xR(this.gammaInitializer),movingMeanInitializer:xR(this.movingMeanInitializer),movingVarianceInitializer:xR(this.movingVarianceInitializer),betaRegularizer:CD(this.betaRegularizer),gammaRegularizer:CD(this.gammaRegularizer),betaConstraint:YR(this.betaConstraint),gammaConstraint:YR(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}UL.className="BatchNormalization",Jw(UL);class zL extends DR{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=yR(t.betaInitializer||"zeros"),this.gammaInitializer=yR(t.gammaInitializer||"ones"),this.betaRegularizer=AD(t.betaRegularizer),this.gammaRegularizer=AD(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=_R(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==nA(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map(e=>t[e]),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(t,e){const n=wR(t),r=n.shape,i=r.length;return Qb(()=>{let{mean:t,variance:e}=lT(n,this.axis,!0);const s=Gk(1,i);for(const t of this.axis)s[t]=r[t];const a=t=>null!=t&&t.shape.length!==i?aS(t,s):t;let o=this.scale?a(this.gamma.read()):null,l=this.center?a(this.beta.read()):null;const u=[],c=[];for(let t=0;t<i;++t)-1!==this.axis.indexOf(t)?(u.push(r[t]),c.push(1)):(u.push(1),c.push(r[t]));return t=LS(t,u),e=LS(e,u),null!=o&&(o=LS(o,c)),null!=l&&(l=LS(l,c)),$L(n,t,e,l,o,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:xR(this.betaInitializer),gammaInitializer:xR(this.gammaInitializer),betaRegularizer:CD(this.betaRegularizer),gammaRegularizer:CD(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}zL.className="LayerNormalization",Jw(zL);class BL extends DR{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new zk(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new zk(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new zk(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new CR({ndim:4})]}computeOutputShape(t){let e,n;return t=_R(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Qb(()=>{return e=wR(t),n=this.padding,r=this.dataFormat,Qb(()=>{if(4!==e.rank)throw new zk(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new zk("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new zk(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],mT(e,t)});var e,n,r})}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function VL(t,e,n,r,i,s){return Qb(()=>{let a;vA(i),wA(s),bA(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==i&&(i="channelsLast"),null==s&&(s="max"),t=zD(t,i);const o="same"===r?"same":"valid";return a="max"===s?rT(t,e,n,o):oS(t,e,n,o),"channelsFirst"===i&&(a=jT(a,[0,3,1,2])),a})}function WL(t,e,n,r,i,s){return Qb(()=>{let a;vA(i),wA(s),bA(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==i&&(i="channelsLast"),null==s&&(s="max"),t=BD(t,i);const o="same"===r?"same":"valid";return a="max"===s?iT(t,e,n,o):lS(t,e,n,o),"channelsFirst"===i&&(a=jT(a,[0,4,1,2,3])),a})}BL.className="ZeroPadding2D",Jw(BL);class GL extends DR{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new zk(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(aA(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new zk(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}aA(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,bA(this.padding),this.inputSpec=[new CR({ndim:3})]}computeOutputShape(t){const e=$D((t=_R(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Qb(()=>{this.invokeCallHook(t,e),t=PA(wR(t),2);const n=this.poolingFunction(wR(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return PT(n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class HL extends GL{constructor(t){super(t)}poolingFunction(t,e,n,r,i){return vA(i),bA(r),VL(t,e,n,r,i,"max")}}HL.className="MaxPooling1D",Jw(HL);class jL extends GL{constructor(t){super(t)}poolingFunction(t,e,n,r,i){return vA(i),bA(r),VL(t,e,n,r,i,"avg")}}jL.className="AveragePooling1D",Jw(jL);class qL extends DR{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new zk(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];aA(this.poolSize,"poolSize"),aA(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,vA(this.dataFormat),bA(this.padding),this.inputSpec=[new CR({ndim:4})]}computeOutputShape(t){t=_R(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=$D(e,this.poolSize[0],this.padding,this.strides[0]),n=$D(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Qb(()=>(this.invokeCallHook(t,e),this.poolingFunction(wR(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class XL extends qL{constructor(t){super(t)}poolingFunction(t,e,n,r,i){return vA(i),bA(r),VL(t,e,n,r,i,"max")}}XL.className="MaxPooling2D",Jw(XL);class KL extends qL{constructor(t){super(t)}poolingFunction(t,e,n,r,i){return vA(i),bA(r),VL(t,e,n,r,i,"avg")}}KL.className="AveragePooling2D",Jw(KL);class YL extends DR{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new zk(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];aA(this.poolSize,"poolSize"),aA(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,vA(this.dataFormat),bA(this.padding),this.inputSpec=[new CR({ndim:5})]}computeOutputShape(t){t=_R(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=$D(e,this.poolSize[0],this.padding,this.strides[0]),n=$D(n,this.poolSize[1],this.padding,this.strides[1]),r=$D(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return Qb(()=>(this.invokeCallHook(t,e),this.poolingFunction(wR(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class ZL extends YL{constructor(t){super(t)}poolingFunction(t,e,n,r,i){return vA(i),bA(r),WL(t,e,n,r,i,"max")}}ZL.className="MaxPooling3D",Jw(ZL);class JL extends YL{constructor(t){super(t)}poolingFunction(t,e,n,r,i){return vA(i),bA(r),WL(t,e,n,r,i,"avg")}}JL.className="AveragePooling3D",Jw(JL);class QL extends DR{constructor(t){super(t),this.inputSpec=[new CR({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Bk}}class tF extends QL{constructor(t){super(t||{})}call(t,e){return Qb(()=>{const e=wR(t);return sT(e,1)})}}tF.className="GlobalAveragePooling1D",Jw(tF);class eF extends QL{constructor(t){super(t||{})}call(t,e){return Qb(()=>{const e=wR(t);return WS(e,1)})}}eF.className="GlobalMaxPooling1D",Jw(eF);class nF extends DR{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,vA(this.dataFormat),this.inputSpec=[new CR({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Bk}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class rF extends nF{call(t,e){return Qb(()=>{const e=wR(t);return"channelsLast"===this.dataFormat?sT(e,[1,2]):sT(e,[2,3])})}}rF.className="GlobalAveragePooling2D",Jw(rF);class iF extends nF{call(t,e){return Qb(()=>{const e=wR(t);return"channelsLast"===this.dataFormat?WS(e,[1,2]):WS(e,[2,3])})}}iF.className="GlobalMaxPooling2D",Jw(iF);class sF extends DR{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=cN(e.layer,n);delete e.layer;const i={layer:r};return Object.assign(i,e),new t(i)}}class aF extends sF{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=_R(t)).length<3)throw new zk(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=_R(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return Qb(()=>nL((t,n)=>[wR(this.layer.call(t,e)),[]],t=wR(t),[],!1,null,null,!1,!0)[1])}}aF.className="TimeDistributed",Jw(aF);class oF extends sF{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=cN(n),e.goBackwards=!0!==e.goBackwards;const r={};var i;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=cN(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,i=this.mergeMode,iA(xA,"BidirectionalMergeMode",i),t.weights)throw new Bk("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,i=this.forwardLayer.computeOutputShape(t);return Array.isArray(i)&&Array.isArray(i[0])||(i=[i]),this.returnState?(r=i.slice(1),e=i[0]):e=i[0],"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):qk(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const i=eL(t,n,r,this.numConstants);if(t=i.inputs,n=i.initialState,r=i.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const s=[],a=[];if(null!=n){const t=n.length;if(t%2>0)throw new zk("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,s.push(...n);const r=n.map(t=>new CR({shape:t.shape}));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),a.push(...r)}if(null!=r)throw new Bk("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof kR;for(const t of s)if(t instanceof kR!==o)throw new zk("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(s),r=this.inputSpec.concat(a),i=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=i,o}return super.apply(t,e)}call(t,e){return Qb(()=>{const n=e.initialState;let r,i,s,a;if(null==n)r=this.forwardLayer.call(t,e),i=this.backwardLayer.call(t,e);else{const s=n.slice(0,n.length/2),a=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:s})),i=this.backwardLayer.call(t,Object.assign(e,{initialState:a}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(i.slice(1))),r=r[0],i=i[0]),this.returnSequences&&(i=TT(i,1)),"concat"===this.mergeMode?a=zA([r,i]):"sum"===this.mergeMode?a=Uw(r,i):"ave"===this.mergeMode?a=Vw(.5,Uw(r,i)):"mul"===this.mergeMode?a=Vw(r,i):null==this.mergeMode&&(a=[r,i]),this.returnState?null==this.mergeMode?a.concat(s):[a].concat(s):a})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){SA(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),SA(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map(t=>null);return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=cN(e.layer);if(delete e.layer,null!=e.numConstants)throw new Bk("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}oF.className="Bidirectional",Jw(oF);class lF extends DR{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return Qb(()=>("float32"!==(t=wR(t)).dtype&&(t=FA(t,"float32")),Uw(Vw(t,this.scale),this.offset)))}}lF.className="Rescaling",Jw(lF);const{resizeBilinear:uF,cropAndResize:cF}=GM;class hF extends DR{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,n,r,i,s,a,o){return Qb(()=>{let l,u=!1;const c=[e/s,n/a,(r+e)/s,(i+n)/a],h=[];3===t.rank?(u=!0,l=OT([t])):l=t;for(let t=0;t<l.shape[0];t++)h.push(c);const d=Kb(h,[h.length,4]),p=_T(0,h.length,1,"int32"),f=cF(l,d,p,[r,i],"nearest");return FA(u?wR(VT(f)):f,o)})}upsize(t,e,n,r){return Qb(()=>FA(uF(t,[e,n]),r))}call(t,e){return Qb(()=>{const e=wR(t),n=e.dtype,r=e.shape,i=r[r.length-3],s=r[r.length-2];let a=0;i!==this.height&&(a=Math.floor((i-this.height)/2));let o=0;return s!==this.width&&(o=Math.floor((s-this.width)/2),0===o&&(o=1)),a>=0&&o>=0?this.centerCrop(e,a,o,this.height,this.width,i,s,n):this.upsize(t,this.height,this.width,n)})}getConfig(){const t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){const e=(t=_R(t)).length-3,n=t.length-2;return t[e]=this.height,t[n]=this.width,t}}hF.className="CenterCrop",Jw(hF);class dF extends DR{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return null==(t=_R(t))?[this.numTokens]:"oneHot"===this.outputMode&&1!==t[t.length-1]?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return Qb(()=>{let n;if("int32"!==(t=wR(t)).dtype&&(t=FA(t,"int32")),void 0!==e.countWeights){if("count"!==this.outputMode)throw new zk(`countWeights is not used when outputMode !== count.\n              Received countWeights=${e.countWeights}`);n=wR(e.countWeights)}const r=WS(t),i=aT(t),s=$S(this.numTokens,r).bufferSync().get(0),a=US(i,0).bufferSync().get(0);if(!s||!a)throw new zk(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(t,e,n,r){let i=wR(t);if("int32"!==i.dtype&&(i=FA(i,"int32")),"int"===e)return i;const s=i.shape;if(0===i.rank&&(i=DS(i,-1)),"oneHot"===e&&1!==i.shape[i.shape.length-1]&&(i=DS(i,-1)),i.rank>2)throw new zk(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${s} which would result in output rank ${i.rank}.`);const a=["multiHot","oneHot"].includes(e);let o;if(o=IS(i,void 0!==r&&"count"===e?r:[],n,a),"tfIdf"!==e)return o;if(r)return Vw(o,r);throw new zk("When outputMode is 'tfIdf', weights must be provided.")}(t,this.outputMode,this.numTokens,n)})}}dF.className="CategoryEncoding",Jw(dF);const pF=new Set(["bilinear","nearest"]);class fF extends DR{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation){if(!pF.has(t.interpolation))throw new zk(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);this.interpolation=t.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(t.cropToAspectRatio)}computeOutputShape(t){const e=(t=_R(t))[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return Qb(()=>{const e=[this.height,this.width];if("bilinear"===this.interpolation)return GM.resizeBilinear(t,e,!this.cropToAspectRatio);if("nearest"===this.interpolation)return GM.resizeNearestNeighbor(t,e,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...pF]} are supported`)})}}fF.className="Resizing",Jw(fF);class mF{constructor(t){this.seed=t}next(){if(void 0!==this.seed)return this.seed++}}mF.className="RandomSeed";class gF extends DR{constructor(t){super(t),this.randomGenerator=new mF(t.seed)}getConfig(){const t={seed:this.randomGenerator.seed},e=super.getConfig();return Object.assign(t,e),t}}gF.className="BaseRandomLayer";const xF=new Set(["bilinear","nearest"]);class yF extends gF{constructor(t){super(t);const{factor:e,interpolation:n="bilinear"}=t;if(this.factor=e,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new zk(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new zk(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new zk(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!xF.has(n))throw new zk(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const t={factor:this.factor,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){const e=(t=_R(t))[2];return[this.imgHeight,-1,e]}call(t,e){return Qb(()=>{const e=wR(t);this.imgHeight=e.shape[e.shape.length-3];const n=e.shape[e.shape.length-2];this.widthFactor=wT([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const i=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return GM.resizeBilinear(t,i);case"nearest":return GM.resizeNearestNeighbor(t,i);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...xF]} are supported`)}})}}var vF,bF,wF,_F;function SF(t,e,n=new Map,r=new Set){if(null==t)return null;if("function"==typeof Blob&&t instanceof Blob)return t.slice();if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const i=e(t);if(i.recurse&&null!==i.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(i.recurse){if(IF(t)){const i=Array.isArray(t)?[]:{};r.add(t);for(const s in t){const a=SF(t[s],e,n,r);i[s]=a}return r.delete(t),t.__proto__&&(i.__proto__=t.__proto__),i}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,i.value),i.value}function TF(t,e=EF){return MF(t,e)}function MF(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const i=e(t);if(i.recurse&&null!==i.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(i.recurse){if(IF(r)){const i=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=MF(t.map(t=>t[s]),e,n);i[s]=r}return n.delete(r),i}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return i.value}function EF(t){return null===t?null:IF(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function IF(t){let e=!1;if(hg().get("IS_BROWSER"))e=t instanceof TextDecoder;else{const{StringDecoder:r}=n(551);e=t instanceof r}return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof mb)&&!(t instanceof Promise)&&!e)}function CF(t){return SF(t,kF)}function kF(t){return t instanceof mb?{value:t.clone(),recurse:!1}:IF(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}yF.className="RandomWidth",Jw(yF),hg().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"}(vF||(vF={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(bF||(bF={})),Error,new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);class AF{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class RF extends AF{constructor(){super(RF.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}RF.INITIAL_CAPACITY=32;class NF{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new BF(this,t)}filter(t){return new UF(this,t)}map(t){return new zF(this,t)}mapAsync(t){return new VF(this,t)}serialMapAsync(t){return new VF(this,t).serial()}flatmap(t){return new GF(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(t=>!0===t)}rowMajorBatch(t,e=!0){return new $F(this,t,e)}columnMajorBatch(t,e=!0,n=EF){return this.rowMajorBatch(t,e).map(t=>TF(t,n))}concatenate(t,e){return new HF(new DF([this,t]),e)}take(t){return t<0||null==t?this:new OF(this,t)}skip(t){return t<0||null==t?this:new PF(this,t)}prefetch(t){return new jF(this,t)}shuffle(t,e){return new qF(this,t,e)}serial(){return new FF(this)}}class DF extends NF{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:CF(t),done:!1}}}class LF extends NF{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class FF extends NF{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class PF extends NF{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;tw(t.value)}return this.upstream.next()}}class OF extends NF{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class $F extends NF{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class UF extends NF{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;tw(t.value)}}}class zF extends NF{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=Ab(t.value),n=this.transform(t.value),r=Ab(n);for(const t of e)kb(t,r)||t.dispose();return{value:n,done:!1}}}class BF extends NF{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class VF extends NF{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=Ab(t.value),n=await this.transform(t.value),r=Ab(n);for(const t of e)kb(t,r)||t.dispose();return{value:n,done:!1}}}class WF extends NF{constructor(){super(),this.outputQueue=new RF,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class GF extends WF{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=Ab(t.value),n=this.transform(t.value),r=Ab(n);this.outputQueue.pushAll(n);for(const t of e)kb(t,r)||t.dispose();return!0}}class HF extends NF{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}(_F=wF||(wF={}))[_F.FAIL=0]="FAIL",_F[_F.SHORTEST=1]="SHORTEST",_F[_F.LONGEST=2]="LONGEST";class jF extends NF{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new AF(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class qF extends jF{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=xT.alea(n||Jv().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class XF{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return Rm(t>0,()=>`batchSize needs to be positive, but it is\n      ${t}`),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),KF(async()=>(await n.iterator()).columnMajorBatch(t,e,YF),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,KF(async()=>(await e.iterator()).concatenate(await t.iterator()),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,KF(async()=>(await e.iterator()).filter(e=>Qb(()=>t(e))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return KF(async()=>(await e.iterator()).map(e=>Qb(()=>t(e))),this.size)}mapAsync(t){const e=this;return KF(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return KF(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,KF(async()=>{return n=(i=async()=>({value:await e.iterator(),done:!1}),new LF(i)).take(t),new HF(n,r);var n,r,i},n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,KF(async()=>(await e.iterator()).skip(t),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,i=xT.alea(e||Jv().toString());return KF(async()=>{let e=i.int32();return n&&(e+=i.int32()),(await r.iterator()).shuffle(t,e.toString())},this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,KF(async()=>(await e.iterator()).take(t),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function KF(t,e=null){return new class extends XF{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function YF(t){if(null===t)return null;return null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof mb||eb(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof mb?OT(t):Kb(t)}(t),recurse:!1}:{value:null,recurse:!0};var e,n}function ZF(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&Rm("complex64"!==t.dtype,()=>`${e} does not support complex64 tensors in the CPU backend.`)})}XF.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const JF=iI;class QF extends Mm{nextDataId(){return QF.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Tm(this,Zb())}write(t,e,n){this.firstUse&&(this.firstUse=!1,hg().get("IS_NODE")&&Mv("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&qm(n[0])){const i=n.map(t=>Qv(t));r=this.write(i,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,r,i){this.data.set(t,{values:e,dtype:r,refCount:i})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);return"complex64"===e?_E(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):function(t,e){if(Array.isArray(t))return t;if("float32"===e)return t instanceof Float32Array?t:new Float32Array(t);if("int32"===e)return t instanceof Int32Array?t:new Int32Array(t);if("bool"===e||"string"===e)return Uint8Array.from(new Int32Array(t));throw new Error(`Unknown dtype ${e}`)}(this.data.get(t).values,e)}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map(t=>tb(t));return Pw(t.shape,t.dtype,n)}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Pw(t.shape,t.dtype,e)}makeOutput(t,e,n){return Zb().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=Jv();return t(),{kernelMs:Jv()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){ZF([t],"where");const e=this.readSync(t.dataId);return JF(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function tP(t){return(e,n,r)=>{const i=Gm(n,e.length);for(let n=0;n<e.length;++n)i[n]=t(e[n],r);return i}}function eP(t,e,n){return nP(t,tP(e),n)}function nP(t,e,n){return({inputs:r,attrs:i,backend:s})=>{const{x:a}=r;ZF(a,t);const o=s,l=o.data.get(a.dataId).values;let u;if("string"===a.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=nI(l)}else u=l;const c=n||a.dtype,h=e(u,c,i);return o.makeTensorInfo(a.shape,c,h)}}QF.nextDataId=0,nw("cpu",()=>new QF,1);const rP=eP(px,t=>t>=0?t:Math.exp(t)-1),iP={kernelName:px,backendName:"cpu",kernelFunc:rP};function sP(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const aP={kernelName:Ax,backendName:"cpu",kernelFunc:sP};function oP(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{alpha:s}=r;ZF([i],"leakyRelu");const a=Lm(i.shape),o=n.data.get(i.dataId).values,l=Wm("float32",a);for(let t=0;t<o.length;t++)l[t]=o[t]<0?s*o[t]:o[t];return n.makeTensorInfo(i.shape,"float32",l)}const lP={kernelName:Px,backendName:"cpu",kernelFunc:oP};function uP(t){return(e,n,r,i,s)=>{const a=u_(e,n),o=a.length,l=Jm(a),u=Wm(s,Lm(a)),c=e.length,h=n.length,d=Jm(e),p=Jm(n),f=o_(e,a),m=o_(n,a);if(f.length+m.length===0)for(let e=0;e<u.length;++e)u[e]=t(r[e%r.length],i[e%i.length]);else for(let e=0;e<u.length;++e){const n=ag(e,o,l),s=n.slice(-c);f.forEach(t=>s[t]=0);const a=sg(s,c,d),g=n.slice(-h);m.forEach(t=>g[t]=0);const x=sg(g,h,p);u[e]=t(r[a],i[x])}return[u,a]}}const cP=uP((t,e)=>t<0?e*t:t);function hP(t){const{inputs:e,backend:n}=t,{x:r,alpha:i}=e;ZF([r,i],"prelu");const s=n.data.get(r.dataId).values,a=n.data.get(i.dataId).values,[o,l]=cP(r.shape,i.shape,s,a,"float32");return n.makeTensorInfo(l,"float32",o)}const dP={kernelName:xy,backendName:"cpu",kernelFunc:hP},pP=eP(My,t=>Math.max(0,t)),fP={kernelName:My,backendName:"cpu",kernelFunc:pP},mP=eP(Ry,t=>Math.min(Math.max(0,t),6)),gP={kernelName:Ry,backendName:"cpu",kernelFunc:mP},xP=tP(t=>1/(1+Math.exp(-t))),yP=eP(Gy,t=>1/(1+Math.exp(-t))),vP={kernelName:Gy,backendName:"cpu",kernelFunc:yP};function bP(t,e,n,r,i){if("linear"===n)return sP({inputs:{x:e},backend:t});if("relu"===n)return pP({inputs:{x:e},backend:t});if("elu"===n)return rP({inputs:{x:e},backend:t});if("relu6"===n)return mP({inputs:{x:e},backend:t});if("prelu"===n)return hP({inputs:{x:e,alpha:r},backend:t});if("leakyrelu"===n)return oP({inputs:{x:e},backend:t,attrs:{alpha:i}});if("sigmoid"===n)return yP({inputs:{x:e},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function wP(t){const{inputs:e,backend:n}=t,{real:r,imag:i}=e,s=n.data.get(r.dataId).values,a=n.data.get(i.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(i.shape,"float32",a)},o}const _P={kernelName:Vg,backendName:"cpu",kernelFunc:wP};function SP(t,e,n="float32"){if("complex64"===n)return wP({inputs:{real:SP(t,e,"float32"),imag:SP(t,e,"float32")},backend:t});const r=ng(Lm(e),n);return t.makeTensorInfo(e,n,r)}function TP(t){const{inputs:e,backend:n}=t,{input:r}=e,i=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(i.dataId).values;return n.makeTensorInfo(i.shape,i.dtype,s)}const MP={kernelName:Sy,backendName:"cpu",kernelFunc:TP};function EP(t,e,n,r){if("int32"===r)return[e,"int32",Int32Array.from(t)];if("bool"===r){const r=Zv([0],n),[i,s]=uP((t,e)=>t!==e?1:0)(e,[],t,r,"bool");return[s,"bool",i]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function IP(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{dtype:s}=r;if("complex64"===s){if("complex64"===i.dtype)return sP({inputs:{x:i},backend:n});const t=SP(n,i.shape,i.dtype),e=IP({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),r=wP({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),r}if("complex64"===i.dtype){const t=TP({inputs:{input:i},backend:n}),e=IP({inputs:{x:t},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(t),e}if(!Hm(i.dtype,s)){const t=sP({inputs:{x:i},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:s}}const a=n.data.get(i.dataId).values,[o,l,u]=EP(a,i.shape,i.dtype,s);return n.makeTensorInfo(o,l,u)}const CP={kernelName:Ug,backendName:"cpu",kernelFunc:IP};function kP(t,e,n,r){return null==n?({inputs:n,backend:i})=>{const{a:s,b:a}=n,o=i;ZF([s,a],t);const l=o.data.get(s.dataId).values,u=o.data.get(a.dataId).values,c="string"===s.dtype?nI(l):l,h="string"===s.dtype?nI(u):u,d=r||s.dtype,[p,f]=e(s.shape,a.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:t,backend:i})=>{const{a:s,b:a}=t,o=i;if("complex64"===s.dtype||"complex64"===a.dtype){const t=IP({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),r=e.complexTensorInfos.real,i=e.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(i.dataId).values,c=IP({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,x,y]=n(s.shape,a.shape,l,u,f,m),v=o.makeTensorInfo(y,"float32",g),b=o.makeTensorInfo(y,"float32",x),w=wP({inputs:{real:v,imag:b},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(v),o.disposeIntermediateTensorInfo(b),w}{const t=o.data.get(s.dataId).values,n=o.data.get(a.dataId).values,i=r||s.dtype,[l,u]=e(s.shape,a.shape,t,n,i);return o.makeTensorInfo(u,i,l)}}}function AP(t){return(e,n,r,i,s,a)=>{const o=u_(e,n),l=Lm(o),u=o.length,c=Jm(o),h=Wm("float32",l),d=Wm("float32",l),p=o_(e,o),f=o_(n,o),m=_E(r,i),g=_E(s,a),x=e.length,y=Jm(e),v=n.length,b=Jm(n);if(p.length+f.length===0)for(let e=0;e<h.length;e++){const n=e%m.length,r=e%g.length,i=t(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[e]=i.real,d[e]=i.imag}else for(let e=0;e<h.length;e++){const n=ag(e,u,c),r=n.slice(-x);p.forEach(t=>r[t]=0);const i=sg(r,x,y),s=n.slice(-v);f.forEach(t=>s[t]=0);const a=sg(s,v,b),o=t(m[2*i],m[2*i+1],g[2*a],g[2*a+1]);h[e]=o.real,d[e]=o.imag}return[h,d,o]}}const RP=uP((t,e)=>t+e),NP=AP((t,e,n,r)=>({real:t+n,imag:e+r})),DP=kP(vg,RP,NP),LP={kernelName:vg,backendName:"cpu",kernelFunc:DP};function FP(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{shape:s}=r,a=Lm(i.shape),o=zm(s,a),l=Lm(o);Rm(a===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${i.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),n.incRef(i.dataId);const u=n.data.get(i.dataId);if(null!=u.complexTensorInfos){const t=u.complexTensorInfos.real,e=u.complexTensorInfos.imag;t.shape=o,e.shape=o}return{dataId:i.dataId,shape:o,dtype:i.dtype}}const PP={kernelName:Ey,backendName:"cpu",kernelFunc:FP};function OP(t){const{inputs:e,backend:n,attrs:r}=t,{a:i,b:s}=e,{transposeA:a,transposeB:o}=r;ZF([i,s],"matMul");const l=i.shape.length,u=s.shape.length,c=a?i.shape[l-2]:i.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],d=a?i.shape[l-1]:i.shape[l-2],p=o?s.shape[u-2]:s.shape[u-1],f=i.shape.slice(0,-2),m=s.shape.slice(0,-2),g=Lm(f),x=Lm(m),y=u_(i.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,p]);Rm(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${i.shape} and ${s.shape} and transposeA=${a} and transposeB=${o} must match.`);const v=o?[x,p,h]:[x,h,p],b=FP({inputs:{x:i},backend:n,attrs:{shape:a?[g,c,d]:[g,d,c]}}),w=FP({inputs:{x:s},backend:n,attrs:{shape:v}}),_=a?b.shape[1]:b.shape[2],S=a?b.shape[2]:b.shape[1],T=o?w.shape[1]:w.shape[2],M=Math.max(g,x),E=n.data.get(b.dataId).values,I=n.data.get(w.dataId).values,C=Jm(b.shape),k=Jm(w.shape),[A,R,N]=a?[C[0],1,C[1]]:[C[0],C[1],1],[D,L,F]=o?[1,k[1],k[0]]:[k[1],1,k[0]],P=S*T,O=Pw([M,S,T],b.dtype),$=O.values,U=n.blockSize;for(let t=0;t<M;t++){const e=t%g,n=t%x;for(let r=0;r<S;r+=U){const i=Math.min(r+U,S);for(let s=0;s<T;s+=U){const a=Math.min(s+U,T);for(let o=0;o<_;o+=U){const l=Math.min(o+U,_);for(let u=r;u<i;u++)for(let r=s;r<a;r++){let i=0;for(let t=o;t<l;t++)i+=E[e*A+u*R+t*N]*I[t*D+r*L+n*F];$[t*P+(u*T+r)]+=i}}}}}return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(y,O.dtype,O.values)}const $P={kernelName:Lg,backendName:"cpu",kernelFunc:OP},UP={kernelName:_v,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:i,b:s,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=OP({inputs:{a:i,b:s},attrs:{transposeA:l,transposeB:u},backend:n}),a&&(p=DP({inputs:{a:d,b:a},backend:n}),m.push(d),d=p),c&&(f=bP(n,d,c,o,h),m.push(d),d=f);for(const t of m)n.disposeIntermediateTensorInfo(t);return d}};function zP(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const BP={kernelName:gg,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;ZF(e,"abs");let r=new Float32Array(Lm(e.shape));return r=zP(n.data.get(e.dataId).values),n.makeOutput(r,e.shape,e.dtype)}},VP=eP(xg,t=>Math.acos(t)),WP={kernelName:xg,backendName:"cpu",kernelFunc:VP},GP=eP(yg,t=>Math.acosh(t)),HP={kernelName:yg,backendName:"cpu",kernelFunc:GP},jP={kernelName:bg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,r=e;ZF(e,"addN");const i=r.map(t=>n.data.get(t.dataId).values),s=Pw(r[0].shape,r[0].dtype),a=s.values;for(let t=0;t<r.length;t++){const e=i[t];for(let t=0;t<a.length;t++)a[t]+=e[t]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function qP(t,e,n,r,i){const s=e.length,a=Lm(e),o=Jm(e),l=Jm(i),u=Wm(n,Lm(i));for(let e=0;e<a;++e){const n=ag(e,s,o),i=new Array(n.length);for(let t=0;t<i.length;t++)i[t]=n[r[t]];u[sg(i,s,l)]=t[e]}return u}function XP(t){const{inputs:e,attrs:n,backend:r}=t,{x:i}=e,{perm:s}=n;ZF(i,"transpose");const a=i.shape.length,o=new Array(a);for(let t=0;t<o.length;t++)o[t]=i.shape[s[t]];const l=qP(r.data.get(i.dataId).values,i.shape,i.dtype,s,o);return{dataId:r.write(l,o,i.dtype),shape:o,dtype:i.dtype}}const KP={kernelName:mv,backendName:"cpu",kernelFunc:XP},YP={kernelName:wg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r;ZF(i,"all");const o=Bm(s,i.shape);let l=o;const u=ZS(l,i.shape.length);let c=i;null!=u&&(c=XP({inputs:{x:i},backend:n,attrs:{perm:u}}),l=QS(l.length,i.shape.length)),YS("all",l,c.shape.length);const[h,d]=XS(c.shape,l),p=Lm(d),f=ng(Lm(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*p;let n=m[e];for(let t=0;t<p;++t){const r=m[e+t];n=n&&r}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const t=FP({inputs:{x:g},backend:n,attrs:{shape:KS(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},ZP={kernelName:_g,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r;ZF(i,"any");const o=Bm(s,i.shape);let l=o;const u=ZS(l,i.shape.length);let c=i;null!=u&&(c=XP({inputs:{x:i},backend:n,attrs:{perm:u}}),l=QS(l.length,i.shape.length)),YS("any",l,c.shape.length);const[h,d]=XS(c.shape,l),p=Lm(d),f=ng(Lm(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*p;let n=m[e];for(let t=0;t<p;++t){const r=m[e+t];n=n||r}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const t=FP({inputs:{x:g},backend:n,attrs:{shape:KS(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},JP={kernelName:Sg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s}=r;ZF(i,"argMax");let a=Bm(s,i.shape);const o=ZS(a,i.shape.length);let l=i;const u=[];null!=o&&(l=XP({inputs:{x:i},backend:n,attrs:{perm:o}}),u.push(l),a=QS(a.length,l.shape.length)),a=[a[0]],YS("argMax",a,l.shape.length);const[c,h]=XS(l.shape,a),d=ng(Lm(c),"int32"),p=Lm(h),f=n.data.get(l.dataId).values;for(let t=0;t<d.length;++t){const e=t*p;let n=f[e],r=0;for(let t=0;t<p;++t){const i=f[e+t];i>n&&(n=i,r=t)}d[t]=r}return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(c,"int32",d)}},QP={kernelName:Tg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s}=r;ZF(i,"argMin");let a=Bm(s,i.shape);const o=ZS(a,i.shape.length);let l=i;const u=[];null!=o&&(l=XP({inputs:{x:i},backend:n,attrs:{perm:o}}),u.push(l),a=QS(a.length,l.shape.length)),a=[a[0]],YS("argMin",a,l.shape.length);const[c,h]=XS(l.shape,a),d=ng(Lm(c),"int32"),p=Lm(h),f=n.data.get(l.dataId).values;for(let t=0;t<d.length;++t){const e=t*p;let n=f[e],r=0;for(let t=0;t<p;++t){const i=f[e+t];i<n&&(n=i,r=t)}d[t]=r}return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(c,"int32",d)}},tO=eP(Mg,t=>Math.asin(t)),eO={kernelName:Mg,backendName:"cpu",kernelFunc:tO},nO=eP(Eg,t=>Math.asinh(t)),rO={kernelName:Eg,backendName:"cpu",kernelFunc:nO},iO=eP(Ig,t=>Math.atan(t)),sO={kernelName:Ig,backendName:"cpu",kernelFunc:iO},aO=uP((t,e)=>Math.atan2(t,e)),oO=kP(kg,aO),lO={kernelName:kg,backendName:"cpu",kernelFunc:oO},uO=eP(Cg,t=>Math.atanh(t)),cO={kernelName:Cg,backendName:"cpu",kernelFunc:uO};function hO(t,e,n,r,i,s){const a=i.strideHeight,o=i.strideWidth,l=i.dilationHeight,u=i.dilationWidth,c=i.effectiveFilterHeight,h=i.effectiveFilterWidth,d=i.padInfo.top,p=i.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Pw(i.outShape,n),g=m.values,x=i.outShape[1]*i.outShape[2]*i.outShape[3],y=i.outShape[2]*i.outShape[3],v=i.outShape[3];for(let e=0;e<i.batchSize;++e){const n=e*x,m=e*r[0];for(let e=0;e<i.inChannels;++e)for(let x=0;x<i.outHeight;++x){const b=x*a-d,w=Math.max(0,b),_=Math.min(i.inHeight,c+b),S=n+x*y;for(let n=0;n<i.outWidth;++n){const a=n*o-p,c=Math.max(0,a),d=Math.min(i.inWidth,h+a);let x=f,y=0,b=0;for(let n=w;n<_;n+=l){const i=m+n*r[1];for(let n=c;n<d;n+=u){const a=t[i+n*r[2]+e];"max"===s&&a>x?x=a:"avg"===s&&(y+=a,b++)}if(isNaN(x))break}g[S+n*v+e]="avg"===s?y/b:x}}}return m}function dO(t,e,n,r,i=!1,s=!1){const a=Pw(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=Pw(e,n,t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let x=g;for(;x<0;)x+=u;const y=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const v=Math.min(r.inWidth,d+h);let b=Number.NEGATIVE_INFINITY,w=-1;for(let n=x;n<y;n+=u){const a=n-g;for(let o=p;o<v;o+=c){const l=o-h,u=m.get(t,n,o,e);u>b&&(b=u,w=i?s?((t*r.inHeight+n)*r.inWidth+o)*r.inChannels+e:(n*r.inWidth+o)*r.inChannels+e:a*d+l)}}a.set(w,t,n,o,e)}}return a}function pO(t,e,n,r,i,s){const a=i.strideDepth,o=i.strideHeight,l=i.strideWidth,u=i.dilationDepth,c=i.dilationHeight,h=i.dilationWidth,d=i.effectiveFilterDepth,p=i.effectiveFilterHeight,f=i.effectiveFilterWidth,m=i.padInfo.front,g=i.padInfo.top,x=i.padInfo.left,y="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Pw(i.outShape,n),b=v.values,w=i.outShape[1]*i.outShape[2]*i.outShape[3]*i.outShape[4],_=i.outShape[2]*i.outShape[3]*i.outShape[4],S=i.outShape[3]*i.outShape[4],T=i.outShape[4];for(let e=0;e<i.batchSize;++e){const n=e*w,v=e*r[0];for(let e=0;e<i.inChannels;++e)for(let w=0;w<i.outDepth;++w){const M=w*a-m;let E=M;for(;E<0;)E+=u;const I=Math.min(i.inDepth,d+M),C=n+w*_;for(let n=0;n<i.outHeight;++n){const a=n*o-g;let d=a;for(;d<0;)d+=c;const m=Math.min(i.inHeight,p+a),w=C+n*S;for(let n=0;n<i.outWidth;++n){const a=n*l-x;let o=a;for(;o<0;)o+=h;const p=Math.min(i.inWidth,f+a),g=w+n*T;let _=y,S=0,M=0;for(let n=E;n<I;n+=u){const i=v+n*r[1];for(let n=d;n<m;n+=c){const a=i+n*r[2];for(let n=o;n<p;n+=h){const i=t[a+n*r[3]+e];if("max"===s&&i>_?_=i:"avg"===s&&(S+=i,M++),isNaN(_))break}if(isNaN(_))break}if(isNaN(_))break}b[g+e]="avg"===s?S/Math.max(M,1):_}}}}return v}const fO={kernelName:Ag,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e;ZF(i,"avgPool");const{filterSize:s,strides:a,pad:o,dimRoundingMode:l}=r;Rm(nS(a,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`);const u=j_(i.shape,s,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&Fm(u.inShape,u.outShape))c=sP({inputs:{x:i},backend:n});else{const t=n.data.get(i.dataId).values,e=Jm(i.shape),r=hO(t,i.shape,i.dtype,e,u,"avg");c=n.makeTensorInfo(u.outShape,i.dtype,r.values)}return c}},mO={kernelName:Ng,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{filterSize:s,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;ZF(i,"avgPool3d");const c=q_(i.shape,s,a,1,o,l,u),h=pO(n.data.get(i.dataId).values,i.shape,i.dtype,Jm(i.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},gO={kernelName:Dg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;ZF([i,s],"avgPool3DGrad");const c=q_(s.shape,a,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,x=c.dilationDepth,y=c.dilationHeight,v=c.dilationWidth,b=c.effectiveFilterDepth,w=c.effectiveFilterHeight,_=c.effectiveFilterWidth,S=b-1-c.padInfo.front,T=_-1-c.padInfo.left,M=w-1-c.padInfo.top,E=Pw(s.shape,"float32"),I=1/(f*m*g),C=n.bufferSync(i);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let i=0;i<c.inWidth;++i){const s=n-S,a=r-M,o=i-T;let l=0;for(let n=0;n<b;n+=x){const r=(s+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=y){const i=(a+n)/d;if(!(i<0||i>=c.outHeight||Math.floor(i)!==i))for(let n=0;n<_;n+=v){const s=(o+n)/p;s<0||s>=c.outWidth||Math.floor(s)!==s||(l+=C.get(t,r,i,s,e))}}}E.set(l*I,t,n,r,i,e)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}},xO={kernelName:Rg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s}=e,a=s;ZF([i,s],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=j_(a.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,x=c.effectiveFilterHeight,y=c.effectiveFilterWidth,v=y-1-c.padInfo.left,b=x-1-c.padInfo.top,w=Pw(a.shape,"float32"),_=1/(p*f),S=n.data.get(i.dataId).values,T=Pw(i.shape,"float32",S);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const i=n-b,s=r-v;let a=0;for(let n=0;n<x;n+=m){const r=(i+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<y;n+=g){const i=(s+n)/d;i<0||i>=c.outWidth||Math.floor(i)!==i||(a+=T.get(t,r,i,e))}}w.set(a*_,t,n,r,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},yO={kernelName:Mx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,scale:s,offset:a,mean:o,variance:l}=e;Rm(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),Rm(null==a||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),Rm(null==s||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ZF([i,o,l,s,a],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(i.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,x=p.length,y=d.length,v=h.length;let b=0,w=0,_=0,S=0;for(let t=0;t<c.length;++t)m[t]=f[b++]+(c[t]-h[w++])*p[_++]/Math.sqrt(d[S++]+u),b>=g&&(b=0),w>=v&&(w=0),_>=x&&(_=0),S>=y&&(S=0);return n.makeTensorInfo(i.shape,i.dtype,m)}};function vO(t,e,n,r,i){const s=O_(r,e,n),a=Lm(n),o=Jm(r);if(s){const n=$_(e,o);return"string"===i?t.slice(n,n+a):t.subarray(n,n+a)}const l=Pw(r,i,"string"===i?nI(t):t),u=Pw(n,i);for(let t=0;t<u.size;++t){const n=u.indexToLoc(t),r=n.map((t,n)=>t+e[n]);u.set(l.get(...r),...n)}return"string"===i?rI(u.values):u.values}function bO(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{begin:s,size:a}=r;ZF(i,"slice");const[o,l]=U_(i,s,a);M_(i,o,l);const u=vO(n.data.get(i.dataId).values,o,l,i.shape,i.dtype);return n.makeTensorInfo(l,i.dtype,u)}const wO={kernelName:zy,backendName:"cpu",kernelFunc:bO},_O={kernelName:Fg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{blockShape:s,crops:a}=r;ZF([i],"batchToSpaceND");const o=s.reduce((t,e)=>t*e),l=sE(i.shape,s,o),u=aE(l.length,s.length),c=oE(i.shape,s,o),h=lE(a,s.length),d=uE(c,a,s.length),p=FP({inputs:{x:i},backend:n,attrs:{shape:l}}),f=XP({inputs:{x:p},backend:n,attrs:{perm:u}}),m=FP({inputs:{x:f},backend:n,attrs:{shape:c}}),g=bO({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function SO(t,e,n,r,i){const s=Lm(r),a=ng(i,n);for(let n=0;n<t.length;n++){const r=t[n];if(r<0)throw new Error("Input x must be non-negative!");r>=i||(a[r]+=s>0?e[n]:1)}return a}function TO(t,e,n,r=!1){const i=t.shape[0],s=t.shape[1],a=Pw([i,n],e.dtype);for(let o=0;o<i;o++)for(let i=0;i<s;i++){const s=t.get(o,i);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?a.set(1,o,s):e.size>0?a.set(a.get(o,s)+e.get(o,i),o,s):a.set(a.get(o,s)+1,o,s))}return a}const MO={kernelName:Pg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,weights:s}=e,{size:a}=r,o=SO(n.data.get(i.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,a);return n.makeTensorInfo([a],s.dtype,o)}},EO=uP((t,e)=>t&e),IO={kernelName:Og,backendName:"cpu",kernelFunc:kP(Og,EO)},CO={kernelName:$g,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:r,s1:i}=e,s=n.data.get(r.dataId).values,a=n.data.get(i.dataId).values,o=u_(Array.from(s),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},kO=tP(t=>Math.ceil(t)),AO=nP(zg,kO),RO={kernelName:zg,backendName:"cpu",kernelFunc:AO},NO=eP(Bg,(t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t}),DO={kernelName:Bg,backendName:"cpu",kernelFunc:NO},LO={kernelName:Wg,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,r=new Float32Array(Lm(e.shape)),i=n.data.get(e.dataId),s=i.complexTensorInfos.real,a=i.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values;for(let t=0;t<o.length;t++){const e=o[t],n=l[t];r[t]=Math.hypot(e,n)}return n.makeOutput(r,e.shape,"float32")}};function FO(t,e,n,r){const i=Gm(n,Lm(e));if(r&&"string"!==n){let e=0;t.forEach(t=>{const n=Lm(t.shape);i.set(t.vals,e),e+=n})}else{let r=0;t.forEach(t=>{const s="string"===n?nI(t.vals):t.vals;let a=0;for(let n=0;n<t.shape[0];++n){const o=n*e[1]+r;for(let e=0;e<t.shape[1];++e)i[o+e]=s[a++]}r+=t.shape[1]})}return i}function PO(t){const{inputs:e,backend:n}=t,{input:r}=e,i=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(i.dataId).values;return n.makeTensorInfo(i.shape,i.dtype,s)}const OO={kernelName:Nx,backendName:"cpu",kernelFunc:PO};function $O(t){const{inputs:e,backend:n,attrs:r}=t,{axis:i}=r,s=Bm(i,e[0].shape)[0];KM(e.map(t=>t.shape),s);let a=YM(e.map(t=>t.shape),s);if(0===Lm(a))return n.makeTensorInfo(a,e[0].dtype,[]);const o=e.filter(t=>Lm(t.shape)>0);if(1===o.length)return sP({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const t=o.map(t=>TP({inputs:{input:t},backend:n})),e=o.map(t=>PO({inputs:{input:t},backend:n})),r=$O({inputs:t,backend:n,attrs:{axis:s}}),i=$O({inputs:e,backend:n,attrs:{axis:s}}),a=wP({inputs:{real:r,imag:i},backend:n});return t.forEach(t=>n.disposeIntermediateTensorInfo(t)),e.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),a}const l=o.map(t=>{const e=Lm(t.shape.slice(s));return FP({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})}),u=l.map(t=>({vals:n.data.get(t.dataId).values,shape:t.shape}));a=YM(l.map(t=>t.shape),1);const c=1===l[0].shape[0],h=FO(u,a,e[0].dtype,c),d=YM(o.map(t=>t.shape),s),p=n.makeTensorInfo(d,e[0].dtype,h);return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),p}const UO={kernelName:Gg,backendName:"cpu",kernelFunc:$O};function zO(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;ZF([i,s],"conv2d");const h=iS(l),d=X_(i.shape,s.shape,a,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,x=d.padInfo.left,y=d.padInfo.top,v="channelsLast"===d.dataFormat,b=new hb(d.outShape,i.dtype),w=Jm(i.shape),_=Jm(s.shape),S=w[0],T=v?w[1]:w[2],M=v?w[2]:1,E=v?1:w[1],I=b.strides[0],C=v?b.strides[1]:b.strides[2],k=v?b.strides[2]:1,A=v?1:b.strides[1],R=n.data.get(i.dataId).values,N=n.data.get(s.dataId).values,D=b.values;for(let t=0;t<d.batchSize;++t){const e=t*S,n=t*I;for(let t=0;t<d.outHeight;++t){const r=n+t*C,i=t*d.strideHeight-y;for(let t=0;t<p;++t){const n=i+t*m;if(n<0||n>=d.inHeight)continue;const s=t*_[0],a=e+n*T;for(let t=0;t<d.outWidth;++t){const e=r+t*k,n=t*d.strideWidth-x;for(let t=0;t<f;++t){const r=n+t*g;if(r<0||r>=d.inWidth)continue;const i=a+r*M;let o=s+t*_[1];for(let t=0;t<d.inChannels;++t){const n=R[i+t*E];for(let t=0;t<d.outChannels;++t)D[e+t*A]+=n*N[o+t];o+=d.outChannels}}}}}}return n.makeTensorInfo(b.shape,b.dtype,D)}const BO={kernelName:Hg,backendName:"cpu",kernelFunc:zO},VO={kernelName:jg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,dy:s}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;ZF([i,s],"conv2dBackpropFilter");const h=iS(l),d=X_(i.shape,c,a,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,x="channelsLast"===d.dataFormat,y=new hb(d.filterShape,"float32"),v=d.padInfo.left,b=d.padInfo.top,w=n.data.get(i.dataId).values,_=n.data.get(s.dataId).values,S=new hb(i.shape,i.dtype,w),T=new hb(s.shape,s.dtype,_);for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((b-t)/p)),n=Math.min(d.outHeight,(d.inHeight+b-t)/p);for(let r=0;r<g;++r){const i=Math.max(0,Math.ceil((v-r)/f)),s=Math.min(d.outWidth,(d.inWidth+v-r)/f);for(let a=0;a<d.inChannels;++a)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=e;c<n;++c){const e=t+c*p-b;for(let t=i;t<s;++t){const n=r+t*f-v;l+=x?S.get(u,e,n,a)*T.get(u,c,t,o):S.get(u,a,e,n)*T.get(u,o,c,t)}}y.set(l,t,r,a,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},WO={kernelName:qg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,filter:s}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;ZF([i,s],"conv2dBackpropInput");const h=Jm(s.shape),d=Jm(i.shape);let p=iS(u);const f=X_(a,s.shape,o,1,l,c,!1,p),m=new hb(f.inShape,"float32"),g=m.values,x=n.data.get(i.dataId).values,y=n.data.get(s.dataId).values,[v,b,w]=h,{batchSize:_,filterHeight:S,filterWidth:T,inChannels:M,inHeight:E,inWidth:I,outChannels:C,outHeight:k,outWidth:A,strideHeight:R,strideWidth:N}=f;p=f.dataFormat;const D=S-1-f.padInfo.top,L=T-1-f.padInfo.left,F="channelsLast"===p,P=m.strides[0],O=F?m.strides[1]:m.strides[2],$=F?m.strides[2]:1,U=F?1:m.strides[1],z=d[0],B=F?d[1]:d[2],V=F?d[2]:1,W=F?1:d[1];for(let t=0;t<_;++t)for(let e=0;e<M;++e)for(let n=0;n<E;++n){const r=n-D,i=Math.max(0,Math.ceil(r/R)),s=Math.min(k,(S+r)/R);for(let a=0;a<I;++a){const o=a-L,l=Math.max(0,Math.ceil(o/N)),u=Math.min(A,(T+o)/N);let c=0;for(let n=i;n<s;++n){const i=n*R-r;for(let r=l;r<u;++r){const s=z*t+B*n+V*r,a=v*(S-1-i)+b*(T-1-(r*N-o))+w*e;for(let t=0;t<C;++t)c+=x[s+W*t]*y[a+t]}}g[P*t+O*n+$*a+U*e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},GO={kernelName:Xg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dilations:l}=r;ZF([i,s],"conv3d");const u=K_(i.shape,s.shape,a,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,x=g.front,y=g.left,v=g.top,b=new hb(u.outShape,i.dtype),w=n.data.get(i.dataId).values,_=n.data.get(s.dataId).values,S=b.values,T=Jm(i.shape),M=Jm(s.shape);for(let t=0;t<u.batchSize;++t){const e=t*T[0],n=t*b.strides[0];for(let t=0;t<u.outDepth;++t){const r=n+t*b.strides[1],i=t*u.strideDepth-x;for(let t=0;t<c;++t){const n=i+t*p;if(n<0||n>=u.inDepth)continue;const s=t*M[0],a=e+n*T[1];for(let t=0;t<u.outHeight;++t){const e=r+t*b.strides[2],n=t*u.strideHeight-v;for(let t=0;t<h;++t){const r=n+t*f;if(r<0||r>=u.inHeight)continue;const i=s+t*M[1],o=a+r*T[2];for(let t=0;t<u.outWidth;++t){const n=e+t*u.outChannels,r=t*u.strideWidth-y;for(let t=0;t<d;++t){const e=r+t*m;if(e<0||e>=u.inWidth)continue;const s=i+t*M[2],a=o+e*u.inChannels;let l=s;for(let t=0;t<u.inChannels;++t){const e=w[a+t];for(let t=0;t<u.outChannels;++t)S[n+t]+=e*_[l+t];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},HO={kernelName:Kg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,dy:s}=e,{strides:a,pad:o,filterShape:l}=r;ZF([i,s],"conv3dBackpropFilterV2");const u=Jm(i.shape),c=Jm(s.shape),h=K_(i.shape,l,a,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,x=h.filterWidth,y=new hb(h.filterShape,"float32"),v=y.values,[b,w,_,S]=y.strides,T=n.data.get(s.dataId).values,[M,E,I,C]=c,k=n.data.get(i.dataId).values,[A,R,N,D]=u,L=h.padInfo.front,F=h.padInfo.left,P=h.padInfo.top;for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((L-t)/d)),n=Math.min(h.outDepth,(h.inDepth+L-t)/d),r=t*b;for(let i=0;i<g;++i){const s=Math.max(0,Math.ceil((P-i)/p)),a=Math.min(h.outHeight,(h.inHeight+P-i)/p),o=i*w+r;for(let r=0;r<x;++r){const l=Math.max(0,Math.ceil((F-r)/f)),u=Math.min(h.outWidth,(h.inWidth+F-r)/f),c=r*_+o;for(let o=0;o<h.inChannels;++o){const m=o*S+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,x=m*M;for(let m=e;m<n;++m){const e=(t+m*d-L)*R+h,n=m*E+x;for(let t=s;t<a;++t){const s=(i+t*p-P)*N+e,a=t*I+n;for(let t=l;t<u;++t){const e=t*C+a;g+=k[(r+t*f-F)*D+s+o]*T[e+c]}}}}v[m+c]=g}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},jO={kernelName:Yg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,filter:s}=e,{pad:a,strides:o,inputShape:l}=r;ZF([i],"conv3dBackpropInputV2");const u=Jm(i.shape),c=Jm(s.shape),h=K_(l,s.shape,o,1,a),d=new hb(h.inShape,"float32"),p=d.values,[f,m,g,x]=d.strides,y=n.data.get(i.dataId).values,[v,b,w,_]=u,S=n.data.get(s.dataId).values,[T,M,E,I]=c,{batchSize:C,filterDepth:k,filterHeight:A,filterWidth:R,inChannels:N,inDepth:D,inHeight:L,inWidth:F,outChannels:P,outDepth:O,outHeight:$,outWidth:U,strideDepth:z,strideHeight:B,strideWidth:V}=h,W=k-1-h.padInfo.front,G=A-1-h.padInfo.top,H=R-1-h.padInfo.left;for(let t=0;t<C;++t)for(let e=0;e<N;++e)for(let n=0;n<D;++n){const r=n-W,i=Math.max(0,Math.ceil(r/z)),s=Math.min(O,(k+r)/z);for(let a=0;a<L;++a){const o=a-G,l=Math.max(0,Math.ceil(o/B)),u=Math.min($,(A+o)/B);for(let c=0;c<F;++c){const h=c-H,d=Math.max(0,Math.ceil(h/V)),C=Math.min(U,(R+h)/V);let N=0;for(let n=i;n<s;++n){const i=n*z-r;for(let r=l;r<u;++r){const s=r*B-o;for(let a=d;a<C;++a){const o=v*t+b*n+w*r+_*a,l=T*(k-1-i)+M*(A-1-s)+E*(R-1-(a*V-h))+I*e;for(let t=0;t<P;++t)N+=y[o+t]*S[l+t]}}}p[f*t+m*n+g*a+x*c+e]=N}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},qO=eP(Zg,t=>Math.cos(t)),XO={kernelName:Zg,backendName:"cpu",kernelFunc:qO},KO=eP(Jg,t=>Math.cosh(t)),YO={kernelName:Jg,backendName:"cpu",kernelFunc:KO},ZO={kernelName:ex,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:i,boxes:s,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,d,p]=i.shape,f=s.shape[0],[m,g]=o,x=Pw([f,m,g,p],"float32"),y=n.data.get(s.dataId).values,v=n.data.get(a.dataId).values,b=n.data.get(i.dataId).values,w=Jm(i.shape),_=Jm(x.shape);for(let t=0;t<f;t++){const e=4*t,n=y[e],r=y[e+1],i=y[e+2],s=y[e+3],a=v[t];if(a>=c)continue;const o=m>1?(i-n)*(h-1)/(m-1):0,f=g>1?(s-r)*(d-1)/(g-1):0;for(let e=0;e<m;e++){const c=m>1?n*(h-1)+e*o:.5*(n+i)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const i=r+n*_[2]+e*_[1]+t*_[0];x.values[i]=u}else if("bilinear"===l){const n=Math.floor(c),i=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?r*(d-1)+l*f:.5*(r+s)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+l*_[2]+e*_[1]+t*_[0];x.values[r]=u}continue}const h=Math.floor(c),m=Math.ceil(c),y=c-h;for(let r=0;r<p;r++){let s=r+h*w[2]+n*w[1]+a*w[0];const u=b[s];s=r+m*w[2]+n*w[1]+a*w[0];const c=b[s];s=r+h*w[2]+i*w[1]+a*w[0];const d=b[s];s=r+m*w[2]+i*w[1]+a*w[0];const p=u+(c-u)*y,f=d+(b[s]-d)*y;s=r+l*_[2]+e*_[1]+t*_[0],x.values[s]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const i=g>1?r*(d-1)+n*f:.5*(r+s)*(d-1);if(i<0||i>d-1){for(let r=0;r<p;r++){const i=r+n*_[2]+e*_[1]+t*_[0];x.values[i]=u}continue}const o=Math.round(i),l=Math.round(c);for(let r=0;r<p;r++){const i=r+o*w[2]+l*w[1]+a*w[0],s=r+n*_[2]+e*_[1]+t*_[0];x.values[s]=b[i]}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},JO={kernelName:Qg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,exclusive:a,reverse:o}=r;ZF(i,"cumprod");const l=ZS([s],i.shape.length);let u=i;null!=l&&(u=XP({inputs:{x:i},backend:n,attrs:{perm:l}}));const c=QS(1,i.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Tb(u.dtype,"int32"),d=eg(Lm(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let t=0;t<p.length;t+=f)for(let e=0;e<f;e++){const n=m(t,e);if(0===e)d[n]=a?1:p[n];else{const r=m(t,e-1);d[n]=a?p[r]*d[r]:p[n]*d[r]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const t=XP({inputs:{x:g},backend:n,attrs:{perm:JS(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),t}return g}},QO={kernelName:tx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,exclusive:a,reverse:o}=r;ZF(i,"cumsum");const l=ZS([s],i.shape.length);let u=i;null!=l&&(u=XP({inputs:{x:i},backend:n,attrs:{perm:l}}));const c=QS(1,i.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Tb(u.dtype,"int32"),d=ng(Lm(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let t=0;t<p.length;t+=f)for(let e=0;e<f;e++){const n=m(t,e);if(0===e)d[n]=a?0:p[n];else{const r=m(t,e-1);d[n]=a?p[r]+d[r]:p[n]+d[r]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const t=XP({inputs:{x:g},backend:n,attrs:{perm:JS(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),t}return g}},t$={kernelName:nx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,weights:s}=e,{size:a,binaryOutput:o}=r;if(1===i.shape.length){const t=SO(n.data.get(i.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,a);return n.makeTensorInfo([a],s.dtype,t)}if(2===i.shape.length){const t=TO(n.bufferSync(i),n.bufferSync(s),a,o);return n.makeTensorInfo(t.shape,s.dtype,t.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}},e$={kernelName:rx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{blockSize:s,dataFormat:a}=r;Rm("NHWC"===a,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);const o=i.shape[0],l=i.shape[1],u=i.shape[2],c=i.shape[3],h=l*s,d=u*s,p=c/(s*s),f=n.data.get(i.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let t=0;t<o;++t)for(let e=0;e<h;++e){const n=Math.floor(e/s),r=e%s;for(let e=0;e<d;++e){const i=Math.floor(e/s),a=(r*s+e%s)*p;for(let e=0;e<p;++e){const r=e+a+c*(i+u*(n+l*t));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,d,p],i.dtype,m)}};function n$(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;ZF([i,s],"depthwiseConv2DNative");const c=Jm(i.shape),h=Jm(s.shape);let d=l;null==d&&(d=[1,1]),Rm(nS(a,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`);const p=X_(i.shape,s.shape,a,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:x,padInfo:y}=p,v=y.left,b=y.top,w=p.outChannels/p.inChannels,_=new hb(p.outShape,i.dtype),S=n.data.get(i.dataId).values,T=n.data.get(s.dataId).values,M=_.values;for(let t=0;t<p.batchSize;++t){const e=t*c[0],n=t*_.strides[0];for(let t=0;t<p.outHeight;++t){const r=n+t*_.strides[1],i=t*p.strideHeight-b;for(let t=0;t<f;++t){const n=i+t*g;if(n<0||n>=p.inHeight)continue;const s=t*h[0],a=e+n*c[1];for(let t=0;t<p.outWidth;++t){const e=r+t*_.strides[2],n=t*p.strideWidth-v;for(let t=0;t<m;++t){const r=n+t*x;if(r<0||r>=p.inWidth)continue;const i=s+t*h[1],o=a+r*p.inChannels;let l=e,u=i;for(let t=0;t<p.inChannels;++t){const e=S[o+t];for(let t=0;t<w;++t)M[l+t]+=e*T[u+t];l+=w,u+=w}}}}}}return n.makeTensorInfo(_.shape,_.dtype,_.values)}const r$={kernelName:ix,backendName:"cpu",kernelFunc:n$},i$={kernelName:sx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,dy:s}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;ZF([i,s],"depthwiseConv2dNativeBackpropFilter");const h=X_(i.shape,c,a,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new hb(h.filterShape,"float32"),x=h.padInfo.left,y=h.padInfo.top,v=h.outChannels/h.inChannels,b=n.data.get(i.dataId).values,w=new hb(i.shape,i.dtype,b),_=n.data.get(s.dataId).values,S=new hb(s.shape,s.dtype,_);for(let t=0;t<f;++t){const e=Math.max(0,Math.ceil((y-t)/d)),n=Math.min(h.outHeight,(h.inHeight+y-t)/d);for(let r=0;r<m;++r){const i=Math.max(0,Math.ceil((x-r)/p)),s=Math.min(h.outWidth,(h.inWidth+x-r)/p);for(let a=0;a<h.outChannels;++a){const o=Math.trunc(a/v),l=a%v;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=e;c<n;++c){const e=t+c*d-y;for(let t=i;t<s;++t){const n=r+t*p-x;u+=w.get(l,e,n,o)*S.get(l,c,t,a)}}g.set(u,t,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},s$={kernelName:ax,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,filter:s}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;ZF([i,s],"depthwiseConv2DNativeBackpropInput");const h=Jm(i.shape),d=Jm(s.shape),p=X_(c,s.shape,a,o,l,u,!0),f=new hb(p.inShape,"float32"),m=f.values,[g,x,y]=f.strides,v=n.data.get(i.dataId).values,[b,w,_]=h,S=n.data.get(s.dataId).values,[T,M,E]=d,{batchSize:I,filterHeight:C,filterWidth:k,inChannels:A,inHeight:R,inWidth:N,outChannels:D,outHeight:L,outWidth:F,strideHeight:P,strideWidth:O}=p,$=C-1-p.padInfo.top,U=k-1-p.padInfo.left,z=D/A;for(let t=0;t<I;++t)for(let e=0;e<A;++e)for(let n=0;n<R;++n){const r=n-$,i=Math.max(0,Math.ceil(r/P)),s=Math.min(L,(C+r)/P);for(let a=0;a<N;++a){const o=a-U,l=Math.max(0,Math.ceil(o/O)),u=Math.min(F,(k+o)/O);let c=0;for(let n=i;n<s;++n){const i=n*P-r;for(let r=l;r<u;++r){const s=b*t+w*n+_*r,a=T*(C-1-i)+M*(k-1-(r*O-o))+E*e;for(let t=0;t<z;++t)c+=v[s+(e*z+t)]*S[a+t]}}m[g*t+x*n+y*a+e]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},a$={kernelName:ox,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,i=Lm(r.shape),s=n.data.get(r.dataId).values,a=Pw([i,i],r.dtype),o=a.values;for(let t=0;t<s.length;t++)o[t*i+t]=s[t];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,a.dtype,a.values)}},o$={kernelName:lx,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:i}=t,{strides:s,pad:a,dilations:o}=n,l=e,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(i.dataId).values,d=i.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:x,outWidth:y,padInfo:v,strideHeight:b,strideWidth:w,filterHeight:_,filterWidth:S,dilationHeight:T,dilationWidth:M,outShape:E}=H_(r.shape,i.shape,s,a,"NHWC",o),I=Lm(E),C=E.length,k=Gm(r.dtype,I);for(let t=0;t<p;++t)for(let e=0;e<x;++e){const n=e*b-v.top;for(let s=0;s<y;++s){const a=s*w-v.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<_;++e){const s=n+e*T;if(s>=0&&s<f)for(let n=0;n<S;++n){const p=a+n*M;if(p>=0&&p<m){const a=sg([t,s,p,o],c,Jm(r.shape)),f=sg([e,n,o],d,Jm(i.shape)),m=u[a]+h[f];m>l&&(l=m)}}}k[sg([t,e,s,o],C,Jm(E))]=l}}}return{dataId:l.write(Zv(k,r.dtype),E,r.dtype),shape:E,dtype:r.dtype}}},l$={kernelName:cx,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:i,dy:s}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=tg(r.shape,u.data.get(r.dataId).values),h=tg(i.shape,u.data.get(i.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:y,strideHeight:v,strideWidth:b,filterHeight:w,filterWidth:_,dilationHeight:S,dilationWidth:T,outShape:M}=H_(r.shape,i.shape,a,o,"NHWC",l);Rm(s.rank===M.length,()=>`Error in ${cx}, dy must have the same rank as output ${M.length}, but got ${s.rank}`);const E=tg(M,u.data.get(s.dataId).values),I=rg(i.shape,i.dtype);for(let t=0;t<d;++t)for(let e=0;e<g;++e){const n=e*v-y.top;for(let r=0;r<x;++r){const i=r*b-y.left;for(let s=0;s<m;++s){let a=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<w;++e){const r=n+e*S;if(r>=0&&r<p)for(let n=0;n<_;++n){const u=i+n*T;if(u>=0&&u<f){const i=c[t][r][u][s]+h[e][n][s];i>a&&(a=i,o=e,l=n)}}}I[o][l][s]+=E[t][e][r][s]}}}return{dataId:u.write(Zv(I,r.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}},u$={kernelName:ux,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:i,dy:s}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=tg(r.shape,u.data.get(r.dataId).values),h=tg(i.shape,u.data.get(i.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:y,strideHeight:v,strideWidth:b,filterHeight:w,filterWidth:_,dilationHeight:S,dilationWidth:T,outShape:M}=H_(r.shape,i.shape,a,o,"NHWC",l);Rm(s.rank===M.length,()=>`Error in ${ux}, dy must have the same rank as output ${M.length}, but got ${s.rank}`);const E=tg(M,u.data.get(s.dataId).values),I=rg(r.shape,r.dtype);for(let t=0;t<d;++t)for(let e=0;e<g;++e){const n=e*v-y.top;for(let r=0;r<x;++r){const i=r*b-y.left;for(let s=0;s<m;++s){let a=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=i<0?0:i;for(let e=0;e<w;++e){const r=n+e*S;if(r>=0&&r<p)for(let n=0;n<_;++n){const u=i+n*T;if(u>=0&&u<f){const i=c[t][r][u][s]+h[e][n][s];i>a&&(a=i,o=r,l=u)}}}I[t][o][l][s]+=E[t][e][r][s]}}}return{dataId:u.write(Zv(I,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},c$={kernelName:"Draw",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:i}=e,{canvas:s,options:a}=r,{contextOptions:o,imageOptions:l}=a||{},u=(null==l?void 0:l.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=s.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=i.shape.slice(0,2),f=2===i.shape.length?1:i.shape[2],m=n.data.get(i.dataId).values,g="float32"===i.dtype?255:1,x=new Uint8ClampedArray(p*d*4);for(let t=0;t<d*p;++t){const e=[0,0,0,255*u];for(let n=0;n<f;n++){const r=m[t*f+n];if("float32"===i.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===i.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===f?(e[0]=r*g,e[1]=r*g,e[2]=r*g):e[n]=r*g}const n=4*t;x[n+0]=Math.round(e[0]),x[n+1]=Math.round(e[1]),x[n+2]=Math.round(e[2]),x[n+3]=Math.round(e[3])}s.width=p,s.height=d;const y=new ImageData(x,p,d);return h.putImageData(y,0,0),i}},h$=uP((t,e)=>t*e),d$=AP((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n})),p$=kP(ay,h$,d$),f$={kernelName:ay,backendName:"cpu",kernelFunc:p$};function m$(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r;let o;ZF(i,"sum"),o="bool"===i.dtype?IP({inputs:{x:i},backend:n,attrs:{dtype:"int32"}}):sP({inputs:{x:i},backend:n});const l=o.shape.length,u=Bm(s,o.shape),c=ZS(u,l);let h=u,d=o;null!=c&&(d=XP({inputs:{x:o},backend:n,attrs:{perm:c}}),h=QS(h.length,l)),YS("sum",h,d.shape.length);const[p,f]=XS(d.shape,h);let m=SP(n,p,Tb(d.dtype,"int32"));const g=Lm(f),x=n.data.get(m.dataId).values,y=n.data.get(d.dataId).values;for(let t=0;t<x.length;++t){const e=t*g;let n=0;for(let t=0;t<g;++t)n+=y[e+t];x[t]=n}if(a){const t=m;m=FP({inputs:{x:m},backend:n,attrs:{shape:KS(m.shape,u)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const g$={kernelName:qy,backendName:"cpu",kernelFunc:m$},x$={kernelName:dx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{equation:i}=r,s=e,{allDims:a,summedDims:o,idDims:l}=LE(i,s.length);PE(a.length,l,s);const{path:u,steps:c}=OE(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let t=0;t<h;++t){for(const e of c[t]){const{permutationIndices:t,expandDims:r}=FE(p,l[e]);let i;$E(t)?i=s[e]:(i=XP({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(i));const a=i.shape.slice();for(let t=0;t<r.length;++t)a.splice(r[t],0,1);Fm(i.shape,a)||(i=FP({inputs:{x:i},backend:n,attrs:{shape:a}}),f.push(i)),null===d?d=i:(d=p$({inputs:{a:i,b:d},backend:n}),f.push(d))}t<h-1&&(u[t]>=0&&(d=m$({inputs:{x:d},backend:n,attrs:{axis:u[t]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const t of f)t!==d&&n.disposeIntermediateTensorInfo(t);return d}},y$={kernelName:fx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:r,y:i}=e;ZF([r,i],"eluGrad");const s=new Float32Array(Lm(i.shape)),a=n.data.get(i.dataId).values,o=n.data.get(r.dataId).values;for(let t=0;t<a.length;++t){const e=a[t];s[t]=e>=0?o[t]:o[t]*(e+1)}return n.makeTensorInfo(i.shape,"float32",s)}},v$=uP((t,e)=>t===e?1:0),b$=kP(gx,v$,null,"bool"),w$={kernelName:gx,backendName:"cpu",kernelFunc:b$},_$=gE,S$=xE,T$=yE,M$=vE,E$=bE,I$=wE,C$=eP(mx,t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+_$*n);return e*(1-((((I$*r+E$)*r+M$)*r+T$)*r+S$)*r*Math.exp(-n*n))}),k$={kernelName:mx,backendName:"cpu",kernelFunc:C$},A$=tP(t=>Math.exp(t)),R$=nP(xx,A$,"float32"),N$={kernelName:xx,backendName:"cpu",kernelFunc:R$};function D$(t){const{inputs:e,backend:n,attrs:r}=t,{input:i}=e,{dim:s}=r,a=i.shape.length,o=i.shape.slice();let l=s;return s<0&&(Rm(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+s+1),o.splice(l,0,1),FP({inputs:{x:i},backend:n,attrs:{shape:o}})}const L$={kernelName:yx,backendName:"cpu",kernelFunc:D$},F$=tP(t=>Math.expm1(t)),P$=nP(vx,F$),O$={kernelName:vx,backendName:"cpu",kernelFunc:P$},$$=uP((t,e)=>t/e),U$=kP(hx,$$),z$={kernelName:hx,backendName:"cpu",kernelFunc:U$},B$=uP((t,e)=>t-e),V$=AP((t,e,n,r)=>({real:t-n,imag:e-r})),W$=kP(uv,B$,V$),G$={kernelName:uv,backendName:"cpu",kernelFunc:W$};function H$(t,e,n){const r=t.shape,i=r[0],s=r[1],a=n.data.get(t.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[i,s],c=Lm(u),h=Wm("float32",c),d=Wm("float32",c);for(let t=0;t<i;t++){const r=bO({inputs:{x:o},backend:n,attrs:{begin:[t,0],size:[1,s]}}),i=bO({inputs:{x:l},backend:n,attrs:{begin:[t,0],size:[1,s]}}),a=wP({inputs:{real:r,imag:i},backend:n}),{real:u,imag:c}=j$(a,e,n),p=_E(u,c);for(let e=0;e<s;e++){const n=EE(p,e);h[t*s+e]=n.real,d[t*s+e]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=wP({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function j$(t,e,n){const r=Lm(t.shape),i=n.data.get(t.dataId),s=n.data.get(i.complexTensorInfos.real.dataId).values,a=n.data.get(i.complexTensorInfos.imag.dataId).values;if((o=r)&o-1){const t=function(t,e,n){const r=new Float32Array(2*e);for(let i=0;i<e;i++){let s=0,a=0;for(let r=0;r<e;r++){const o=kE(i*r,e,n),l=EE(t,r);s+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(s/=e,a/=e),IE(r,s,a,i)}return r}(_E(s,a),r,e);return SE(t)}{const i=q$(s,a,r,e,n),o=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(o,"float32",i.real),e=n.makeTensorInfo(o,"float32",i.imag),s=n.makeTensorInfo([],"float32",Yv(r,"float32")),a=sP({inputs:{x:s},backend:n}),l=z$.kernelFunc({inputs:{a:t,b:s},backend:n}),u=z$.kernelFunc({inputs:{a:e,b:a},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return i}var o}function q$(t,e,n,r,i){if(1===n)return{real:t,imag:e};const s=_E(t,e),a=n/2,o=TE(s),l=o.real,u=o.imag,c=[l.length],h=i.makeTensorInfo(c,"float32",l),d=i.makeTensorInfo(c,"float32",u),p=wP({inputs:{real:h,imag:d},backend:i}),f=ME(s),m=f.real,g=f.imag,x=[m.length],y=i.makeTensorInfo(x,"float32",m),v=i.makeTensorInfo(x,"float32",g),b=wP({inputs:{real:y,imag:v},backend:i}),w=q$(l,u,a,r,i),_=w.real,S=w.imag,T=[_.length],M=i.makeTensorInfo(T,"float32",_),E=i.makeTensorInfo(T,"float32",S),I=wP({inputs:{real:M,imag:E},backend:i}),C=q$(m,g,a,r,i),k=C.real,A=C.imag,R=[k.length],N=i.makeTensorInfo(R,"float32",k),D=i.makeTensorInfo(R,"float32",A),L=wP({inputs:{real:N,imag:D},backend:i}),F=CE(n,r),P=[F.real.length],O=i.makeTensorInfo(P,"float32",F.real),$=i.makeTensorInfo(P,"float32",F.imag),U=wP({inputs:{real:O,imag:$},backend:i}),z=p$({inputs:{a:U,b:L},backend:i}),B=DP({inputs:{a:I,b:z},backend:i}),V=W$({inputs:{a:I,b:z},backend:i}),W=TP({inputs:{input:B},backend:i}),G=TP({inputs:{input:V},backend:i}),H=PO({inputs:{input:B},backend:i}),j=PO({inputs:{input:V},backend:i}),q=$O({inputs:[W,G],backend:i,attrs:{axis:0}}),X=$O({inputs:[H,j],backend:i,attrs:{axis:0}}),K=i.data.get(q.dataId).values,Y=i.data.get(X.dataId).values;return i.disposeIntermediateTensorInfo(h),i.disposeIntermediateTensorInfo(d),i.disposeIntermediateTensorInfo(p),i.disposeIntermediateTensorInfo(y),i.disposeIntermediateTensorInfo(v),i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(M),i.disposeIntermediateTensorInfo(E),i.disposeIntermediateTensorInfo(I),i.disposeIntermediateTensorInfo(N),i.disposeIntermediateTensorInfo(D),i.disposeIntermediateTensorInfo(L),i.disposeIntermediateTensorInfo(O),i.disposeIntermediateTensorInfo($),i.disposeIntermediateTensorInfo(U),i.disposeIntermediateTensorInfo(z),i.disposeIntermediateTensorInfo(B),i.disposeIntermediateTensorInfo(V),i.disposeIntermediateTensorInfo(W),i.disposeIntermediateTensorInfo(H),i.disposeIntermediateTensorInfo(G),i.disposeIntermediateTensorInfo(j),i.disposeIntermediateTensorInfo(q),i.disposeIntermediateTensorInfo(X),{real:K,imag:Y}}const X$={kernelName:bx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,i=Lm(r.shape),s=r.shape[r.shape.length-1],a=FP({inputs:{x:r},backend:n,attrs:{shape:[i/s,s]}}),o=H$(a,!1,n),l=FP({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}};function K$(t){const{backend:e,attrs:n}=t,{shape:r,value:i,dtype:s}=n,a=s||Km(i),o=Gm(a,Lm(r));return function(t,e){t.fill(e)}(o,i),e.makeTensorInfo(r,a,o)}const Y$={kernelName:wx,backendName:"cpu",kernelFunc:K$},Z$={kernelName:_x,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,i=n,s=Wm(r.dtype,Lm(r.shape)),[a,o,l,u]=r.shape,c=i.data.get(r.dataId).values;for(let t=0;t<a;t++){const e=t*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let t=0;t<l;t++){const r=t*u;for(let i=0;i<u;i++){const a=Math.round(l-t-1),o=e+n+r+i;let h=c[o];a>=0&&a<l&&(h=c[e+n+a*u+i]),s[o]=h}}}}return{dataId:i.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},J$=tP(t=>Math.floor(t)),Q$=nP(Sx,J$),tU={kernelName:Sx,backendName:"cpu",kernelFunc:Q$},eU=uP((t,e)=>Math.floor(t/e)),nU=kP(Tx,eU,null,"int32"),rU={kernelName:Tx,backendName:"cpu",kernelFunc:nU},iU={kernelName:Sv,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=zO({inputs:{x:i,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const t=m;if("NCHW"===c&&1===a.shape.length&&1!==a.shape[0]){const t=FP({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});m=DP({inputs:{a:m,b:t},backend:n}),n.disposeIntermediateTensorInfo(t)}else m=DP({inputs:{a:m,b:a},backend:n});n.disposeIntermediateTensorInfo(t)}if(p){const t=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const t=FP({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=bP(n,m,p,t,f),n.disposeIntermediateTensorInfo(t)}else m=bP(n,m,p,o,f);n.disposeIntermediateTensorInfo(t)}return m}},sU={kernelName:Tv,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=n$({inputs:{x:i,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const t=m;m=DP({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=bP(n,m,p,o,f),n.disposeIntermediateTensorInfo(t)}return m}};function aU(t,e,n,r,i,s,a,o,l){const u=Pw([r,s],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let e=0;e<i;e++){const s=t[n*i+e];c+=s*a[e],r.push(s)}if(c<0||c>=l/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let t=0;t<s;t++)u.values[n*s+t]=e.get(...e.indexToLoc(c*s+t))}return u}const oU={kernelName:Ix,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:i}=e,s=Lm(r.shape),a=i.shape,o=a[a.length-1],[l,u,c,h]=cE(r,i);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=aU(n.data.get(i.dataId).values,n.bufferSync(r),r.dtype,u,o,c,h,r.shape,s);return n.makeTensorInfo(l,r.dtype,d.values)}};function lU(t,e,n){const r=Pw(n,t.dtype);for(let n=0;n<r.size;++n){const i=r.indexToLoc(n).slice(),s=i[0],a=i[2],o=e.locToIndex([s,a]);i[2]=e.values[o];const l=t.locToIndex(i);0<=l&&l<t.values.length&&(r.values[n]=t.values[l])}return r}const uU={kernelName:Ex,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,indices:s}=e,{axis:a,batchDims:o}=r;ZF([i,s],"gatherV2");const l=Bm(a,i.shape)[0],u=n.data.get(s.dataId).values,c=i.shape[l];for(let t=0;t<u.length;++t){const e=u[t];Rm(e<=c-1&&e>=0,()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`)}let h=o;null==o&&(h=0);const d=Lm(s.shape),p=eI(i,s,l,h),f=FP({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=FP({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],x=n.bufferSync(m),y=lU(n.bufferSync(f),x,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,y.dtype,y.values)}},cU=uP((t,e)=>t>e?1:0),hU=kP(Cx,cU,null,"bool"),dU={kernelName:Cx,backendName:"cpu",kernelFunc:hU},pU=uP((t,e)=>t>=e?1:0),fU=kP(kx,pU,null,"bool"),mU={kernelName:kx,backendName:"cpu",kernelFunc:fU},gU={kernelName:Rx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,i=Lm(r.shape),s=r.shape[r.shape.length-1],a=FP({inputs:{x:r},backend:n,attrs:{shape:[i/s,s]}}),o=H$(a,!0,n),l=FP({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}},xU=eP(Dx,t=>Number.isFinite(t)?1:0,"bool"),yU={kernelName:Dx,backendName:"cpu",kernelFunc:xU},vU=eP(Lx,t=>Math.abs(t)===1/0?1:0,"bool"),bU={kernelName:Lx,backendName:"cpu",kernelFunc:vU},wU=eP(Fx,t=>Number.isNaN(t)?1:0,"bool"),_U={kernelName:Fx,backendName:"cpu",kernelFunc:wU},SU=uP((t,e)=>t<e?1:0),TU=kP(Ox,SU,null,"bool"),MU={kernelName:Ox,backendName:"cpu",kernelFunc:TU},EU=uP((t,e)=>t<=e?1:0),IU=kP($x,EU,null,"bool"),CU={kernelName:$x,backendName:"cpu",kernelFunc:IU};function kU(t,e,n){const r=(e-t)/(n-1),i=ng(n,"float32");i[0]=t;for(let t=1;t<i.length;t++)i[t]=i[t-1]+r;return i}const AU={kernelName:Ux,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:i,num:s}=n,a=kU(r,i,s);return e.makeTensorInfo([a.length],"float32",a)}},RU=tP(t=>Math.log(t)),NU=nP(zx,RU),DU={kernelName:zx,backendName:"cpu",kernelFunc:NU},LU=eP(Bx,t=>Math.log1p(t)),FU={kernelName:Bx,backendName:"cpu",kernelFunc:LU},PU=uP((t,e)=>t&&e),OU=kP(Vx,PU,null,"bool"),$U={kernelName:Vx,backendName:"cpu",kernelFunc:OU},UU=eP(Wx,t=>t?0:1,"bool"),zU={kernelName:Wx,backendName:"cpu",kernelFunc:UU},BU=uP((t,e)=>t||e),VU=kP(Gx,BU,null,"bool"),WU={kernelName:Gx,backendName:"cpu",kernelFunc:VU},GU={kernelName:Hx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{depthRadius:s,bias:a,alpha:o,beta:l}=r;ZF(i,"LRN");const u=i.shape[3],c=u-1,h=n.data.get(i.dataId).values,d=Lm(i.shape),p=new Float32Array(d);function f(t){const e=t%u;let n=t-e+Math.max(0,e-s);const r=t-e+Math.min(e+s,c);let i=0;for(;n<=r;n++){const t=h[n];i+=t*t}return i}for(let t=0;t<d;t++){const e=f(t),n=h[t]*Math.pow(a+o*e,-l);p[t]=n}return n.makeTensorInfo(i.shape,i.dtype,p)}},HU={kernelName:jx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,y:s,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=r;ZF(a,"LRNGrad");const h=Lm(a.shape),d=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(i.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),x=h;for(let t=0;t<x;t++){const e=t%d,n=t-e+Math.max(0,e-o),r=t-e+Math.min(d,e+o+1);let i=0;for(let t=n;t<r;t++)i+=Math.pow(f[t],2);i=u*i+l;for(let e=n;e<r;e++){let n=-2*u*c*f[e]*m[t]/i;t===e&&(n+=Math.pow(i,-c)),n*=p[t],g[e]+=n}}return n.makeTensorInfo(a.shape,i.dtype,g)}};function jU(t,e,n,r){const i=Wm(r,Lm(n));for(let n=0;n<i.length;++n){const r=n*e;let s=t[r];for(let n=0;n<e;++n){const e=t[r+n];(Number.isNaN(e)||e>s)&&(s=e)}i[n]=s}return i}function qU(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{reductionIndices:s,keepDims:a}=r,o=n;let l=i.shape;const u=l.length,c=Bm(s,l);let h=c;const d=ZS(h,u);let p=o.data.get(i.dataId).values;if(null!=d){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=l[d[e]];p=qP(p,l,i.dtype,d,t),h=QS(h.length,u),l=t}ZF(i,"max"),YS("max",h,u);const[f,m]=XS(l,h),g=jU(p,Lm(m),f,i.dtype),x=o.write(g,f,i.dtype);let y=f;return a&&(y=KS(f,c)),{dataId:x,shape:y,dtype:i.dtype}}const XU={kernelName:qx,backendName:"cpu",kernelFunc:qU},KU=uP((t,e)=>Math.max(t,e)),YU=kP(Xx,KU),ZU={kernelName:Xx,backendName:"cpu",kernelFunc:YU},JU={kernelName:Kx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e;ZF(i,"maxPool");const{filterSize:s,strides:a,pad:o,dimRoundingMode:l}=r;Rm(nS(a,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`);const u=j_(i.shape,s,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&Fm(u.inShape,u.outShape))c=sP({inputs:{x:i},backend:n});else{const t=n.data.get(i.dataId).values,e=Jm(i.shape),r=hO(t,i.shape,i.dtype,e,u,"max");c=n.makeTensorInfo(u.outShape,i.dtype,r.values)}return c}},QU={kernelName:Zx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{filterSize:s,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;ZF(i,"maxPool3d");const c=q_(i.shape,s,a,1,o,l,u),h=pO(n.data.get(i.dataId).values,i.shape,i.dtype,Jm(i.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},tz={kernelName:Jx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;ZF([i,s],"maxPool3DGrad");const c=q_(s.shape,a,o,1,l,u),h=function(t,e){const n=Pw(e.outShape,"int32"),r=e.strideDepth,i=e.strideHeight,s=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let x=0;x<e.outDepth;++x){const y=x*r-d;let v=y;for(;v<0;)v+=a;const b=Math.min(e.inDepth,u+y);for(let r=0;r<e.outHeight;++r){const u=r*i-p;let d=u;for(;d<0;)d+=o;const w=Math.min(e.inHeight,c+u);for(let i=0;i<e.outWidth;++i){const p=i*s-f;let _=p;for(;_<0;)_+=l;const S=Math.min(e.inWidth,h+p);let T=Number.NEGATIVE_INFINITY,M=-1;for(let e=v;e<b;e+=a){const n=e-y;for(let r=d;r<w;r+=o){const i=r-u;for(let s=_;s<S;s+=l){const a=s-p,o=t.get(m,e,r,s,g);o>=T&&(T=o,M=n*c*h+i*c+a)}}}n.set(M,m,x,r,i,g)}}}return n}(n.bufferSync(s),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,x=c.dilationWidth,y=c.effectiveFilterDepth,v=c.effectiveFilterHeight,b=c.effectiveFilterWidth,w=y-1-c.padInfo.front,_=b-1-c.padInfo.left,S=v-1-c.padInfo.top,T=Pw(s.shape,"float32"),M=n.bufferSync(i);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let i=0;i<c.inWidth;++i){const s=n-w,a=r-S,o=i-_;let l=0;for(let n=0;n<y;n+=m){const r=(s+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let i=0;i<v;i+=g){const s=(a+i)/p;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let a=0;a<b;a+=x){const u=(o+a)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const d=y*v*b-1-h.get(t,r,s,u,e)===n*v*b+i*b+a?1:0;0!==d&&(l+=M.get(t,r,s,u,e)*d)}}}T.set(l,t,n,r,i,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},ez={kernelName:Yx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s,output:a}=e,o=s;ZF([s,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=j_(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=Pw(d.outShape,o.dtype,dO(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,x=d.dilationHeight,y=d.dilationWidth,v=d.effectiveFilterHeight,b=d.effectiveFilterWidth,w=b-1-d.padInfo.left,_=v-1-d.padInfo.top,S=Pw(o.shape,"float32"),T=n.data.get(i.dataId).values,M=Pw(i.shape,"float32",T);for(let t=0;t<d.batchSize;++t)for(let e=0;e<d.inChannels;++e)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const i=n-_,s=r-w;let a=0;for(let n=0;n<v;n+=x){const r=(i+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let i=0;i<b;i+=y){const o=(s+i)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=v*b-1-f.get(t,r,o,e)===n*b+i?1:0;0!==l&&(a+=M.get(t,r,o,e)*l)}}S.set(a,t,n,r,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},nz={kernelName:Qx,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:i,strides:s,pad:a,includeBatchInIndex:o}=e,l=n;ZF(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=j_(r.shape,i,s,[1,1],a),[h,d]=function(t,e,n,r,i){const s=hO(t,0,n,Jm(e),i,"max"),a=dO(t,e,n,i,!0,r);return[s.values,a.values]}(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},rz={kernelName:ty,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r,o=Bm(s,i.shape),l=Lm(XS(i.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=IP({inputs:{x:i},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=U$({inputs:{a:h,b:c},backend:n});u.push(d);const p=m$({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:a}});return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),p}},iz={kernelName:ey,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r;ZF(i,"min");const o=Bm(s,i.shape);let l=o;const u=ZS(l,i.shape.length);let c=i;null!=u&&(c=XP({inputs:{x:i},backend:n,attrs:{perm:u}}),l=QS(l.length,i.shape.length)),YS("min",l,c.shape.length);const[h,d]=XS(c.shape,l),p=Lm(d),f=ng(Lm(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*p;let n=m[e];for(let t=0;t<p;++t){const r=m[e+t];(Number.isNaN(r)||r<n)&&(n=r)}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const t=FP({inputs:{x:g},backend:n,attrs:{shape:KS(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},sz=uP((t,e)=>Math.min(t,e)),az=kP(ny,sz),oz={kernelName:ny,backendName:"cpu",kernelFunc:az},lz={kernelName:ry,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{paddings:s,mode:a}=r;ZF(i,"mirrorPad");const o=s.map((t,e)=>t[0]+i.shape[e]+t[1]),l=s.map(t=>t[0]),u=s.map((t,e)=>t[0]+i.shape[e]),c="reflect"===a?0:1,h=n.data.get(i.dataId).values,d=i.shape.length,p=Jm(i.shape),f=Lm(o),m=o.length,g=Jm(o),x=Wm(i.dtype,f);for(let t=0;t<f;t++){let e=ag(t,m,g);for(let t=0;t<m;t++)e[t]<l[t]?e[t]=2*l[t]-e[t]-c:e[t]>=u[t]&&(e[t]=2*(u[t]-1)-e[t]+c);e=e.map((t,e)=>t-l[e]);const n=sg(e,d,p);x[t]=h[n]}return{dataId:n.write(x,o,i.dtype),shape:o,dtype:i.dtype}}},uz=uP((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}),cz=kP(iy,uz),hz={kernelName:iy,backendName:"cpu",kernelFunc:cz};function dz(t){const{inputs:e,backend:n,attrs:r}=t,{logits:i}=e,{dim:s}=r,a=i.shape.length;let o=s;if(-1===o&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=Bm([o],i.shape),u=qU({inputs:{x:i},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=KS(u.shape,l),h=FP({inputs:{x:u},backend:n,attrs:{shape:c}}),d=W$({inputs:{a:i,b:h},backend:n}),p=R$({inputs:{x:d},backend:n}),f=m$({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=FP({inputs:{x:f},backend:n,attrs:{shape:c}}),g=U$({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const pz={kernelName:Yy,backendName:"cpu",kernelFunc:dz},fz={kernelName:sy,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:i}=e,{numSamples:s,seed:a,normalized:o}=r;ZF(i,"multinomial");const l=o?i:dz({inputs:{logits:i},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,s],p=ng(Lm(d),"int32");for(let t=0;t<u;++t){const e=t*c,n=new Float32Array(c-1);n[0]=h[e];for(let t=1;t<n.length;++t)n[t]=n[t-1]+h[e+t];const r=xT.alea(a.toString()),i=t*s;for(let t=0;t<s;++t){const e=r();p[i+t]=n.length;for(let r=0;r<n.length;r++)if(e<n[r]){p[i+t]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function mz(t,e,n){const r=Yv(-1,n);return h$([],e,r,t,n)}const gz={kernelName:oy,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;ZF(r,"neg");const i=n.data.get(r.dataId).values,[s,a]=mz(i,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,s)}},xz=vM,yz={kernelName:uy,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r;ZF(i,"NonMaxSuppression");const u=n.data.get(i.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:h}=xz(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},vz=bM,bz={kernelName:cy,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;ZF(i,"NonMaxSuppressionPadded");const c=n.data.get(i.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=vz(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},wz=wM,_z={kernelName:hy,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;ZF(i,"NonMaxSuppressionWithScore");const c=n.data.get(i.dataId).values,h=n.data.get(s.dataId).values,d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:x}=wz(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}},Sz=uP((t,e)=>t!==e?1:0),Tz=kP(ly,Sz,null,"bool"),Mz={kernelName:ly,backendName:"cpu",kernelFunc:Tz},Ez={kernelName:py,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:i}=e,{dtype:s,depth:a,onValue:o,offValue:l}=r;ZF(i,"oneHot");const u=Lm(i.shape),c=new Float32Array(u*a);c.fill(l);const h=n.data.get(i.dataId).values;for(let t=0;t<u;++t)h[t]>=0&&h[t]<a&&(c[t*a+h[t]]=o);return n.makeTensorInfo([...i.shape,a],s,c)}};function Iz(t){const{inputs:e,backend:n}=t,{x:r}=e;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const t=TP({inputs:{input:r},backend:n}),e=Iz({inputs:{x:t},backend:n}),i=PO({inputs:{input:r},backend:n}),s=Iz({inputs:{x:i},backend:n}),a=wP({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),a}return K$({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Cz={kernelName:vv,backendName:"cpu",kernelFunc:Iz},kz={kernelName:dy,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:i}=n;if("string"===i.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===i.dtype){const e=TP({inputs:{input:i},backend:r}),n=t({inputs:{x:e},backend:r}),s=PO({inputs:{input:i},backend:r}),a=Iz({inputs:{x:s},backend:r}),o=wP({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(a),o}return K$({backend:r,attrs:{shape:i.shape,value:1,dtype:i.dtype}})}};function Az(t){const{inputs:e,backend:n,attrs:r}=t,{axis:i}=r;if(1===e.length)return D$({inputs:{input:e[0]},backend:n,attrs:{dim:i}});const s=e[0].shape,a=e[0].dtype;e.forEach(t=>{Nm(s,t.shape,"All tensors passed to stack must have matching shapes"),Rm(a===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=$O({inputs:e.map(t=>{const e=D$({inputs:{input:t},backend:n,attrs:{dim:i}});return o.push(e),e}),backend:n,attrs:{axis:i}});return o.forEach(t=>n.disposeIntermediateTensorInfo(t)),l}const Rz={kernelName:fy,backendName:"cpu",kernelFunc:Az},Nz={kernelName:my,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{paddings:s,constantValue:a}=r;ZF(i,"pad");const o=s.map((t,e)=>t[0]+i.shape[e]+t[1]),l=s.map(t=>t[0]),u=n.data.get(i.dataId).values,c=Lm(i.shape),h=i.shape.length,d=Jm(i.shape),p=Lm(o),f=o.length,m=Jm(o),g=Wm(i.dtype,p);0!==a&&g.fill(a);for(let t=0;t<c;t++)g[sg(ag(t,h,d).map((t,e)=>t+l[e]),f,m)]=u[t];return{dataId:n.write(g,o,i.dtype),shape:o,dtype:i.dtype}}},Dz=uP((t,e)=>Math.pow(t,e)),Lz=kP(gy,Dz),Fz={kernelName:gy,backendName:"cpu",kernelFunc:Lz};function Pz(t,e,n,r){const[i,s]=XS(t,r),a=Tb(e,"int32"),o=ng(Lm(i),a),l=Lm(s);for(let t=0;t<o.length;++t){const e=t*l;let r=1;for(let t=0;t<l;++t)r*=n[e+t];o[t]=r}return{outVals:o,outShape:i,outDtype:a}}const Oz={kernelName:yy,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r;ZF(i,"prod");const o=i.shape.length,l=Bm(s,i.shape),u=ZS(l,o);let c=l,h=i;const d=[];null!=u&&(h=XP({inputs:{x:i},backend:n,attrs:{perm:u}}),d.push(h),c=QS(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=Pz(h.shape,h.dtype,p,c);let x=m;return a&&(x=KS(m,l)),d.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(x,g,f)}};function $z(t,e){const n=t.slice(0,e);for(;n.length<e;)n.push(1);for(let r=e;r<t.length;r++)n[e-1]*=t[r];return n}function Uz(t,e,n,r,i,s,a,o){if(0===t.length)throw new Error("paramsNestedSplits must be non empty");if(0===e[0].length)throw new Error("Split tensors must not be scalars");if(function(t,e,n){t.forEach((t,r)=>{if(t<0||t>=n){const i=ag(r,e.length,Jm(e)).join(",");throw new Error(`indices[${i}] = ${t} is not in [0, ${n})`)}})}(s,a,e[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:u,valueSlices:c,numValues:h}=function(t,e,n,r){const i=[];let s=0;const a=e.length-1+n.length,o=new Array(a).fill(null).map(()=>[0]);!function(t,e){for(let n=0;n<t.length;++n){const r=t[n],i=n===t.length-1?e:t[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>i)throw new Error("Ragged splits must not point past values");for(let t=1;t<r.length;++t)if(r[t-1]>r[t])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let l=1;for(let t=0;t<e.length-1;++t){l*=e[t];const n=e[t+1];for(let e=1;e<l+1;++e)o[t].push(e*n)}for(let r=0;r<t.length;++r){let a=t[r],l=t[r]+1;for(let t=0;t<n.length;++t){const r=n[t],i=t+e.length-1;if(i>=0){const t=o[i],e=t[t.length-1]-r[a];for(let t=a;t<l;++t)o[i].push(r[t+1]+e)}a=r[a],l=r[l]}l!==a&&(i.push([a,l]),s+=l-a)}return{outSplits:o,valueSlices:i,numValues:s}}(s,a,t,l),d=function(t){const e=[];for(let n=0;n<t.length;++n){const r=Gm("int32",t[n].length);e.push(r),t[n].forEach((t,e)=>r[e]=t)}return e}(u),p=function(t,e,n,r,i){const s=e.slice();s[0]=i;const a=Gm(n,Lm(s)),o=t.length;return function(t,e,n,r,i,s){const a=$z(e,2)[1],o=$z(s,2)[1];let l=0;for(const e of n)for(let n=e[0];n<e[1];++n){for(let e=0;e<r;++e)i[l*o+e]=t[n*a+e];++l}}(t,e,r,0===o?0:o/e[0],a,s),[a,s]}(n,r,i,c,h);return[d,p[0],p[1]]}const zz={kernelName:vy,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{paramsNestedSplits:i,paramsDenseValues:s,indices:a}=e,{outputRaggedRank:o}=r,l=i.map(t=>n.data.get(t.dataId).values),u=i.map(t=>t.shape),c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,[d,p,f]=Uz(l,u,c,s.shape,s.dtype,h,a.shape),m=d.map(t=>n.makeTensorInfo([t.length],"int32",t)),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}},Bz=2147483647;function Vz(t,e,n,r,i,s,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(i.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const o=0===e.length,l=0===i.length,u=0===a.length,c=[];o||c.push(e[0]),l||c.push(i[0]),u||c.push(a[0]);for(let t=1;t<c.length;++t)if(c[t]!==c[t-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=Gm("int32",h+1);d[0]=0;for(let e=0;e<h;++e){const n=o?t[0]:t[e],i=l?r[0]:r[e],a=u?s[0]:s[e];if(0===a)throw new Error("Requires delta != 0");let c;if(a>0&&i<n||a<0&&i>n)c=0;else if(c=Math.ceil(Math.abs((i-n)/a)),c>Bz)throw new Error(`Requires ((limit - start) / delta) <= ${Bz}`);d[e+1]=d[e]+c}const p=Gm(n,d[h]);let f=0;for(let e=0;e<h;++e){const n=d[e+1]-d[e];let r=o?t[0]:t[e];const i=u?s[0]:s[e];for(let t=0;t<n;++t)p[f++]=r,r+=i}return[d,p]}const Wz={kernelName:by,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{starts:r,limits:i,deltas:s}=e,a=n.data.get(r.dataId).values,o=n.data.get(i.dataId).values,l=n.data.get(s.dataId).values,[u,c]=Vz(a,r.shape,r.dtype,o,i.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}};var Gz=ZM;class Hz{constructor(t,e,n,r,i,s,a,o,l,u){this.shape=t,this.shapeShape=e,this.values=n,this.valuesShape=r,this.valuesDType=i,this.defaultValue=s,this.defaultValueShape=a,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=QM(u),this.raggedRank=tE(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Gz.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Gz.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Gz.VALUE_ROWIDS:return Hz.getMaxWidthValueRowID(e);case Gz.ROW_SPLITS:return Hz.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Gz[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(0===e||1===e)return 0;let n=0;for(let r=0;r<e-1;++r){const e=t[r+1]-t[r];e>n&&(n=e)}return n}static getMaxWidthValueRowID(t){const e=t.length;if(0===e)return 0;let n=0,r=t[0],i=0;for(let s=1;s<e;++s){const e=t[s];e!==r&&(r=e,i=Math.max(s-n,i),n=s)}return Math.max(e-n,i)}tensorShapeFromTensor(t,e,n=!0){if(0===e.length){if(-1===t[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return qz(t,n)}calculateOutputSize(t){const e=this.valuesShape;eE(this.defaultValueShape,e);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=JM(this.raggedRank,n,e);r[0]<0&&(r[0]=t);for(let t=1;t<=this.raggedRank;++t)r[t]<0&&(r[t]=this.getMaxWidth(t));return r}calculateFirstParentOutputIndex(t,e,n){const r=Math.min(t,n),i=[];let s=0;for(let t=0;t<r;++t,s+=e)i.push(s);for(let e=r;e<t;++e)i.push(-1);return Rm(i.length===t,()=>"Final length of result must be equal to firstDimension."),i}calculateOutputIndexRowSplit(t,e,n,r){const i=t.length,s=[];for(let a=0;a<i-1;++a){const i=t[a+1]-t[a];let o=Math.min(r,i),l=e[a];-1===l&&(o=0);for(let t=0;t<o;++t)s.push(l),l+=n;for(let t=0;t<i-o;++t)s.push(-1)}if(i>0&&s.length!==t[i-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(t,e,n,r){const i=t.length,s=[];if(0===i)return[];let a=0,o=t[0];if(o>=e.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${e.length}`);let l=e[o];s.push(l);for(let u=1;u<i;++u){const i=t[u];if(i===o)l>=0&&(++a,a<r?l+=n:l=-1);else{if(a=0,o=i,i>=e.length)throw new Error(`Got nextValueRowId=${i} which is not less than ${e.length}`);l=e[i]}s.push(l)}if(s.length!==t.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(t,e,n,r){const i=this.getRowPartitionTensor(t),s=this.getRowPartitionTypeByDimension(t);switch(s){case Gz.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,e,n,r);case Gz.ROW_SPLITS:if(i.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(i,e,n,r);default:throw new Error(`Unsupported partition type: ${Gz[s]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case Gz.FIRST_DIM_SIZE:return t[0];case Gz.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Gz.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Gz[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),e=this.calculateOutputSize(t),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let t=n.length-2;t>=0;--t)n[t]=n[t+1]*e[t+1];const r=qz(e,!1),i=Gm(this.valuesDType,Lm(r));if(n[0]*e[0]>0){let s=this.calculateFirstParentOutputIndex(t,n[0],e[0]);for(let t=1;t<=this.raggedRank;++t)s=this.calculateOutputIndex(t-1,s,n[t],e[t]);this.setOutput(this.raggedRank,s,i,r)}return[r,i]}setOutput(t,e,n,r){if(0===n.length)return;const i=this.values,s=n;let a=r.slice();a=a.slice(t+1);const o=Lm(a),l=e.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const t=this.defaultValueShape;Qb(()=>{const e=aS(u,t),n=pS(e,a);u=n.dataSync()})}let c=0,h=0,d=0;for(let t=0;t<=l;++t){let r=t<l?e[t]:-1;if(r!==d){if(h<d){const t=i.subarray(c*o);jz(s.subarray(h*o),t,(d-h)*o)}if(t>=l){const t=n.length;r=Math.floor(t/o)}if(r>d)if(1===this.defaultValue.length)s.subarray(d*o,r*o).fill(this.defaultValue[0]),d=r;else for(;r>d;)jz(s.slice(d*o),u,o),++d;r<0?(c=t+1,h=d):(c=t,h=d,d=h+1)}else++d}}}function jz(t,e,n){for(let r=0;r<n;r++)t[r]=e[r]}function qz(t,e){const n=[];for(let r of t){if(r<0){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function Xz(t,e,n,r,i,s,a,o,l,u){return new Hz(t,e,n,r,i,s,a,o,l,u).compute()}const Kz={kernelName:wy,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{shape:i,values:s,defaultValue:a,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=r,u=n.data.get(i.dataId).values,c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=o.map(t=>n.data.get(t.dataId).values),p=o.map(t=>t.shape),[f,m]=Xz(u,i.shape,c,s.shape,s.dtype,h,a.shape,d,p,l);return n.makeTensorInfo(f,s.dtype,m)}};function Yz(t,e,n,r){if(t===e||t<e&&n<0||e<t&&n>1)return ng(0,r);const i=ng(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),i[0]=t;for(let t=1;t<i.length;t++)i[t]=i[t-1]+n;return i}const Zz={kernelName:_y,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:i,dtype:s,step:a}=n,o=Yz(r,i,a,s);return e.makeTensorInfo([o.length],s,o)}},Jz=eP(Ty,t=>1/t),Qz={kernelName:Ty,backendName:"cpu",kernelFunc:Jz},tB={kernelName:ky,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i}=e,{alignCorners:s,halfPixelCenters:a,size:o}=r;ZF(i,"resizeBilinear");const l=Jm(i.shape),[u,c]=o,[h,d,p,f]=i.shape,m=n.data.get(i.dataId).values,g=new Float32Array(Lm([h,u,c,f])),x=[s&&u>1?d-1:d,s&&c>1?p-1:p],y=[s&&u>1?u-1:u,s&&c>1?c-1:c];let v=0;const b=x[0]/y[0],w=x[1]/y[1];for(let t=0;t<h;t++)for(let e=0;e<u;e++){let n;n=a?b*(e+.5)-.5:b*e;const r=Math.max(0,Math.floor(n)),i=n-r,s=Math.min(d-1,Math.ceil(n)),o=t*l[0]+r*l[1],u=t*l[0]+s*l[1];for(let t=0;t<c;t++){let e;e=a?w*(t+.5)-.5:w*t;const n=Math.max(0,Math.floor(e)),r=e-n,s=Math.min(p-1,Math.ceil(e)),c=o+n*l[2],h=u+n*l[2],d=o+s*l[2],x=u+s*l[2];for(let t=0;t<f;t++){const e=m[c+t],n=m[h+t],s=e+(m[d+t]-e)*r,a=s+(n+(m[x+t]-n)*r-s)*i;g[v++]=a}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},eB={kernelName:Ay,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i,dy:s}=e,{alignCorners:a}=r;ZF([s,i],"resizeBilinearGrad");const o=Jm(i.shape),[l,u,c,h]=i.shape,[,d,p]=s.shape,f=new Float32Array(l*u*c*h),m=[a&&d>1?u-1:u,a&&p>1?c-1:c],g=[a&&d>1?d-1:d,a&&p>1?p-1:p],x=m[0]/g[0],y=m[1]/g[1],v=n.data.get(s.dataId).values;let b=0;for(let t=0;t<l;t++){const e=t*o[0];for(let t=0;t<d;t++){const n=t*x,r=Math.floor(n),i=Math.min(Math.ceil(n),u-1),s=e+r*o[1],a=e+i*o[1],l=n-r,d=1-l;for(let t=0;t<p;t++){const e=t*y,n=Math.floor(e),r=Math.min(Math.ceil(e),c-1),i=e-n,u=1-i,p=s+n*o[2],m=s+r*o[2],g=a+n*o[2],x=a+r*o[2],w=d*u,_=d*i,S=l*u,T=l*i;for(let t=0;t<h;t++){const e=v[b++];f[p+t]+=e*w,f[m+t]+=e*_,f[g+t]+=e*S,f[x+t]+=e*T}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},nB={kernelName:Iy,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i}=e,{alignCorners:s,halfPixelCenters:a,size:o}=r;ZF(i,"resizeNearestNeighbor");const l=Jm(i.shape),[u,c]=o,[h,d,p,f]=i.shape,m=n.data.get(i.dataId).values,g=new Float32Array(h*u*c*f),x=[s&&u>1?d-1:d,s&&c>1?p-1:p],y=[s&&u>1?u-1:u,s&&c>1?c-1:c],v=x[0]/y[0],b=x[1]/y[1];let w=0;for(let t=0;t<h;t++){const e=t*l[0];for(let t=0;t<u;t++){const n=a?v*(t+.5):v*t;let r=Math.min(d-1,s?Math.round(n):Math.floor(n));a&&(r=Math.max(0,r));const i=e+r*l[1];for(let t=0;t<c;t++){const e=a?b*(t+.5):b*t;let n=Math.min(p-1,s?Math.round(e):Math.floor(e));a&&(n=Math.max(0,n));const r=i+n*l[2];for(let t=0;t<f;t++){const e=m[r+t];g[w++]=e}}}}return n.makeTensorInfo([h,u,c,f],i.dtype,g)}},rB={kernelName:Cy,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i,dy:s}=e,{alignCorners:a}=r;ZF([s,i],"resizeNearestNeighborGrad");const o=Jm(i.shape),l=Jm(s.shape),[u,c,h,d]=i.shape,[,p,f]=s.shape,m=new Float32Array(u*c*h*d),g=n.data.get(s.dataId).values,x=[a&&p>1?c-1:c,a&&f>1?h-1:h],y=[a&&p>1?p-1:p,a&&f>1?f-1:f],v=x[0]/y[0],b=x[1]/y[1],w=1/v,_=1/b,S=2*Math.ceil(w)+2,T=2*Math.ceil(_)+2;for(let t=0;t<u;t++){const e=t*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],r=Math.floor(t*w),i=Math.floor(r-S/2);for(let r=0;r<h;r++){const s=n+r*o[2],u=Math.floor(r*_),x=Math.floor(u-T/2);for(let n=0;n<d;n++){let o=0;for(let s=0;s<S;s++){const u=s+i;if(u<0||u>=p)continue;const d=e+u*l[1],m=u*v;if(t===Math.min(c-1,a?Math.round(m):Math.floor(m)))for(let t=0;t<T;t++){const e=t+x;if(e<0||e>=f)continue;const i=d+e*l[2],s=e*b;r===Math.min(h-1,a?Math.round(s):Math.floor(s))&&(o+=g[i+n])}}m[s+n]=o}}}}return n.makeTensorInfo(i.shape,i.dtype,m)}},iB={kernelName:Ny,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{dims:s}=r;ZF(i,"reverse");const a=i.shape.length,o=Bm(s,i.shape);if(0===a)return sP({inputs:{x:i},backend:n});const l=new hb(i.shape,i.dtype),u=n.bufferSync(i);for(let t=0;t<l.size;t++){const e=l.indexToLoc(t),n=e.slice();o.forEach(t=>n[t]=i.shape[t]-1-n[t]),l.set(u.get(...n),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},sB={kernelName:wv,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:i,fillValue:s,center:a}=e,o=n,l=Wm(r.dtype,Lm(r.shape)),[u,c,h,d]=r.shape,[p,f]=iE(a,c,h),m=Math.sin(i),g=Math.cos(i),x=o.data.get(r.dataId).values;for(let t=0;t<u;t++){const e=t*h*c*d;for(let t=0;t<c;t++){const n=t*(h*d);for(let r=0;r<h;r++){const i=r*d;for(let a=0;a<d;a++){const o=[u,t,r,a],y=o[2],v=o[1];let b=(y-p)*g-(v-f)*m,w=(y-p)*m+(v-f)*g;b=Math.round(b+p),w=Math.round(w+f);let _=s;"number"!=typeof s&&(_=3===a?255:s[a]),b>=0&&b<h&&w>=0&&w<c&&(_=x[e+w*(h*d)+b*d+a]),l[e+n+i+a]=_}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},aB=eP(Dy,t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1}),oB={kernelName:Dy,backendName:"cpu",kernelFunc:aB},lB=tP(t=>1/Math.sqrt(t)),uB=nP(Ly,lB),cB={kernelName:Ly,backendName:"cpu",kernelFunc:uB};function hB(t,e,n,r,i,s,a,o,l,u){const c=[r/i,i],h=t.values,d=e.values;if(0===r)return Pw(n,e.dtype);const p=l instanceof hb?l:Pw(c,e.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let t=0;t<s;t++){const s=[];let l=0;for(let e=0;e<a;e++){const n=h[t*a+e];s.push(n),l+=n*o[e]}if(l<0||l>=r/i)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<i;n++)u?p.values[l*i+n]+=d[t*i+n]:p.values[l*i+n]=0===e.rank?d[0]:d[t*i+n]}return p}const dB={kernelName:Fy,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:i,updates:s}=e,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=pE(0,i,a),d=hB(n.bufferSync(i),n.bufferSync(s),a,h,u,l,o,c,0,!0);return n.makeTensorInfo(a,d.dtype,d.values)}};function pB(t,e){let n=0,r=t.length,i=0;for(;n<r;)i=Math.floor((n+r)/2),t[i]<e?n=i+1:r=i;return r}function fB(t,e){let n=0,r=t.length,i=0;for(;n<r;)i=Math.floor((n+r)/2),t[i]<=e?n=i+1:r=i;return r}const mB={kernelName:Oy,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sortedSequence:i,values:s}=e,{side:a}=r,o=function(t,e,n,r,i,s){const a=Gm("int32",n*i);for(let o=0;o<n;++o){const n=t.slice(o*r,(o+1)*r),l=o*i;for(let t=0;t<i;++t)a[l+t]="left"===s?pB(n,e[t+l]):fB(n,e[t+l])}return a}(n.data.get(i.dataId).values,n.data.get(s.dataId).values,i.shape[0],i.shape[1],s.shape[1],a);return n.makeTensorInfo(s.shape,"int32",o)}},gB={kernelName:$y,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:i,e:s}=e;ZF([r,i,s],"select");const a=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,u=n.data.get(s.dataId).values,c=Tb(i.dtype,s.dtype),h=ng(Lm(i.shape),c);let d=0;const p=0===a||a>1||1===i.shape.length?1:Lm(i.shape.slice(1));for(let t=0;t<o.length;t++)for(let e=0;e<p;e++)1===o[t]?h[d++]=l[t]:h[d++]=u[t];return n.makeTensorInfo(i.shape,c,h)}},xB=fE,yB=mE,vB=eP(Uy,t=>t>=0?yB*t:xB*(Math.exp(t)-1)),bB={kernelName:Uy,backendName:"cpu",kernelFunc:vB},wB=eP(Wy,t=>t<0?-1:t>0?1:0),_B={kernelName:Wy,backendName:"cpu",kernelFunc:wB},SB=eP(By,t=>Math.sin(t)),TB={kernelName:By,backendName:"cpu",kernelFunc:SB},MB=eP(Vy,t=>Math.sinh(t)),EB={kernelName:Vy,backendName:"cpu",kernelFunc:MB},IB=Math.log(1.1920928955078125e-7)+2,CB=eP(Hy,t=>{const e=t>-IB,n=t<IB,r=Math.exp(t);let i;return i=n?r:e?t:Math.log(1+r),i}),kB={kernelName:Hy,backendName:"cpu",kernelFunc:CB},AB={kernelName:Xy,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{blockShape:s,paddings:a}=r;ZF([i],"spaceToBatchND");const o=Lm(s),l=[[0,0]];l.push(...a);for(let t=1+s.length;t<i.shape.length;++t)l.push([0,0]);const u=Nz.kernelFunc({inputs:{x:i},backend:n,attrs:{paddings:l,constantValue:0}}),c=sE(u.shape,s,o,!1),h=aE(c.length,s.length,!1),d=oE(u.shape,s,o,!1),p=FP({inputs:{x:u},backend:n,attrs:{shape:c}}),f=XP({inputs:{x:p},backend:n,attrs:{perm:h}}),m=FP({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function RB(t,e,n,r,i,s,a){const o=e[0],l=s[0],u=new Array(l),c=new Array(o),h=e[1];if(0===l){if(0!==o)throw new Error(BE(o));return[Gm(n,0),[0,h],Gm(i,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let e=0;e<o;++e){const n=t[e*h];if(n<0)throw new Error(VE(e,n));if(n>=l)throw new Error(WE(e,n,l));++f[n],d=d&&n>=p,p=n}let m=!0;for(let t=0;t<l;++t){const e=0===f[t];u[t]=e,m=m&&!e,f[t]=Math.max(f[t],1),t>0&&(f[t]+=f[t-1])}if(m&&d){const e=t,n=r;for(let t=0;t<o;++t)c[t]=t;return[e,[o,h],n,u,c]}{const e=f[l-1],s=Gm(n,e*h),d=Gm(i,e),p=new Array(l).fill(0);for(let e=0;e<o;++e){const n=t[e*h],i=p[n],a=(0===n?0:f[n-1])+i;p[n]++;for(let n=0;n<h;++n)s[a*h+n]=t[e*h+n];d[a]=r[e],c[e]=a}for(let t=0;t<l;++t)if(0===p[t]){const e=0===t?0:f[t-1];s[e*h+0]=t;for(let t=1;t<h;++t)s[e*h+t]=0;d[e]=a}return[s,[e,h],d,u,c]}}const NB={kernelName:Zy,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:r,values:i,denseShape:s,defaultValue:a}=e;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==i.shape.length)throw new Error(`Values must be a vector, saw:\n        ${i.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values[0],[h,d,p,f,m]=RB(o,r.shape,r.dtype,l,i.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],i.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(t=>Number(t)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function DB(t,e,n,r,i){const s=Lm(r),a=e[0],o=i.length,l=[];let u=1,c=-1;for(let t=0;t<o;++t){const e=i[t];if(-1===e){if(-1!==c)throw new Error(GE(c,t));c=t,l.push(1)}else{if(e<0)throw new Error(HE(t,e));u*=e,l.push(e)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const t=Math.trunc(s/u);if(u*t!==s)throw new Error(qE(r,l));l[c]=t}if(Lm(l)!==s)throw new Error(XE(r,l));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let t=h-2;t>=0;--t)d[t]=d[t+1]*r[t+1]}const p=[];if(o>0){p[o-1]=1;for(let t=o-2;t>=0;--t)p[t]=p[t+1]*l[t+1]}const f=Gm(n,a*o);for(let e=0;e<a;++e){let n=0;for(let r=0;r<h;++r)n+=t[e*h+r]*d[r];for(let t=0;t<o;++t)f[e*o+t]=Math.trunc(n/p[t]),n%=p[t]}return[f,[a,o],l]}const LB={kernelName:Jy,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:i,newShape:s}=e;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==i.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${i.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const a=Array.from(n.data.get(i.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,c,h]=DB(o,r.shape,r.dtype,a,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};function FB(t,e,n,r,i,s=!1,a=0){const o=r.length,l=[e[0],t.length/e[0]],u=l[1],c=o>0?i[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=e.slice();h[0]=c;const d=Gm(n,h.reduce((t,e)=>t*e,1));if(0===o)return c>0&&d.fill(a),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=i[p];for(;;){let e=0;if(f<o){if(e=i[f],g===e){++f;continue}if(g>=e)throw new Error(YE())}if(g<0||g>=c)throw new Error(ZE(g,c));g>m&&d.fill(a,m*u,g*u);for(let e=p;e<f;++e){const n=r[e];if(n<0||n>=l[0])throw new Error(JE(e,r[e],l[0]));for(let e=0;e<u;e++)d[g*u+e]+=t[n*u+e]}if(s)for(let t=0;t<u;t++)d[g*u+t]/=f-p;if(p=f,++f,m=g+1,g=e,f>o)break}return m<c&&d.fill(a,m*u,c*u),[d,h]}const PB={kernelName:Qy,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:i,segmentIds:s}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${i.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(i.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(i.dataId).values,l=n.data.get(s.dataId).values,[u,c]=FB(a,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},OB={kernelName:tv,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:i,segmentIds:s}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${i.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(i.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(i.dataId).values,l=n.data.get(s.dataId).values,[u,c]=FB(a,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},$B={kernelName:ev,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:i,sparseValues:s,defaultValue:a}=e,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=pE(0,i,o),p=!1,f=n.bufferSync(i);let m;switch(s.dtype){case"bool":m=hB(f,n.bufferSync(s),o,d,c,u,l,h,Boolean(n.data.get(a.dataId).values[0]),p);break;case"float32":case"int32":m=hB(f,n.bufferSync(s),o,d,c,u,l,h,n.data.get(a.dataId).values[0],p);break;case"string":m=hB(f,n.bufferSync(s),o,d,c,u,l,h,tb(n.data.get(a.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${s.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}},UB={kernelName:Ky,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{numOrSizeSplits:s,axis:a}=r,o=Bm(a,i.shape)[0],l=zE(i,s,o),u=new Array(i.shape.length).fill(0),c=i.shape.slice();return l.map(t=>{const e=[...c];e[o]=t;const r=bO({inputs:{x:i},backend:n,attrs:{begin:u,size:e}});return u[o]+=t,r})}},zB=tP(t=>Math.sqrt(t)),BB=eP(jy,t=>Math.sqrt(t)),VB={kernelName:jy,backendName:"cpu",kernelFunc:BB},WB={kernelName:rv,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;ZF(n,"square");const i=r.data.get(n.dataId).values,s=new Float32Array(i.length);for(let t=0;t<i.length;++t){const e=i[t];s[t]=e*e}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},GB=uP((t,e)=>{const n=t-e;return n*n}),HB=kP(nv,GB),jB={kernelName:nv,backendName:"cpu",kernelFunc:HB},qB=tP((t,e)=>{const{pattern:n,replaceGlobal:r,rewrite:i}=e;return t.replace(new RegExp(n,r?"g":""),i)}),XB={kernelName:iv,backendName:"cpu",kernelFunc:nP(iv,qB)},KB=eP(bv,(t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha}),YB={kernelName:bv,backendName:"cpu",kernelFunc:KB};function ZB(t,e,n,r){const i=Pw(t,e.dtype);for(let t=0;t<i.size;t++){const s=i.indexToLoc(t),a=new Array(s.length);for(let t=0;t<a.length;t++)a[t]=s[t]*n[t]+r[t];i.set(e.get(...a),...s)}return i}const JB={kernelName:sv,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{begin:s,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;ZF(i,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:y,end:v,strides:b}=z_(i.shape,s,a,o,l,u,c,h,d);let w;if(m)w=FP({inputs:{x:i},backend:n,attrs:{shape:f}});else if(g||x){Rm(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const t=I_(y,v,b),e=bO({inputs:{x:i},backend:n,attrs:{begin:y,size:t}});w=FP({inputs:{x:e},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(e)}else{const t=ZB(p,n.bufferSync(i),b,y);w=n.makeTensorInfo(f,t.dtype,t.values)}return w}};class QB{constructor(t,e,n,r,i,s){this.separator=Qv(t),this.nGramWidths=e,this.leftPad=Qv(n),this.rightPad=Qv(r),this.padWidth=i,this.preserveShort=s}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,r,i,s){for(let a=0;a<i;++a){const o=this.getPadWidth(s),l=Math.max(0,o-a),u=Math.max(0,o-(i-(a+1))),c=s-(l+u),h=e+(l>0?0:a-o);let d=0;d+=l*this.leftPad.length;for(let e=0;e<c;++e)d+=t[h+e].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[r+a]=new Uint8Array(d);const p=n[r+a];let f=0;const m=t=>t.forEach(t=>p[f++]=t);for(let t=0;t<l;++t)m(this.leftPad),m(this.separator);for(let e=0;e<c-1;++e)m(t[h+e]),m(this.separator);if(c>0){m(t[h+c-1]);for(let t=0;t<u;++t)m(this.separator),m(this.rightPad)}else{for(let t=0;t<u-1;++t)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(t,e){const n=t.length,r=e.length;if(r>0){let t=e[0];if(0!==t)throw new Error(`First split value must be 0, got ${t}`);for(let i=1;i<r;++i){let r=e[i]>=t;if(r=r&&e[i]<=n,!r)throw new Error(`Invalid split value ${e[i]}, must be in [${t}, ${n}]`);t=e[i]}if(t!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${t}`)}const i=r-1,s=Gm("int32",r);if(0===n||0===r){const t=new Array(n);for(let t=0;t<=i;++t)s[t]=0;return[t,s]}s[0]=0;for(let t=1;t<=i;++t){const n=e[t]-e[t-1];let r=0;this.nGramWidths.forEach(t=>{r+=this.getNumNGrams(n,t)}),this.preserveShort&&n>0&&0===r&&(r=1),s[t]=s[t-1]+r}const a=new Array(s[i]);for(let n=0;n<i;++n){const r=e[n];let i=s[n];if(this.nGramWidths.forEach(s=>{const o=e[n+1]-e[n],l=this.getNumNGrams(o,s);this.createNGrams(t,r,a,i,l,s),i+=l}),this.preserveShort&&i===s[n]){const s=e[n+1]-e[n];if(0===s)continue;const o=s+2*this.padWidth,l=1;this.createNGrams(t,r,a,i,l,o)}}return[a,s]}}function tV(t,e,n,r,i,s,a,o){return new QB(n,r,i,s,a,o).compute(t,e)}const eV={kernelName:av,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{separator:i,nGramWidths:s,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=e,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=tV(d,p,i,s,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function nV(t,e,n,r){if(!t.length)return;if(0===e.length){for(let e=0;e<t.length;++e)r.push(t.subarray(e,e+1));return}if(1===e.length){const i=e[0];let s=t.indexOf(i);for(;-1!==s;){const e=t.subarray(0,s);n&&0===e.length||r.push(e),s=(t=t.subarray(s+1)).indexOf(i)}return void(n&&0===t.length||r.push(t))}let i=0;for(let s=0;s<t.length+1;s++)if(s===t.length||-1!==e.indexOf(t[s])){const e=t.subarray(i,s);n&&0===e.length||r.push(e),i=s+1}}function rV(t,e,n){const r=t.length,i=[];let s=0,a=0;const o=new Array(r);for(let l=0;l<r;++l){const r=i.length;nV(t[l],e,n,i);const u=i.length-r;o[l]=u,s+=u,a=Math.max(a,u)}const l=Gm("int32",2*s),u=new Array(s),c=[r,a];let h=0;for(let t=0;t<r;++t)for(let e=0;e<o[t];++e)l[2*h]=t,l[2*h+1]=e,u[h]=i[h],++h;return[l,u,c]}const iV={kernelName:ov,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:i}=r,{input:s,delimiter:a}=e;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values[0],[u,c,h]=rV(o,l,i),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function sV(t,e){const n=Gm("int32",t.length);for(let r=0;r<t.length;++r)n[r]=Kv(t[r]).modulo(e).getLowBitsUnsigned();return n}const aV={kernelName:lv,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:i}=r,{input:s}=e;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const a=sV(n.data.get(s.dataId).values,i);return n.makeTensorInfo(s.shape,"int32",a)}},oV=eP(cv,t=>Math.tan(t)),lV={kernelName:cv,backendName:"cpu",kernelFunc:oV},uV=eP(hv,t=>Math.tanh(t));function cV(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const r=Pw(n,t.dtype);for(let e=0;e<r.values.length;++e){const n=r.indexToLoc(e),i=new Array(t.rank);for(let e=0;e<i.length;e++)i[e]=n[e]%t.shape[e];const s=t.locToIndex(i);r.values[e]=t.values[s]}return r}const hV=(t,e)=>{const n=e.value-t.value;return 0===n?t.index-e.index:n};function dV(t,e,n=0,r=t.length-1){for(;r>n;){if(r-n>600){const i=r-n+1,s=e-n+1,a=Math.log(i),o=.5*Math.exp(2*a/3),l=.5*Math.sqrt(a*o*(i-o)/i)*Math.sign(s-i/2);dV(t,e,Math.max(n,Math.floor(e-s*o/i+l)),Math.min(r,Math.floor(e+(i-s)*o/i+l)))}const i=t[e];let s=n,a=r;for(Am(t,n,e),hV(t[r],i)>0&&Am(t,n,r);s<a;){for(Am(t,s,a),s++,a--;hV(t[s],i)<0;)s+=1;for(;hV(t[a],i)>0;)a-=1}0===hV(t[n],i)?Am(t,n,a):(a+=1,Am(t,a,r)),a<=e&&(n=a+1),e<=a&&(r=a-1)}}function pV(t,e,n,r,i){const s=e[e.length-1],[a,o]=[t.length/s,s],l=Wm(n,a*r),u=Wm("int32",a*r);for(let e=0;e<a;e++){const n=e*o,s=t.subarray(n,n+o);let a=new Array(s.length);s.forEach((t,e)=>a[e]={value:t,index:e}),r<a.length&&(dV(a,r),a=a.slice(0,r)),i&&a.sort(hV);const c=e*r,h=l.subarray(c,c+r),d=u.subarray(c,c+r);for(let t=0;t<r;t++)h[t]=a[t].value,d[t]=a[t].index}const c=e.slice();return c[c.length-1]=r,[Pw(c,n,l),Pw(c,"int32",u)]}const fV={kernelName:fv,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{image:i,transforms:s}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=i.shape,[f,m]=null!=u?u:[h,d],g=[c,f,m,p],x=Jm(i.shape),y=x[0],v=x[1],b=x[2],w=Jm(g),_=w[0],S=w[1],T=w[2],M=Wm(i.dtype,Lm(g));M.fill(l);const E=r.data.get(i.dataId).values,I=r.data.get(s.dataId).values;for(let t=0;t<c;++t){const e=1===s.shape[0]?I:I.subarray(8*t,8*t+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let i=0;i<p;++i){let s;const u=e[6]*r+e[7]*n+1;if(0===u)continue;const c=(e[0]*r+e[1]*n+e[2])/u,p=(e[3]*r+e[4]*n+e[5])/u,f=mV(c,d,o),m=mV(p,h,o);switch(a){case"nearest":s=xV(E,h,d,y,v,b,t,m,f,i,l);break;case"bilinear":s=yV(E,h,d,y,v,b,t,m,f,i,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}M[t*_+n*S+r*T+i]=s}return r.makeTensorInfo(g,i.dtype,M)}return{dataId:r.write(M,g,i.dtype),shape:i.shape,dtype:i.dtype}}};function mV(t,e,n){switch(n){case"reflect":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=2*e;n<t&&(n=t*Math.trunc(-n/t)+n),n=n<-e?n+t:-n-1}else if(n>e-1)if(e<=1)n=0;else{const t=2*e;n-=t*Math.trunc(n/t),n>=e&&(n=t-n-1)}return Cm(0,n,e-1)}(t,e);case"wrap":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else if(n>e-1)if(e<=1)n=0;else{const t=e-1;n-=e*Math.trunc(n/t)}return Cm(0,n,e-1)}(t,e);case"nearest":return function(t,e){return Cm(0,t,e-1)}(t,e);default:return t}}function gV(t,e,n,r,i,s,a,o,l,u,c){return 0<=o&&o<e&&0<=l&&l<n?t[a*r+o*i+l*s+u]:c}function xV(t,e,n,r,i,s,a,o,l,u,c){return gV(t,e,n,r,i,s,a,Math.round(o),Math.round(l),u,c)}function yV(t,e,n,r,i,s,a,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*gV(t,e,n,r,i,s,a,h,d,u,c)+(l-d)*gV(t,e,n,r,i,s,a,h,f,u,c))+(o-h)*((f-l)*gV(t,e,n,r,i,s,a,p,d,u,c)+(l-d)*gV(t,e,n,r,i,s,a,p,f,u,c))}function vV(t,e,n,r){const i=Bm(e,n)[0],s=[1,n[0],1];for(let t=0;t<i;t++)s[0]*=n[t];s[1]=n[i];for(let t=i+1;t<n.length;t++)s[2]*=n[t];const a=new Map,o=new Int32Array(n[i]),l=new hb(s,r,t),u=[],c=1===s[0]&&1===s[2];for(let e=0;e<n[i];e++){let n;if(c)n=t[e].toString();else{const t=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)t.push(l.get(n,e,r));n=t.join(",")}const r=a.get(n);if(null!=r)o[e]=r;else{const t=a.size;a.set(n,t),o[e]=t,u.push(e)}}const h=s.slice();h[1]=a.size;const d=new hb(h,r);u.forEach((t,e)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(l.get(n,t,r),n,e,r)});const p=n.slice();return p[i]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const bV={kernelName:yv,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,segmentIds:s}=e,{numSegments:a}=r;ZF(i,"unsortedSegmentSum");const o=[],l=[],u=i.shape.length-s.shape.length;let c=s;for(let t=0;t<u;++t){const e=D$({inputs:{input:c},backend:n,attrs:{dim:t+1}});c=e,l.push(e)}for(let t=0;t<a;++t){const e=Yv(t,"int32"),r=n.makeTensorInfo([],"int32",e),s=b$({inputs:{a:r,b:c},backend:n}),a=IP({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=p$({inputs:{a,b:i},backend:n}),h=m$({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(s),l.push(a),l.push(u),l.push(h)}const h=Az({inputs:o,backend:n,attrs:{axis:0}});return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),h}},wV=[UP,BP,WP,HP,LP,jP,YP,ZP,JP,QP,eO,rO,sO,lO,cO,fO,mO,gO,xO,$P,yO,_O,MO,IO,CO,CP,RO,DO,_P,LO,UO,BO,VO,WO,GO,HO,jO,XO,YO,ZO,JO,QO,t$,e$,r$,i$,s$,a$,o$,l$,u$,c$,x$,iP,y$,w$,k$,N$,L$,O$,X$,Y$,Z$,tU,rU,iU,sU,oU,uU,dU,mU,aP,gU,OO,yU,bU,_U,lP,MU,CU,AU,DU,FU,$U,zU,WU,GU,HU,XU,ZU,JU,QU,tz,ez,nz,rz,iz,oz,lz,hz,fz,f$,gz,yz,bz,_z,Mz,Ez,kz,Rz,Nz,Fz,dP,Oz,zz,Wz,Kz,Zz,MP,z$,Qz,fP,gP,PP,tB,eB,nB,rB,iB,sB,oB,cB,dB,mB,gB,bB,vP,_B,TB,EB,wO,pz,kB,AB,NB,LB,PB,OB,$B,UB,VB,WB,jB,XB,YB,JB,eV,iV,aV,G$,g$,lV,{kernelName:hv,backendName:"cpu",kernelFunc:uV},{kernelName:Py,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{tensor:r,indices:i,updates:s}=e,{sliceRank:a,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=pE(0,i,r.shape),h=n.bufferSync(i),d=n.bufferSync(s),p=n.bufferSync(r),f=hB(h,d,r.shape,c,l,o,a,u,p,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}},{kernelName:dv,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{reps:s}=r;ZF(i,"tile");const a=cV(n.bufferSync(i),s);return n.makeTensorInfo(a.shape,a.dtype,a.values)}},{kernelName:pv,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{k:s,sorted:a}=r;ZF(i,"topk");const o=n.data.get(i.dataId).values,[l,u]=pV(o,i.shape,i.dtype,s,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},fV,KP,{kernelName:gv,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:i}=n,{x:s}=e;ZF(s,"unique");const a=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=vV(a,i,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:xv,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:i}=e;let{axis:s}=r;s<0&&(s+=i.shape.length);const a=i.shape.length,o=i.shape[s],l=new Array(a-1);let u=0;for(let t=0;t<a;t++)t!==s&&(l[u++]=i.shape[t]);const c=new Array(a).fill(0),h=i.shape.slice();h[s]=1;const d=new Array(o);for(let t=0;t<d.length;t++){c[s]=t;const e=bO({inputs:{x:i},backend:n,attrs:{begin:c,size:h}});d[t]=FP({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}},bV,Cz];for(const t of wV)Nv(t);const _V={},SV={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function TV(t,e){if(!(t in _V)||null!=e){const n=function(t,e){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==e?function(t){if(hg().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==t){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(t):e;return n.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete _V[t]},!1),hg().getBool("SOFTWARE_WEBGL_ENABLED")&&(SV.failIfMajorPerformanceCaveat=!1),1===t?n.getContext("webgl",SV)||n.getContext("experimental-webgl",SV):n.getContext("webgl2",SV)}(t,e);if(null===n)return console.log("Could not get context for WebGL version",t),null;_V[t]=n}const n=_V[t];return null==n||n.isContextLost()?(delete _V[t],TV(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),_V[t])}var MV,EV,IV;function CV(t,e){return[e,t]}function kV(t){const e=Lm(t);return Om(Math.ceil(e/4))}function AV(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function RV(t,e){const n=t;let r,i,s,a,o,l,u,c,h,d;return 2===hg().getNumber("WEBGL_VERSION")?(r=n.R32F,i=n.R16F,s=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(r=t.RGBA,i=t.RGBA,s=t.RGBA,a=n.RGBA,o=t.RGBA,u=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,d=t.FLOAT,l=t.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:i,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function NV(t,e){const n=e();return hg().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}function DV(t){return!!(hg().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function LV(t,e){return WV(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(MV||(MV={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(EV||(EV={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(IV||(IV={}));const FV=/ERROR: [0-9]+:([0-9]+):/g;function PV(t,e){const n=FV.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const r=+n[1],i=t.split("\n"),s=i.length.toString().length+2,a=i.map((t,e)=>$m((e+1).toString(),s)+t);let o=0;for(let t=0;t<a.length;t++)o=Math.max(a[t].length,o);const l=a.slice(0,r-1),u=a.slice(r-1,r),c=a.slice(r);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${$m(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function OV(t,e){if(NV(t,()=>t.validateProgram(e)),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function $V(t,e,n,r,i,s,a){const o=t.getAttribLocation(e,n);return-1!==o&&(NV(t,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),NV(t,()=>t.vertexAttribPointer(o,i,t.FLOAT,!1,s,a)),NV(t,()=>t.enableVertexAttribArray(o)),!0)}function UV(t,e,n,r){NV(t,()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),NV(t,()=>t.activeTexture(t.TEXTURE0+n)),NV(t,()=>t.bindTexture(t.TEXTURE_2D,e))}(t,e,r)),NV(t,()=>t.uniform1i(n,r))}function zV(t,e,n){NV(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),NV(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function BV(t,e){NV(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),NV(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function VV(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function WV(t,e,n){const r=NV(t,()=>e());if(null==r)throw new Error(n);return r}function GV(t,e=2){return Lm(t.slice(0,t.length-e))}function HV(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function jV(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[GV(t),...HV(t)]),e}function qV(t){return t%2==0}function XV(t,e){if(Fm(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t[t.length-1],r=e[e.length-1];if(n===r)return!0;if(qV(n)&&qV(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&qV(t[0])&&qV(e[0])}let KV,YV;function ZV(t,e){return null!=t.getExtension(e)}function JV(t){try{if(null!=TV(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function QV(t){const e=RV(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),i}function tW(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&Rm("complex64"!==t.dtype,()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}const eW=hg();function nW(){let t,e,n,r,i,s,a,o,l,u;return 2===hg().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",i="texture",s="outputColor",a="out vec4 outputColor;",o=hg().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",i="texture2D",s="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:i,output:s,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function rW(t,e,n="index"){const r=Jm(e);return r.map((e,i)=>`int ${t[i]} = ${n} / ${e}; ${i===r.length-1?`int ${t[i+1]} = ${n} - ${t[i]} * ${e}`:`index -= ${t[i]} * ${e}`};`).join("")}function iW(t,e,n="index"){const r=Jm(e);return r.map((e,i)=>`int ${t[i]} = ${n} / outShapeStrides[${i}]; ${i===r.length-1?`int ${t[i+1]} = ${n} - ${t[i]} * outShapeStrides[${i}]`:`index -= ${t[i]} * outShapeStrides[${i}]`};`).join("")}function sW(t){const e=Jm(t).map(t=>t.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}eW.registerFlag("HAS_WEBGL",()=>eW.getNumber("WEBGL_VERSION")>0),eW.registerFlag("WEBGL_VERSION",()=>JV(2)?2:JV(1)?1:0),eW.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),eW.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===eW.get("WEBGL_VERSION")),eW.registerFlag("WEBGL_CPU_FORWARD",()=>!0),eW.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),eW.registerFlag("WEBGL_PACK",()=>eW.getBool("HAS_WEBGL")),eW.registerFlag("WEBGL_PACK_NORMALIZATION",()=>eW.getBool("WEBGL_PACK")),eW.registerFlag("WEBGL_PACK_CLIP",()=>eW.getBool("WEBGL_PACK")),eW.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>eW.getBool("WEBGL_PACK")),eW.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>eW.getBool("WEBGL_PACK")),eW.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>eW.getBool("WEBGL_PACK")),eW.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>eW.getBool("WEBGL_PACK")),eW.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>eW.getBool("WEBGL_PACK")),eW.registerFlag("WEBGL_PACK_REDUCE",()=>eW.getBool("WEBGL_PACK")),eW.registerFlag("WEBGL_LAZILY_UNPACK",()=>eW.getBool("WEBGL_PACK")),eW.registerFlag("WEBGL_CONV_IM2COL",()=>eW.getBool("WEBGL_PACK")),eW.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>eW.getBool("WEBGL_PACK")),eW.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(t){if(null==KV){const e=TV(t);KV=e.getParameter(e.MAX_TEXTURE_SIZE)}return KV}(eW.getNumber("WEBGL_VERSION"))),eW.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(t){if(null==YV){const e=TV(t);YV=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,YV)}(eW.getNumber("WEBGL_VERSION"))),eW.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=eW.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=TV(t);return e=ZV(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:ZV(n,"EXT_disjoint_timer_query")?1:0,e}(t)}),eW.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>eW.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!$b()),eW.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(t){if(0===t)return!1;const e=TV(t);if(1===t){if(!ZV(e,"OES_texture_float"))return!1}else if(!ZV(e,"EXT_color_buffer_float"))return!1;return QV(e)}(eW.getNumber("WEBGL_VERSION"))),eW.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!eW.getBool("WEBGL_FORCE_F16_TEXTURES")&&eW.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),eW.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function(t){if(0===t)return!1;const e=TV(t);if(1!==t){if(ZV(e,"EXT_color_buffer_float"))return QV(e);const t="EXT_color_buffer_half_float";if(ZV(e,t)){const n=e.getExtension(t);return function(t,e){const n=RV(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(i),s}(e,n)}return!1}return!!ZV(e,"OES_texture_float")&&!!ZV(e,"WEBGL_color_buffer_float")&&QV(e)}(eW.getNumber("WEBGL_VERSION"))),eW.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(t=eW.getNumber("WEBGL_VERSION"))&&null!=TV(t).fenceSync;var t}),eW.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>eW.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),eW.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if("number"!=typeof t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${t}.`);if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)}),eW.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>$b()?1:-1,t=>{if("number"!=typeof t)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${t}.`);if(t<0&&-1!==t)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)}),eW.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),eW.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),eW.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),eW.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),eW.registerFlag("WEBGL_EXP_CONV",()=>!1),eW.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>eW.getBool("IS_TEST")),eW.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),eW.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),eW.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),eW.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);const aW="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:oW}=i;function lW(t,e,n){const r=[];if(t.forEach(t=>{const e=Lm(t.shapeInfo.logicalShape);if(t.shapeInfo.isUniform?r.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(r.push(`uniform sampler2D ${t.name};`),r.push(`uniform int offset${t.name};`)),n.enableShapeUniforms){const{uniformShape:e}=yW(n.packedInputs,t.shapeInfo.logicalShape,t.shapeInfo.texShape);switch(e.length){case 1:r.push(`uniform int ${t.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${t.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${t.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${t.name}Shape;`)}r.push(`uniform ivec2 ${t.name}TexShape;`)}}),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(t=>{r.push(`uniform ${t.type} ${t.name}${t.arrayIndex?`[${t.arrayIndex}]`:""};`)});const i=r.join("\n"),s=t.map(t=>function(t,e,n=!1,r){let i="";i+=n?cW(t,r):uW(t,r);const s=t.shapeInfo.logicalShape,a=e.logicalShape;return s.length<=a.length&&(i+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),i="get"+r+"AtOutCoords",s=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,o=oW(t.shapeInfo.logicalShape,e.logicalShape),l=xW(a),u=a-s;let c;const h=["x","y","z","w","u","v"];c=0===s?"":a<2&&o.length>=1?"coords = 0;":o.map(t=>`coords.${h[t+u]} = 0;`).join("\n");let d="";d=a<2&&s>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>`coords.${h[e+u]}`).join(", ");let p="return outputValue;";const f=1===Lm(t.shapeInfo.logicalShape),m=1===Lm(e.logicalShape);if(1!==s||f||m){if(f&&!m)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=s-2,e=s-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?p="return vec4(outputValue.x);":o.indexOf(t)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${i}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),i="get"+r+"AtOutCoords",s=e.texShape,a=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===l&&null==t.shapeInfo.flatOffset&&Fm(a,s))return`\n      float ${i}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=xW(l),c=oW(t.shapeInfo.logicalShape,e.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map(t=>`coords.${p[t+h]} = 0;`).join("\n");let f="";return f=l<2&&o>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>`coords.${p[e+h]}`).join(", "),`\n    float ${i}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(t,e)),i}(t,e,n.packedInputs,n.enableShapeUniforms)).join("\n"),a=e.texShape,o=nW(),l=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${hW}\n    ${dW}\n    ${pW}\n  `}(o);return e.isPacked?(u=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,e,n);case 2:return function(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Fm(t,e))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const i=Math.ceil(t[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e,n);case 3:return function(t,e,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],i=Math.ceil(t[2]/2),s=i*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e,n);default:return function(t,e,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],i=Math.ceil(t[t.length-1]/2),s=i*Math.ceil(t[t.length-2]/2);let a=s,o="",l="b, r, c";for(let e=2;e<t.length-1;e++)a*=t[t.length-e-1],o=`\n      int b${e} = index / ${a};\n      index -= b${e} * ${a};\n    `+o,l=`b${e}, `+l;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec${t.length}(${l});\n    }\n  `}(t,e,n)}}(e.logicalShape,a,n.enableShapeUniforms),c=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(o)):(u=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){return 1===e[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `:1===e[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e,n);case 2:return function(t,e,n){return Fm(t,e)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e,n);case 3:return function(t,e,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${iW(["r","c","d"],t)}\n    return ivec3(r, c, d);\n  }\n`;const r=rW(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(t,e,n);case 4:return function(t,e,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${iW(["r","c","d","d2"],t)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=rW(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e,n);case 5:return function(t,e){const n=rW(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=rW(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}(e.logicalShape,a,n.enableShapeUniforms),c=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=fW),[h,l,c,i,u,s,n.userCode].join("\n")}function uW(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[i,s]=t.shapeInfo.texShape;if(1===i&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const a=mW(n);if(e)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=t.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t,e);case 1:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${gW(t)}\n      }\n    `;const i=t.shapeInfo.texShape,s=i[0],a=i[1];if(1===a&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=mW(n);return 1===a?e?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?e?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:e?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t.shapeInfo.texShape;if(null!=s&&Fm(n,s)){if(e)return`\n      float ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const t=s[0];return`\n    float ${i}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${t}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:a,keptDims:o}=Vm(n),l=a;if(l.length<n.length){const n=["row","col"];return`\n      ${uW(vW(t,l),e)}\n      float ${i}(int row, int col) {\n        return ${i}(${bW(n,o)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${i}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${gW(t)}\n      }\n    `;const u=s[0],c=s[1],h=mW(r);return 1===c?e?`\n      float ${i}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${i}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?e?`\n      float ${i}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${i}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:e?`\n      float ${i}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${i}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],a=n[2],{newShape:o,keptDims:l}=Vm(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${uW(vW(t,u),e)}\n        float ${i}(int row, int col, int depth) {\n          return ${i}(${bW(n,l)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${a}, 1)));\n        ${gW(t)}\n      }\n    `;const c=t.shapeInfo.texShape,h=c[0],d=c[1],p=t.shapeInfo.flatOffset;if(d===s&&null==p)return e?`\n      float ${i}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${i}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===a&&null==p)return e?`\n      float ${i}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${i}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=mW(r);return e?`\n    float ${i}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${i}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${a} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(t,e);case 4:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],a=n[2]*s,o=n[1]*a,{newShape:l,keptDims:u}=Vm(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${uW(vW(t,l),e)}\n      float ${i}(int row, int col, int depth, int depth2) {\n        return ${i}(${bW(n,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${a}, ${s}, 1)));\n        ${gW(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return e?`\n      float ${i}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===s&&null==c)return e?`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const x=mW(r);return e?`\n    float ${i}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${x});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${i}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${x});\n      return sampleTexture(${r}, uv);\n    }\n  `}(t,e);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=e[4],s=e[3]*i,a=e[2]*s,o=e[1]*a,{newShape:l,keptDims:u}=Vm(e);if(l.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${uW(vW(t,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${bW(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${s}, ${i})) +\n          depth3;\n        ${gW(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${s}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===i&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${s} +\n          depth2 * ${i} + depth3 + ${mW(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:i,keptDims:s}=Vm(e);if(i.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${uW(vW(t,i))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${bW(e,s)});\n      }\n    `}const a=e[5],o=e[4]*a,l=e[3]*o,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${gW(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${mW(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function cW(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${nW().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=t.shapeInfo.texShape,s=nW();if(e)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t.shapeInfo.texShape,a=s[0],o=s[1],l=nW();if(null!=s&&Fm(n,s))return e?`\n      vec4 ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(e)return`\n    vec4 ${i}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${i}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${cW(vW(t,n.slice(1)),e)}\n        vec4 ${i}(int b, int row, int col) {\n          return ${i}(${bW(s,r)});\n        }\n      `}const o=nW();if(e)return`\n    vec4 ${i}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=a[0],u=a[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${i}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(t,e);default:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=nW();if(e)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${i.texture2D}(${n}, uv);\n    }\n  `;const s=t.shapeInfo.logicalShape,a=s.length,o=t.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(s[a-1]/2);let d=h*Math.ceil(s[a-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let t=2;t<a-1;t++)p=`int b${t}, `+p,d*=s[a-t-1],f=`b${t} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(t,e)}}const hW="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",dW="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",pW="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",fW="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function mW(t){return`offset${t}`}function gW(t){const e=t.name,n=Lm(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function xW(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function yW(t,e,n){const{newShape:r,keptDims:i}=Vm(e),s=e.length,a=t&&3===s&&1===e[0],o=a?e.slice(1):r,l=!t&&s>1&&!Fm(e,n)&&r.length<s||a;return{useSqueezeShape:l,uniformShape:l?o:e,keptDims:i}}function vW(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function bW(t,e){return e.map(e=>t[e]).join(", ")}function wW(t,e,n){const r=[],i=[];let s,a,o,l=null,u=null;u=t.getUniformLocation(n,"NAN",!1),1===hg().getNumber("WEBGL_VERSION")&&(l=t.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const i of e.variableNames){const s={name:i,uniform:t.getUniformLocation(n,i,c),offset:t.getUniformLocation(n,`offset${i}`,c)};e.enableShapeUniforms&&(s.shape=t.getUniformLocation(n,`${i}Shape`,c),s.texShape=t.getUniformLocation(n,`${i}TexShape`,c)),r.push(s)}if(e.enableShapeUniforms&&(s=t.getUniformLocation(n,"outShape",c),o=t.getUniformLocation(n,"outShapeStrides",c),a=t.getUniformLocation(n,"outTexShape",c)),e.customUniforms)for(const r of e.customUniforms)i.push(t.getUniformLocation(n,r.name,c));return{variablesLocations:r,customUniformLocations:i,infLoc:l,nanLoc:u,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:a}}function _W(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((t,n)=>{const r=t.logicalShape,i=e[n],s=i.shape;if(!Fm(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(t.isUniform&&i.isUniform)return;const a=t.texShape,o=i.isUniform?null:i.texData.texShape;if(!Fm(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)})}function SW(t){return hg().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}class TW{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=MV.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=nW();this.outputShape=t,this.enableShapeUniforms=SW(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?iW(["r","c","d"],t):rW(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${e.output} = result;\n      }\n    `}}class MW{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=MV.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=nW();this.outputShape=t,this.enableShapeUniforms=SW(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?iW(["r","c","d"],t):rW(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${e.output} = result;\n      }\n    `}}class EW{constructor(t){this.variableNames=["A"],this.outTexUsage=EV.DOWNLOAD;const e=nW();this.outputShape=t,this.userCode=`\n      ${aW}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class IW{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=EV.DOWNLOAD;const e=nW();this.outputShape=t,this.userCode=`\n      ${aW}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}const CW={R:0,G:1,B:2,A:3};class kW{constructor(t,e=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=nW();this.outputShape=t,this.enableShapeUniforms=SW(this.outputShape.length);let i="result";e&&(i="floor(result * 255. + 0.5)");let s="";for(let t=0;t<n.length;t++){const e=n[t];s+=`\n          if(offset == ${t}) {\n            result = values[${CW[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":sW(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${s}\n        }\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class AW{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=nW();this.outputShape=t,this.enableShapeUniforms=SW(this.outputShape.length);let r="",i="result";e&&(i="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let i=0;i<=1;i++){const s=2*e+i;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {\n          localCoords[2] += ${i};\n          if (localCoords[1] + ${e} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {\n            localCoords[1] += ${e};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":sW(t)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${i};\n        }\n    `}}function RW(t,e,n,r,i,s){!function(t,e){const n=hg().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const a=function(t){return WV(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return NV(t,()=>t.bindTexture(o,a)),NV(t,()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),NV(t,()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),NV(t,()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST)),NV(t,()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST)),1===hg().getNumber("WEBGL_VERSION")?NV(t,()=>t.texImage2D(o,0,r,e,n,0,i,s,null)):NV(t,()=>t.texStorage2D(o,1,r,e,n)),NV(t,()=>t.bindTexture(t.TEXTURE_2D,null)),{texture:a,texShape:[n,e]}}function NW(t){return t.internalFormatFloat}function DW(t){return t.internalFormatHalfFloat}function LW(t){return t.downloadTextureFormat}function FW(t){return t.internalFormatPackedFloat}function PW(t){return t.internalFormatPackedHalfFloat}class OW{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const e=hg().getNumber("WEBGL_VERSION");if(null!=t?(this.gl=t,function(t,e){_V[t]=e}(e,t)):this.gl=TV(e),t=this.gl,2===hg().getNumber("WEBGL_VERSION")){const e=t;this.createVertexArray=()=>NV(e,()=>e.createVertexArray()),this.bindVertexArray=t=>NV(e,()=>e.bindVertexArray(t)),this.deleteVertexArray=t=>NV(e,()=>e.deleteVertexArray(t)),this.getVertexArray=()=>NV(e,()=>e.getParameter(e.VERTEX_ARRAY_BINDING))}else if(null!=t){const e=t.getExtension("OES_vertex_array_object");if(null==e)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>NV(t,()=>e.createVertexArrayOES()),this.bindVertexArray=n=>NV(t,()=>e.bindVertexArrayOES(n)),this.deleteVertexArray=n=>NV(t,()=>e.deleteVertexArrayOES(n)),this.getVertexArray=()=>NV(t,()=>t.getParameter(e.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===hg().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=LV(this.gl,t),ZV(this.gl,e))this.textureHalfFloatExtension=LV(this.gl,e);else if(hg().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),ZV(this.gl,r))this.colorBufferHalfFloatExtension=LV(this.gl,r);else if(hg().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",ZV(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!ZV(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(t){return function(t,e){const n=WV(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return NV(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),NV(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=WV(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return NV(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),NV(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return WV(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=RV(this.gl,this.textureHalfFloatExtension)}get debug(){return hg().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;NV(t,()=>t.finish()),NV(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),NV(t,()=>t.deleteFramebuffer(this.framebuffer)),NV(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),NV(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),NV(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,s]=CV(e,n);return RW(t,i,s,NW(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,s]=CV(e,n);return RW(t,i,s,DW(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,s]=CV(e,n);return RW(t,i,s,LW(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){NV(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?2===hg().getNumber("WEBGL_VERSION")?NV(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data)):NV(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):2===hg().getNumber("WEBGL_VERSION")?NV(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n)):NV(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),NV(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,i,s){let a,o,l;NV(t,()=>t.bindTexture(t.TEXTURE_2D,e)),i instanceof Uint8Array?(a=new Uint8Array(n*r*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(a=new Float32Array(n*r*4),o=t.FLOAT,l=s.internalFormatPackedFloat),a.set(i),2===hg().getNumber("WEBGL_VERSION")?NV(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,r,t.RGBA,o,a)):NV(t,()=>t.texImage2D(t.TEXTURE_2D,0,l,n,r,0,t.RGBA,o,a)),NV(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,s]=AV(e,n);return RW(t,i,s,PW(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,s]=AV(e,n);return RW(t,i,s,FW(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(BV(this.gl,this.framebuffer),this.outputTexture=null),NV(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n,r){const[i,s]=CV(e,n),a=new Uint8Array(e*n*4);return NV(t,()=>t.readPixels(0,0,i,s,r.downloadTextureFormat,t.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,r,i,s){return function(t,e,n,r,i,s,a){const o=t,l=new Float32Array(function(t,e){const[n,r]=AV(t,e);return n*r*4}(s,a));return o.bindBuffer(o.PIXEL_PACK_BUFFER,e),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,l),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),l}(this.gl,t,0,0,0,i,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,i=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,i),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),i}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n){const r=t.createBuffer();NV(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,r));const i=16*e*n;return NV(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,i,t.STREAM_READ)),NV(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),NV(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),r}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(hg().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,i=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(i,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=i}else hg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,hg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n){const r=new Float32Array(e*n*4);return NV(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r)),r}(this.gl,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=function(t){const e=nW();return function(t,e){const n=WV(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(NV(t,()=>t.shaderSource(n,e)),NV(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e));const n=function(t){return WV(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}(e);NV(e,()=>e.attachShader(n,this.vertexShader)),NV(e,()=>e.attachShader(n,t)),function(t,e){if(NV(t,()=>t.linkProgram(e)),!hg().get("ENGINE_COMPILE_ONLY")&&!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&OV(e,r),r}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);const e=this.gl;NV(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),function(t,e,n){NV(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),$V(t,e,"clipSpacePos",n,3,20,0)&&$V(t,e,"uv",n,2,20,12)}(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&(NV(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&OV(this.gl,this.program),NV(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return WV(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),NV(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),UV(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,i]=AV(e,n);this.setOutputMatrixTextureDriver(t,r,i)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&OV(this.gl,this.program),VV(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}NV(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),NV(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=LV(this.gl,2===hg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===hg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===hg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await Um(()=>this.disposed||this.isQueryAvailable(t,hg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,hg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map(t=>t.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in hg().platform&&(n=hg().platform.setTimeoutCustom.bind(hg().platform)),Um(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,n)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),zV(this.gl,t,this.framebuffer),this.debug&&VV(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(zV(this.gl,this.outputTexture,this.framebuffer),this.debug&&VV(this.gl)):BV(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;zV(r,t,this.framebuffer),this.debug&&VV(r),this.outputTexture=t,NV(r,()=>r.viewport(0,0,e,n)),NV(r,()=>r.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),NV(this.gl,()=>this.gl.scissor(t,e,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:$W,XI:UW,Nk:zW,f6:BW,ct:VW,YG:WW,hH:GW,z3:HW,sG:jW,uM:qW,vS:XW,qB:KW,GG:YW,rq:ZW,lg:JW,WR:QW,cu:tG,GE:eG,px:nG,jC:rG,He:iG,hE:sG,BF:aG,Dk:oG,cl:lG,_B:uG,ub:cG,_f:hG,Ku:dG,qy:pG,Zy:fG,bu:mG,zv:gG,dH:xG,HS:yG,yH:vG,l3:bG,z9:wG,x6:_G,_m:SG,eW:TG,GK:MG,SP:EG,yr:IG,dl:CG,Dw:kG,xT:AG,_X:RG,wz:NG}=s;function DG(t,e){return["x","y","z","w","u","v"].slice(0,e).map(e=>`${t}.${e}`)}function LG(t,e){return 1===e?[t]:DG(t,e)}class FG{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=SW(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const t=LG("rc",this.rank),e=xW(this.rank),n=this.getOutOfBoundsCondition(t),r=this.getSetup(t),i=this.getOutput(t);this.userCode=`\n        void main() {\n          ${e} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}getSourceCoordsArr(t){const e=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let i=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let e=2;e<this.rank;e++)i=`${t[t.length-1-e]},`+i;e.push(i)}return e}getOutOfBoundsCondition(t){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(1===this.rank)return"";const e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${e[0]};\n      int c = ${e[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(t){const e=this.getSourceCoordsArr(t);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),\n            cEdge ? 0. : getA(${e[1]}),\n            rEdge ? 0. : getA(${e[2]}),\n            rEdge || cEdge ? 0. : getA(${e[3]})`}}class PG{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=SW(this.outputShape.length);let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var r,i;this.userCode=`\n      ${r=e,i=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${i?function(t,e,n="index"){const r=function(t,e){const n=t.length,r=t.map(t=>`${e}[${t}]`),i=new Array(n-1);i[n-2]=r[n-1];for(let t=n-3;t>=0;--t)i[t]=`(${i[t+1]} * ${r[t+1]})`;return i}(t.map((t,e)=>e),e);return r.map((e,i)=>`int ${t[i]} = ${n} / ${r[i]}; ${i===r.length-1?`int ${t[i+1]} = ${n} - ${t[i]} * ${r[i]}`:`index -= ${t[i]} * ${r[i]}`};`).join("")}(["r","c","d"],"inputShape"):rW(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":sW(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class OG{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,n){const r=UG(e,n),i=zG(t,r,n);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const s=$G(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const t=this.freeTextures[i].pop();return this.usedTextures[i].push(t),t}let a;return r===IV.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===IV.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===IV.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===IV.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===IV.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[i].push(a),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),a}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const i=UG(n,r),s=zG(e,i,r);s in this.freeTextures||(this.freeTextures[s]=[]);const a=$G(e,i,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=hg().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[s].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[s],u=l&&l.indexOf(t);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function $G(t,e,n,r,i){const s=function(t,e){switch(t){case IV.PACKED_2X2_FLOAT32:return FW(e);case IV.PACKED_2X2_FLOAT16:return PW(e);case IV.UNPACKED_FLOAT32:return NW(e);case IV.UNPACKED_FLOAT16:return DW(e);case IV.PACKED_4X1_UNSIGNED_BYTE:return LW(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,r);let a;if(i){const[e,n]=AV(t[0],t[1]);a=e*n}else{const[e,n]=CV(t[0],t[1]);a=e*n}const o=function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}(n,s);return a*o}function UG(t,e){if(t===EV.UPLOAD)return IV.PACKED_2X2_FLOAT32;if(t===EV.RENDER||null==t)return function(t){return hg().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?IV.PACKED_2X2_FLOAT32:IV.UNPACKED_FLOAT32:t?IV.PACKED_2X2_FLOAT16:IV.UNPACKED_FLOAT16}(e);if(t===EV.DOWNLOAD||t===EV.PIXELS)return IV.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function zG(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class BG{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=SW(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const VG="if (isnan(x)) return x;",WG="return abs(x);",GG=VG+"\n  return (x < 0.0) ? 0.0 : x;\n",HG=VG+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",jG="return x;";class qG{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=SW(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class XG{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=SW(this.outputShape.length);const e=t.length,n=LG("rc",e),r=xW(e),i=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),s=n.slice(-2),a=e<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${i});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const KG=iI,YG={},ZG=hg().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class JG extends Mm{nextDataId(){return JG.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!hg().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(null!=t){if(t instanceof OW)e=t;else{const n=TV(hg().getNumber("WEBGL_VERSION"),t);e=new OW(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const t=TV(hg().getNumber("WEBGL_VERSION"));e=new OW(t),this.binaryCache=((n=hg().getNumber("WEBGL_VERSION"))in YG||(YG[n]={}),YG[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new OG(this.gpgpu),this.numMBBeforeWarning=null==hg().global.screen?1024:hg().global.screen.height*hg().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Tm(this,Zb())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,n,r,i,s){const a=this.makeTensorInfo(e,n),o=this.texData.get(a.dataId);o.isPacked=!1,o.texture={texture:t,texShape:[r,i]},o.texShape=[r,i];const l=jV(e),u=new kW(l,!1,s),c=this.runWebGLProgram(u,[a],n,[[r,i]]);return c.shape=e,o.texture=null,this.disposeIntermediateTensorInfo(a),c.dataId}write(t,e,n){if((hg().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||hg().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:EV.UPLOAD,refCount:1}),r}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,r,i){if(hg().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:EV.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:i,slice:s,shape:a,isPacked:o}=e;if(null!=s){let e;e=o?new qG(a,jG):new BG(a,jG);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:r}],r),i=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),i}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Jv()),c="complex64"===r?_E(this.readSync(i.real.dataId),this.readSync(i.imag.dataId)):this.getValuesFromTexture(t),l&&(this.downloadWaitMs+=Jv()-u),this.convertAndCacheOnCPU(t,c)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise(t=>e.push(t))}const e=this.texData.get(t),{values:n,shape:r,slice:i,dtype:s,complexTensorInfos:a,isPacked:o}=e;if(null!=i){let e;e=o?new qG(r,jG):new BG(r,jG);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:s}],s),i=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),i}if(null!=n)return this.convertAndCacheOnCPU(t);if(hg().getBool("DEBUG")&&!hg().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===hg().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==s&&hg().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(e.texture.texture,...kV(r))}if(this.pendingRead.set(t,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const t=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]);u=_E(t[0],t[1])}else if(null==c)u=this.getValuesFromTexture(t);else{const t=Lm(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const t=this.gpgpu.gl;NV(t,()=>t.deleteBuffer(c))}const h=this.convertAndCacheOnCPU(t,u),d=this.pendingRead.get(t);return this.pendingRead.delete(t),d.forEach(t=>t(h)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Zb().removeDataId(t,this),this.pendingDeletes--),h}readToGPU(t,e={}){const n=this.texData.get(t),{values:r,shape:i,slice:s,dtype:a,isPacked:o,texture:l}=n;if("complex64"===a)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new qG(i,jG):new BG(i,jG);const r=this.runWebGLProgram(n,[{dataId:t,shape:i,dtype:a}],a),s=this.readToGPU(r,e);return this.disposeIntermediateTensorInfo(r),s}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(t,e.customTexShape),c=Zb().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map(t=>tb(t));return Pw(t.shape,t.dtype,n)}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Pw(t.shape,t.dtype,e)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!DV(n)){if(hg().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),i=Lm(e);if(hg().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...kV(e)).subarray(0,i);return this.disposeIntermediateTensorInfo(n),s}const s=hg().getBool("WEBGL_PACK")&&!0===r,a=s?jV(e):e,o=s?new IW(a):new EW(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:t}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return hg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const i=nb(this.activeTimers.map(t=>t.query)).filter(t=>null!=t),s=nb(this.activeTimers.map(t=>t.name)).filter(t=>null!=t);this.activeTimers=e,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(hg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(i);a.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),a.getExtraProfileInfo=()=>t.map((t,e)=>({name:s[e],ms:t})).map(t=>`${t.name}: ${t.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return hg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Jv(),endMs:null}}endTimer(t){return hg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Jv(),t)}async getQueryTime(t){if(hg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:i,isPacked:s,slice:a}=this.texData.get(t),o=a&&a.origDataId||t,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,i,s)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=ZG){return hg().getBool("WEBGL_CPU_FORWARD")&&t.every(t=>null==this.texData.get(t.dataId).texture&&Lm(t.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){Mv("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return KG(t.shape,e)}packedUnaryOp(t,e,n){const r=new qG(t.shape,e),i=this.compileAndRun(r,[t],n);return Zb().makeTensorFromTensorInfo(i)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=xG(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(hg().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,WG,t.dtype);const e=new BG(t.shape,WG),n=this.compileAndRun(e,[t]);return Zb().makeTensorFromTensorInfo(n)}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&qm(n[0])){const i=n.map(t=>Qv(t));r=this.write(i,t,e)}else r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){return Zb().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,n),this)}unpackTensor(t){const e=new XG(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new FG(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[GV(t.shape),...HV(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},i=[GV(e),...HV(e)],s=new PG(i,n),a=[n],o=this.runWebGLProgram(s,[r],t.dtype,a,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}decode(t,e){const n=this.texData.get(t),{isPacked:r,shape:i,dtype:s}=n;null!=e&&Rm(Lm(i)<=e[0]*e[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.");const a=jV(i);let o;o=r?new MW(a):new TW(a);const l=[null!=e?e:kV(a)];return{dtype:s,shape:i,dataId:this.runWebGLProgram(o,[{shape:a,dtype:s,dataId:t}],s,l,!0,e).dataId}}runWebGLProgram(t,e,n,r,i=!1,s){const a=this.makeTensorInfo(t.outputShape,n),o=this.texData.get(a.dataId);if(t.packedOutput&&(o.isPacked=!0),t.outPackingScheme===MV.DENSE){const e=null!=s?s:kV(t.outputShape);o.texShape=e.map(t=>2*t)}if(null!=t.outTexUsage&&(o.usage=t.outTexUsage),0===Lm(a.shape))return o.values=Wm(a.dtype,0),a;const l=[],u=e.map(e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&Lm(e.shape)<=hg().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}if(this.uploadToGPU(e.dataId),!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),l.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!XV(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),l.push(e),n=this.texData.get(e.dataId),t.shape=r}return{shape:e.shape,texData:n,isUniform:!1}});this.uploadToGPU(a.dataId);const c={shape:a.shape,texData:o,isUniform:!1},h=function(t,e,n){let r="";e.concat(n).forEach(e=>{const i=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!e.isUniform){const s=e.texData.texShape,{useSqueezeShape:a,uniformShape:o,keptDims:l}=yW(t.packedInputs,e.shape,s);let u="",c="",h="";if(1===o.length&&t.packedInputs){const t=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${t[0]>1}_${t[1]>1}`}else if(2!==o.length||t.packedInputs){if(o.length>2&&!t.packedInputs){const t=Jm(o);h=`${t[0]===s[1]}_${t[t.length-1]===s[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=e.shape.length,p=2===o.length&&Fm(e.shape,s),f=1===Lm(e.shape),m=o_(e.shape,n.shape),g=!t.packedInputs&&d===n.shape.length&&Fm(s,n.texData.texShape),x=t.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${d}_${g}_${a?l:""}_${o.length}_${f}_${m}_${p}_${u}_${c}_${h}_${x}_${i}`}else{const t=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${t}_${i}`}});const i=t.userCode;let s=t.constructor.name;return s+="_"+r+"_"+i+`${hg().getNumber("WEBGL_VERSION")}`,s}(t,u,c),d=this.getAndSaveBinary(h,()=>function(t,e,n,r){const i=n.map((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}}),s=i.map(t=>t.shapeInfo),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=lW(i,a,e),l=function(t,e){const n=WV(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(NV(t,()=>t.shaderSource(n,e)),NV(t,()=>t.compileShader(n)),hg().get("ENGINE_COMPILE_ONLY"))return n;if(!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw PV(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t.gl,o),u=t.createProgram(l);return hg().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(t.buildVao(u),Object.assign({program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:a},wW(t,e,u)))}(this.gpgpu,t,u,c)),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),hg().get("ENGINE_COMPILE_ONLY")||function(t,e,n,r,i){e.program.enableShapeUniforms||(_W(e.inShapeInfos,n),_W([e.outShapeInfo],[r]));const s=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(s.texture,a[0],a[1]):t.setOutputMatrixTexture(s.texture,a[0],a[1]),t.setProgram(e.webGLProgram),t.bindVertexArray(e.webGLProgram.vao),1===hg().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN);for(let r=0;r<n.length;++r){const i=n[r],{uniform:s,offset:a,shape:o,texShape:l}=e.variablesLocations[r];if(o){const{uniformShape:n}=yW(e.program.packedInputs,i.shape,i.texData.texShape);switch(n.length){case 1:t.gl.uniform1iv(o,new Int32Array(n));break;case 2:t.gl.uniform2iv(o,new Int32Array(n));break;case 3:t.gl.uniform3iv(o,new Int32Array(n));break;case 4:t.gl.uniform4iv(o,new Int32Array(n))}}if(l&&t.gl.uniform2i(l,i.texData.texShape[0],i.texData.texShape[1]),null!=s)if(i.isUniform)if(Lm(i.shape)<2)t.gl.uniform1f(s,i.uniformValues[0]);else{let e=i.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(s,e)}else null!=i.texData.slice&&null!=a&&t.gl.uniform1i(a,i.texData.slice.flatOffset),t.setInputMatrixTexture(i.texData.texture.texture,s,r)}const o=e.outShapeLocation;if(o)switch(r.shape.length){case 1:t.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:t.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:t.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:t.gl.uniform4iv(o,new Int32Array(r.shape))}if(e.outShapeStridesLocation){const n=Jm(r.shape);switch(r.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(n));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(n));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(n))}}if(e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&i)for(let n=0;n<e.program.customUniforms.length;++n){const r=e.program.customUniforms[n],s=e.customUniformLocations[n],a=i[n];if("float"===r.type)t.gl.uniform1fv(s,a);else if("vec2"===r.type)t.gl.uniform2fv(s,a);else if("vec3"===r.type)t.gl.uniform3fv(s,a);else if("vec4"===r.type)t.gl.uniform4fv(s,a);else if("int"===r.type)t.gl.uniform1iv(s,a);else if("ivec2"===r.type)t.gl.uniform2iv(s,a);else if("ivec3"===r.type)t.gl.uniform3iv(s,a);else{if("ivec4"!==r.type)throw Error(`uniform type ${r.type} is not supported yet.`);t.gl.uniform4iv(s,a)}}t.executeProgram()}(this.gpgpu,d,u,c,r),l.forEach(t=>this.disposeIntermediateTensorInfo(t)),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)}));const m=hg().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const t=Jv();t-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!hg().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===i){const t=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),t}return a}compileAndRun(t,e,n,r,i=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,r,i)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(hg().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Qb(()=>{if(!hg().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=hg().getBool("DEBUG");hg().set("DEBUG",!1);const e=this.abs(qw(1e-8)).dataSync()[0];if(hg().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:i,texture:s,usage:a,isPacked:o}=e;if(null!=s)return;const l=null!=this.activeTimers;let u;l&&(u=Jv());let c=e.texShape;if(null==c&&(c=function(t,e=!1){let n=hg().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=hg().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&hg().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),e&&(n*=2,r*=2,1===(t=t.map((e,n)=>n>=t.length-2?km(t[n]):t[n])).length&&(t=[2,t[0]])),2!==t.length){const e=Vm(t);t=e.newShape}let i=Lm(t),s=null;t.length<=1&&i<=n?s=[1,i]:2===t.length&&t[0]<=n&&t[1]<=n?s=t:3===t.length&&t[0]*t[1]<=n&&t[2]<=n?s=[t[0]*t[1],t[2]]:3===t.length&&t[0]<=n&&t[1]*t[2]<=n?s=[t[0],t[1]*t[2]]:4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n?s=[t[0]*t[1]*t[2],t[3]]:4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n&&(s=[t[0],t[1]*t[2]*t[3]]);const a=null!=s&&Math.max(...s)>r&&Math.min(...s)<=(e?2:1)&&Math.min(...s)>0;if(null==s||a)if(e){const e=GV(t);let n=2,r=2;t.length&&([n,r]=HV(t)),i=e*(n/2)*(r/2),s=Om(i).map(t=>2*t)}else s=Om(i);return s}(n,o),e.texShape=c),null!=i){const t=jV(n);let s,a=c[1],h=c[0];const d=i instanceof Uint8Array||i instanceof Uint8ClampedArray;!o&&d||([a,h]=AV(c[0],c[1])),s=o?new AW(t,d):new kW(t,d);const p=d?[h,a]:c,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=d?EV.PIXELS:EV.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),a,h,i);const g=[[h,a]],x=!0,y=this.runWebGLProgram(s,[f],r,g,x),v=this.texData.get(y.dataId);e.texShape=v.texShape,e.isPacked=v.isPacked,e.usage=v.usage,hg().get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(e.texture=v.texture,e.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=Jv()-u)}else{const t=this.acquireTexture(c,a,r,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*jm(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}for(const[,e]of Object.entries(this.binaryCache)){const n=new Promise(t=>{try{this.checkCompletion_(e),t(!0)}catch(t){throw t}});t.push(n)}return Promise.all(t)}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await XM(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(!1===this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw PV(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);const{variablesLocations:e,customUniformLocations:n,infLoc:r,nanLoc:i,outShapeLocation:s,outShapeStridesLocation:a,outTexShapeLocation:o}=wW(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=e,t.customUniformLocations=n,t.infLoc=r,t.nanLoc=i,t.outShapeLocation=s,t.outShapeStridesLocation=a,t.outTexShapeLocation=o}}createTensorFromGPUData(t,e,n){t.channels=t.channels||"RGBA";const{texture:r,height:i,width:s,channels:a}=t,o=Zb().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(r,e,n,i,s,a);return Zb().makeTensorFromDataId(l,e,n,o)}}JG.nextDataId=0,Ub()&&nw("webgl",()=>new JG,2);const QG="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class tH{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=u_(e,n),this.enableShapeUniforms=SW(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const eH="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class nH{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=u_(e,n);const i=this.outputShape.length;this.enableShapeUniforms=SW(i);let s="";if(r)if(0===i||1===Lm(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${xW(i)} coords = getOutputCoords();\n        `,1===i)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=LG("coords",i);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${t[i-2]} + 1) >= outShape[${i} - 2];\n            bool nextColOutOfBounds =\n              (${t[i-1]} + 1) >= outShape[${i} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${t[i-2]} + 1) >= ${this.outputShape[i-2]};\n            bool nextColOutOfBounds =\n              (${t[i-1]} + 1) >= ${this.outputShape[i-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function rH(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const iH={kernelName:Ax,backendName:"webgl",kernelFunc:rH};function sH(t){const{inputs:e,backend:n}=t,{real:r,imag:i}=e,s=n.makeTensorInfo(r.shape,"complex64"),a=n.texData.get(s.dataId),o=rH({inputs:{x:r},backend:n}),l=rH({inputs:{x:i},backend:n});return a.complexTensorInfos={real:o,imag:l},s}const aH={kernelName:Vg,backendName:"webgl",kernelFunc:sH},oH="return (a < 0.) ? b * a : a;",lH="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",uH={kernelName:Px,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{alpha:s}=r,a=n.makeTensorInfo([],"float32",Yv(s,"float32")),o=hg().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nH(lH,i.shape,a.shape):new tH(oH,i.shape,a.shape),l=n.runWebGLProgram(o,[i,a],"float32");return n.disposeIntermediateTensorInfo(a),l}},cH="return (a < 0.) ? b * a : a;",hH="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",dH={kernelName:xy,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r,alpha:i}=e,s=hg().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nH(hH,r.shape,i.shape):new tH(cH,r.shape,i.shape);return n.runWebGLProgram(s,[r,i],"float32")}},pH="if (isnan(x)) return x;";function fH({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:r}){return({inputs:i,backend:s})=>{const{x:a}=i,o=s,l=r||a.dtype;if(o.shouldExecuteOnCPU([a])&&null!=n){const t=o.texData.get(a.dataId),e=n(t.values,l);return o.makeTensorInfo(a.shape,l,e)}let u;return u=hg().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new qG(a.shape,e):new BG(a.shape,t),o.runWebGLProgram(u,[a],l)}}function mH({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:i,dtype:s}){return({inputs:a,backend:o})=>{const{a:l,b:u}=a,c=o;if(r&&"complex64"===l.dtype){const e=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,i]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(e=>{const[n,r]=e,i={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:u.shape},a=new tH(t,l.shape,u.shape);return c.runWebGLProgram(a,[i,s],Tb(n.dtype,r.dtype))}),s=sH({inputs:{real:r,imag:i},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(i),s}const h=s||Tb(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=i){const t=c.texData.get(l.dataId).values,e=c.texData.get(u.dataId).values,n="string"===l.dtype?nI(t):t,r="string"===l.dtype?nI(e):e,[s,a]=i(l.shape,u.shape,n,r,h),o=c.makeTensorInfo(a,h);return c.texData.get(o.dataId).values=s,o}let d;return d=hg().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new nH(e,l.shape,u.shape,n):new tH(t,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function gH(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":GG;if("elu"===t)return e?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":HG;if("prelu"===t)return e?hH:cH;if("leakyrelu"===t)return e?lH:oH;if("sigmoid"===t)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class xH{constructor(t,e,n,r=!1,i=!1,s=!1,a=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=SW(this.outputShape.length);const u=r?t[1]:t[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=i?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";a&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,g="result = activation(result);");const x=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",v="rc.x";t[0]<e[0]?y=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(v=`imod(rc.x, ${e[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${y};\n        int batchB = ${v};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${x}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class yH{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=u_(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const vH="return a * b;";function bH(t){const{inputs:e,backend:n}=t,{a:r,b:i}=e,s=Tb(r.dtype,i.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(i.dataId),s=new yH("return areal * breal - aimag * bimag;",r.shape,i.shape),a=new yH("return areal * bimag + aimag * breal;",r.shape,i.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:i.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:i.shape}],l=n.runWebGLProgram(s,o,"float32"),u=n.runWebGLProgram(a,o,"float32"),c=sH({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,i])){const t=n.texData.get(r.dataId),e=n.texData.get(i.dataId),[a,o]=aG(r.shape,i.shape,t.values,e.values,s),l=n.makeTensorInfo(o,s);return n.texData.get(l.dataId).values=a,l}let a;return a=hg().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nH(vH,r.shape,i.shape):new tH(vH,r.shape,i.shape),n.runWebGLProgram(a,[r,i],s)}const wH={kernelName:ay,backendName:"webgl",kernelFunc:bH};function _H(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{shape:s}=r,a=n,o=Lm(i.shape),l=zm(s,o),u=Lm(l);Rm(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${i.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const c=a.texData.get(i.dataId);return!c.isPacked||XV(i.shape,l)||null!==c.texture&&XV(c.shape,l)?(a.incRef(i.dataId),{dataId:i.dataId,shape:l,dtype:i.dtype}):function(t,e,n){const r=[GV(t.shape),...HV(t.shape)],i={dtype:t.dtype,shape:r,dataId:t.dataId},s=[GV(e),...HV(e)],a=new PG(s,r),o=[r],l=n.runWebGLProgram(a,[i],t.dtype,o,!0);return{dataId:l.dataId,shape:e,dtype:l.dtype}}(i,l,a)}const SH={kernelName:Ey,backendName:"webgl",kernelFunc:_H};class TH{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:i,outSize:s}=t;this.outputShape=[r,s];const a=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=e){const t=1/e;l=`sumValue += dot(values * ${Pm(t)?t.toPrecision(2):t}, ones);`}let u="";i%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class MH{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:i,outSize:s}=t;this.outputShape=[r,s];let a="0.0",o="";"prod"===e?a="1.0":"min"===e?(a="1.0 / 1e-20",o="min"):"max"===e&&(a="-1.0 / 1e-20",o="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?l="sumValue":"prod"===e?l="prodValue":"all"===e?l="allValue":"any"===e&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===e} || ${"max"===e}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===e?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";i%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function EH(t,e,n,r){const i=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=rE(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let s=t;for(let a=0;a<i.length;a++){const{inSize:o,windowSize:l,outSize:u}=i[a];let c,h;c="mean"===n?0===a?new TH({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},o):new TH({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u}):new MH({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},n),h=s,s=r.runWebGLProgram(c,[s],e),h.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(h)}return s}class IH{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const r=xW(this.rank),i=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=n[e];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${i}));\n    }\n    `}}class CH{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=xW(this.rank),i=DG("rc",this.rank),s=new Array(this.rank);for(let t=0;t<e.length;t++)s[e[t]]=i[t];const a=`vec2(${s.slice(-2).join()})`,o=`++${i[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${i[this.rank-1]};\n      if(++${i[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function kH(t,e,n){const r=hg().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new CH(t.shape,e):new IH(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}function AH(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r;return function(t,e,n,r){const i=e,s=t.shape.length,a=Bm(i,t.shape);let o=a;const l=ZS(o,s),u=null!=l;let c=t;u&&(c=kH(t,l,r),o=QS(o.length,s)),YS("sum",o,s);const[h,d]=XS(c.shape,o);let p=h;n&&(p=KS(h,a));const f=Lm(d),m=_H({inputs:{x:c},attrs:{shape:[Lm(t.shape)/f,f]},backend:r}),g=EH(m,Mb(t.dtype),"sum",r),x=_H({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),x}(i,s,a,n)}const RH={kernelName:qy,backendName:"webgl",kernelFunc:AH};function NH(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{perm:s}=r,a=n,o=i.shape.length,l=new Array(o);for(let t=0;t<l.length;t++)l[t]=i.shape[s[t]];let u;if(a.shouldExecuteOnCPU([i])){const t=a.texData.get(i.dataId).values,e=RG(t,i.shape,i.dtype,s,l);u=a.makeTensorInfo(l,i.dtype),a.texData.get(u.dataId).values=e}else u=kH(i,s,a);return u}const DH={kernelName:mv,backendName:"webgl",kernelFunc:NH};function LH({a:t,b:e,transposeA:n,transposeB:r,backend:i,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=t.shape.length,c=e.shape.length,h=n?t.shape[u-2]:t.shape[u-1],d=r?e.shape[c-1]:e.shape[c-2],p=n?t.shape[u-1]:t.shape[u-2],f=r?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),g=e.shape.slice(0,-2),x=Lm(m),y=Lm(g),v=u_(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);Rm(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${r} must match.`);const b=n?[x,h,p]:[x,p,h],w=r?[y,f,d]:[y,d,f],_=_H({inputs:{x:t},backend:i,attrs:{shape:b}}),S=_H({inputs:{x:e},backend:i,attrs:{shape:w}}),T=[_,S],M=Math.max(x,y),E=n?_.shape[1]:_.shape[2],I=null!=s,C=null!=a,k="leakyrelu"===l,A=null!=l?gH(l,!0):null;let R;if((1===p||1===f)&&E>1e3&&!1===(I||C||k||null!=A)){let t=_,e=S;n&&(t=NH({inputs:{x:_},backend:i,attrs:{perm:[0,2,1]}}),T.push(t)),r&&(e=NH({inputs:{x:S},backend:i,attrs:{perm:[0,2,1]}}),T.push(e));const s=1===f;let a=t;1!==f&&(a=_H({inputs:{x:t},backend:i,attrs:{shape:[M,E,1]}}),T.push(a));const o=1===f?2:1;let l=e;s&&(l=_H({inputs:{x:e},backend:i,attrs:{shape:[M,1,E]}}),T.push(l));const u=bH({inputs:{a,b:l},backend:i});R=AH({inputs:{x:u},backend:i,attrs:{axis:o,keepDims:!0}}),T.push(u)}else{const l=Tb(t.dtype,e.dtype),u=new xH(b,w,[M,p,f],n,r,I,A,C,k),c=[_,S];if(null!=s&&c.push(s),C&&c.push(a),k){const t=i.makeTensorInfo([],"float32",Yv(o,"float32"));c.push(t),T.push(t)}R=i.runWebGLProgram(u,c,l)}const N=_H({inputs:{x:R},backend:i,attrs:{shape:v}});T.push(R);for(const t of T)i.disposeIntermediateTensorInfo(t);return N}const FH={kernelName:_v,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:i,b:s,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return LH({a:i,b:s,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},PH="return abs(x);",OH={kernelName:gg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const t=n.texData.get(r.dataId),e=xG(t.values);return n.makeTensorInfo(r.shape,r.dtype,e)}let i;return i=hg().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new qG(r.shape,PH):new BG(r.shape,PH),n.runWebGLProgram(i,[r],r.dtype)}},$H=fH({opSnippet:VG+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),UH={kernelName:xg,backendName:"webgl",kernelFunc:$H},zH=fH({opSnippet:VG+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),BH={kernelName:yg,backendName:"webgl",kernelFunc:zH},VH="return a + b;",WH=mH({opSnippet:VH,packedOpSnippet:VH,supportsComplex:!0,cpuKernelImpl:$W}),GH={kernelName:vg,backendName:"webgl",kernelFunc:WH};class HH{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((t,e)=>`T${e}`);const n=[];this.variableNames.forEach(t=>{n.push(`float v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>`v${t}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class jH{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((t,e)=>`T${e}`);const n=[];this.variableNames.forEach(t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>`v${t}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const qH={kernelName:bg,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,i=n;if(1===i.length)return rH({inputs:{x:i[0]},backend:r});if(i.length>hg().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(i.length/2),n=t({inputs:i.slice(0,e),backend:r}),s=t({inputs:i.slice(e),backend:r});return t({inputs:[n,s],backend:r})}const s=i.map(t=>t.dtype).reduce((t,e)=>Tb(t,e)),a=i.map(t=>t.shape),o=hg().getBool("WEBGL_PACK")?new jH(i[0].shape,a):new HH(i[0].shape,a);return r.runWebGLProgram(o,i,s)}},XH={kernelName:wg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r,o=i.shape.length,l=Bm(s,i.shape);let u=l;const c=ZS(u,o);let h=i;null!=c&&(h=NH({inputs:{x:i},backend:n,attrs:{perm:c}}),u=QS(u.length,o)),YS("all",u,o);const[d,p]=XS(h.shape,u),f=_H({inputs:{x:h},backend:n,attrs:{shape:[-1,Lm(p)]}}),m=EH(f,f.dtype,"all",n);let g;return g=_H(a?{inputs:{x:m},backend:n,attrs:{shape:KS(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},KH={kernelName:_g,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r,o=i.shape.length,l=Bm(s,i.shape);let u=l;const c=ZS(u,o);let h=i;null!=c&&(h=NH({inputs:{x:i},backend:n,attrs:{perm:c}}),u=QS(u.length,o)),YS("any",u,o);const[d,p]=XS(h.shape,u),f=_H({inputs:{x:h},backend:n,attrs:{shape:[-1,Lm(p)]}}),m=EH(f,f.dtype,"any",n);let g;return g=_H(a?{inputs:{x:m},backend:n,attrs:{shape:KS(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class YH{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:i,outSize:s}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[i,s];const a="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class ZH{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Rm(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const i=t[t.length-1],s=Math.ceil(i/e);this.outputShape=t.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=xW(o),u=LG("coords",o);let c,h;if(1===s){h=o+1;const t=xW(h);c=`\n        ${t} sourceLocR = ${t}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${t} sourceLocG = ${t}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${t} sourceLocA = ${t}(${u.join()}, 0);\n        --${u[o-1]};\n        ${t} sourceLocB = ${t}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map(t=>"int "+t),m=LG("sourceLocR",h-1).concat("inIdx.r"),g=LG("sourceLocG",h-1).concat("inIdx.g"),x=LG("sourceLocB",h-1).concat("inIdx.b"),y=LG("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",b=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,_=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${_}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${b}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function JH(t,e,n,r=null){let i=e.shape[0],s=e.shape[1];null!=r&&(i=r.shape[0],s=r.shape[1]);const a=rE(s),o={windowSize:a,inSize:s,batchSize:i,outSize:Math.ceil(s/a)},l=new YH(o,n,null==r),u=[e];null!=r&&u.push(r);const c=t.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=JH(t,e,n,c);return t.disposeIntermediateTensorInfo(c),h}function QH(t,e,n,r=null){const i=null!=r?r.shape:e.shape,s=rE(i[i.length-1]),a=new ZH(i,s,n,null==r),o=null==r?[e]:[e,r],l=t.runWebGLProgram(a,o,"int32");if(l.shape.length===e.shape.length){const r=QH(t,e,n,l);return t.disposeIntermediateTensorInfo(l),r}return l}function tj(t,e,n,r){const i=[n];if(YS("arg"+r.charAt(0).toUpperCase()+r.slice(1),i,e.shape.length),!hg().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],s=t.texData.get(e.dataId);let a=e;null!==s&&s.isPacked&&(a=t.unpackTensor(e),n.push(a));const[o,l]=XS(a.shape,i),u=Lm(l),c=_H({inputs:{x:a},backend:t,attrs:{shape:[-1,u]}});n.push(c);const h=JH(t,c,r);n.push(h);const d=_H({inputs:{x:h},backend:t,attrs:{shape:o}});return n.forEach(e=>t.disposeIntermediateTensorInfo(e)),d}return QH(t,e,r)}const ej={kernelName:Sg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s}=r;let a=Bm(s,i.shape);const o=ZS(a,i.shape.length);let l=i;const u=[];null!=o&&(l=NH({inputs:{x:i},backend:n,attrs:{perm:o}}),u.push(l),a=QS(a.length,l.shape.length)),YS("argMax",[a[0]],l.shape.length);const c=tj(n,l,a[0],"max");return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),c}},nj={kernelName:Tg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s}=r;let a=Bm(s,i.shape);const o=ZS(a,i.shape.length);let l=i;const u=[];null!=o&&(l=NH({inputs:{x:i},backend:n,attrs:{perm:o}}),u.push(l),a=QS(a.length,l.shape.length)),YS("argMin",[a[0]],l.shape.length);const c=tj(n,l,a[0],"min");return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),c}},rj=fH({opSnippet:VG+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),ij={kernelName:Mg,backendName:"webgl",kernelFunc:rj},sj=fH({opSnippet:VG+"return log(x + sqrt(x * x + 1.0));"}),aj={kernelName:Eg,backendName:"webgl",kernelFunc:sj},oj=fH({opSnippet:VG+"\n  return atan(x);\n"}),lj={kernelName:Ig,backendName:"webgl",kernelFunc:oj},uj=mH({opSnippet:QG+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+eH+"\n  return result;\n"}),cj={kernelName:kg,backendName:"webgl",kernelFunc:uj},hj=fH({opSnippet:VG+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),dj={kernelName:Cg,backendName:"webgl",kernelFunc:hj};class pj{constructor(t,e,n,r=!1,i=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,a=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let x="0.0";if(f||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?i?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(y="avgValue / max(count, 1.0)");const v=4*Math.floor(s/4),b=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class fj{constructor(t,e,n,r=!1,i=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,a=t.strideDepth,o=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,x=t.padInfo.left;this.outputShape=t.outShape;const y="avg"===e;let v="0.0";if(y||(v="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${x});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?i?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(b="avgValue / max(count, 1.0)");const w=4*Math.floor(s/4),_=s%4,S=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${x});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n        }\n        setOutput(${b});\n      }\n    `}}const mj={kernelName:Ag,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e;tW(i,"avgPool");const{filterSize:s,strides:a,pad:o,dimRoundingMode:l}=r;Rm(nS(a,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`);const u=j_(i.shape,s,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&Fm(u.inShape,u.outShape))return rH({inputs:{x:i},backend:n});const c=new pj(u,"avg",!1);return n.runWebGLProgram(c,[i],"float32")}},gj={kernelName:Ng,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{filterSize:s,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=q_(i.shape,s,a,[1,1,1],o,l,u),h=new fj(c,"avg",!1);return n.runWebGLProgram(h,[i],"float32")}};class xj{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,i=t.strideWidth,s=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=o-1-t.padInfo.top,c=l-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class yj{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=c-1-t.padInfo.front,f=h-1-t.padInfo.top,m=d-1-t.padInfo.left,g=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${i}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const vj={kernelName:Dg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s}=e,a=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=q_(a.shape,o,l,[1,1,1],u,c),d=new yj(h);return n.runWebGLProgram(d,[i],a.dtype)}},bj={kernelName:Rg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s}=e,a=s;tW([i,s],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=j_(a.shape,o,l,1,u),h=new xj(c);return n.runWebGLProgram(h,[i],a.dtype)}},wj={kernelName:Lg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:i,b:s}=e,{transposeA:a,transposeB:o}=r;return LH({a:i,b:s,transposeA:a,transposeB:o,backend:n})}};class _j{constructor(t,e,n,r,i,s){this.outputShape=[],this.variableNames=["x","mean","variance"],u_(t,e),u_(t,n);let a="0.0";null!=r&&(u_(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=i&&(u_(t,i),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Sj{constructor(t,e,n,r,i,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],u_(t,e),u_(t,n);let a="vec4(0.0)";null!=r&&(u_(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=i&&(u_(t,i),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Tj={kernelName:Mx,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:i,variance:s,offset:a,scale:o}=t;Rm(i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),Rm(null==a||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),Rm(null==o||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,i,s];let c=null;null!=a&&(c=a.shape,u.push(a));let h=null;null!=o&&(h=o.shape,u.push(o));const d=hg().getBool("WEBGL_PACK_NORMALIZATION")?new Sj(r.shape,i.shape,s.shape,c,h,l):new _j(r.shape,i.shape,s.shape,c,h,l);return e.runWebGLProgram(d,u,u[0].dtype)}};class Mj{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=xW(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(t){if(1===t)return"sourceLoc";if(t<=6)return Ej.slice(0,t).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let r;r=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map((t,e)=>`sourceLoc.${Ej[e]} = start[${e}] + coords.${Ej[e]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const Ej=["x","y","z","w","u","v"];class Ij{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=xW(this.rank),n=LG("coords",this.rank),r=LG("sourceLoc",this.rank),i=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${i})`,a=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map((t,e)=>`start[${e}]`).join()});`:t.map((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`).join("\n");this.userCode=`\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}}function Cj(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{begin:s,size:a}=r,[o,l]=U_(i,s,a);if(M_(i,o,l),0===Lm(l))return n.makeTensorInfo(l,i.dtype,[]);if(n.shouldExecuteOnCPU([i])||"string"===i.dtype){const t=n.texData.get(i.dataId),e=yG(t.values,o,l,i.shape,i.dtype);return n.makeTensorInfo(l,i.dtype,e)}const{isPacked:u}=n.texData.get(i.dataId),c=O_(i.shape,o,l);if(u||!c){const t=hg().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ij(l):new Mj(l),e=[o];return n.runWebGLProgram(t,[i],i.dtype,e)}return n.uploadToGPU(i.dataId),function(t,e,n,r){const i=r.texData.get(t.dataId),s=r.makeTensorInfo(n,t.dtype),a=r.texData.get(s.dataId);Object.assign(a,i),a.refCount=1,a.shape=n,a.dtype=t.dtype;let o=$_(e,Jm(t.shape));i.slice&&(o+=i.slice.flatOffset),a.slice={flatOffset:o,origDataId:i.slice&&i.slice.origDataId||t.dataId};const l=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,l+1),s}(i,o,l,n)}const kj={kernelName:zy,backendName:"webgl",kernelFunc:Cj},Aj={kernelName:Fg,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{blockShape:s,crops:a}=r;Rm(i.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=s.reduce((t,e)=>t*e),l=sE(i.shape,s,o),u=aE(l.length,s.length),c=oE(i.shape,s,o),h=lE(a,s.length),d=uE(c,a,s.length),p=[],f=_H({inputs:{x:i},backend:n,attrs:{shape:l}}),m=NH({inputs:{x:f},backend:n,attrs:{perm:u}}),g=_H({inputs:{x:m},backend:n,attrs:{shape:c}}),x=Cj({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(t=>n.disposeIntermediateTensorInfo(t)),x}},Rj={kernelName:Pg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,weights:s}=e,{size:a}=r,o=n.readSync(i.dataId),l=n.readSync(s.dataId),u=UW(o,l,s.dtype,s.shape,a);return n.makeTensorInfo([a],s.dtype,u)}},Nj={kernelName:Og,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{a:r,b:i}=e,s=hg().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=hg().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,i])||1===a){const t=n.texData.get(r.dataId).values,e=n.texData.get(i.dataId).values,[s,a]=BW(r.shape,i.shape,t,e,r.dtype),o=n.makeTensorInfo(a,r.dtype);return n.texData.get(o.dataId).values=s,o}let o;return o=s?new nH("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,i.shape,!1):new tH("\n  return float(int(a.r) & int(b.r));\n",r.shape,i.shape),n.runWebGLProgram(o,[r,i],r.dtype)}},Dj={kernelName:$g,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:r,s1:i}=e,s=n.readSync(r.dataId),a=n.readSync(i.dataId),o=u_(Array.from(s),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Lj=mH({opSnippet:"return float(a != b);",cpuKernelImpl:lG,dtype:"bool"}),Fj={kernelName:ly,backendName:"webgl",kernelFunc:Lj};function Pj(t){const{inputs:e,backend:n}=t,{input:r}=e;return rH({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Oj={kernelName:Sy,backendName:"webgl",kernelFunc:Pj},$j={kernelName:Ug,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:i}=e,{x:s}=n,{dtype:a}=i;if("complex64"===a){if("complex64"===s.dtype)return rH({inputs:{x:s},backend:r});const e=dT(s.shape),n=t({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),i=sH({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),i}if("complex64"===s.dtype){const e=Pj({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:a}});return r.disposeIntermediateTensorInfo(e),n}if(!Hm(s.dtype,a)){const t=rH({inputs:{x:s},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:a}}if(r.shouldExecuteOnCPU([s])){const t=r.texData.get(s.dataId).values,[e,n,i]=VW(t,s.shape,s.dtype,a);return r.makeTensorInfo(e,n,i)}if("int32"===a)return function(t,e){const n=new BG(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===a){const t=r.makeTensorInfo([],"bool",Wm("bool",1)),e=Lj({inputs:{a:s,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}},Uj="return ceil(x);",zj=fH({opSnippet:Uj,packedOpSnippet:Uj,cpuKernelImpl:WW}),Bj={kernelName:zg,backendName:"webgl",kernelFunc:zj};class Vj{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Wj{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const Gj={kernelName:Bg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{clipValueMin:s,clipValueMax:a}=r;let o;o=hg().getBool("WEBGL_PACK_CLIP")?new Wj(i.shape):new Vj(i.shape);const l=[[s],[a]];return n.runWebGLProgram(o,[i],i.dtype,l)}};class Hj{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function jj(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const qj={kernelName:Wg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,i=n.texData.get(r.dataId),s=new Hj(r.shape),a=[jj(r,i.complexTensorInfos.real),jj(r,i.complexTensorInfos.imag)];return n.runWebGLProgram(s,a,a[0].dtype)}};class Xj{constructor(t){this.outputShape=[],this.outputShape=YM(t,1),this.variableNames=t.map((t,e)=>`T${e}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const r=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${r}));`)}const r=e.length,i=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${i}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Kj{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=YM(t,e);const n=this.outputShape,r=n.length,i=xW(r),s=LG("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((t,e)=>`T${e}`);const o=new Array(t.length-1);o[0]=t[0][e];for(let n=1;n<o.length;n++)o[n]=o[n-1]+t[n][e];const l=a[e],u=a.slice(-2),c=a.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let t=1;t<o.length;t++){const e=o[t-1];h+=`\n        if (${l} < ${o[t]}  && ${l} >= ${o[t-1]}) {\n          return getChannel(\n            getT${t}(${Yj(a,l,e)}),\n            vec2(${Yj(u,l,e)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${Yj(a,l,p)}),\n          vec2(${Yj(u,l,p)}));`,this.userCode=`\n      float getValue(${a.map(t=>"int "+t)}) {\n        ${h}\n      }\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function Yj(t,e,n){const r=t.indexOf(e);return t.map((t,e)=>e===r?`${t} - ${n}`:t).join()}function Zj(t){const{inputs:e,backend:n}=t,{input:r}=e;return rH({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Jj={kernelName:Nx,backendName:"webgl",kernelFunc:Zj};function Qj(t,e,n){const r=t[0].dtype;if("complex64"===r){const r=t.map(t=>Pj({inputs:{input:t},backend:n})),i=t.map(t=>Zj({inputs:{input:t},backend:n})),s=Qj(r,e,n),a=Qj(i,e,n),o=sH({inputs:{real:s,imag:a},backend:n});return r.forEach(t=>n.disposeIntermediateTensorInfo(t)),i.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}let i=n.shouldExecuteOnCPU(t);if("string"===r&&(i=!0),i){const i=t.map(t=>{const r=Lm(t.shape.slice(e));return _H({inputs:{x:t},backend:n,attrs:{shape:[-1,r]}})}),s=i.map(t=>({vals:n.readSync(t.dataId),shape:t.shape})),a=YM(i.map(t=>t.shape),1),o=1===i[0].shape[0],l=GW(s,a,r,o),u=YM(t.map(t=>t.shape),e),c=n.makeTensorInfo(u,r,l);return i.forEach(t=>n.disposeIntermediateTensorInfo(t)),c}const s=t.filter(t=>Lm(t.shape)>0),a=hg().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){const e=a?new BG(t[0].shape,jG):new qG(t[0].shape,jG);return n.runWebGLProgram(e,t,r)}const o=hg().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){const t=[];for(let r=0;r<s.length;r+=o){const i=s.slice(r,r+o);t.push(Qj(i,e,n))}const r=Qj(t,e,n);for(const e of t)n.disposeIntermediateTensorInfo(e);return r}if(a){const t=new Kj(s.map(t=>t.shape),e);return n.runWebGLProgram(t,s,r)}const{tensors2D:l,outShape:u}=function(t,e,n){const r=YM(t.map(t=>t.shape),e);return{tensors2D:t.map(t=>_H({inputs:{x:t},attrs:{shape:[-1,Lm(t.shape.slice(e))]},backend:n})),outShape:r}}(s,e,n),c=new Xj(l.map(t=>t.shape)),h=n.runWebGLProgram(c,l,r);l.forEach(t=>n.disposeIntermediateTensorInfo(t));const d=_H({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function tq(t){const{inputs:e,backend:n,attrs:r}=t,{axis:i}=r,s=Bm(i,e[0].shape)[0];KM(e.map(t=>t.shape),s);const a=YM(e.map(t=>t.shape),s);if(0===Lm(a))return n.makeTensorInfo(a,e[0].dtype,[]);const o=e.filter(t=>Lm(t.shape)>0);return 1===o.length?rH({inputs:{x:o[0]},backend:n}):Qj(o,s,n)}const eq={kernelName:Gg,backendName:"webgl",kernelFunc:tq};class nq{constructor(t,e=!1,n=null,r=!1,i=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,a=t.padInfo.left,o=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,g=m?1:2,x=m?2:3,y=m?3:1;let v="",b="";n&&(v=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${v}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${x}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${b}\n        setOutput(result);\n      }\n    `}}class rq{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${i}, ${s}, ${a});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class iq{constructor(t,e=!1,n=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=SW(this.outputShape.length);const s=t.padInfo.left,a=t.strideWidth,o=t.dilationWidth,l=t.filterHeight,u=t.filterWidth,c=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let t=0;t<u;t++)h+=`\n           vec4 xTexelC${2*t};\n           int xTexelC${2*t}Ready;\n           vec4 xTexelC${2*t+1};\n           int xTexelC${2*t+1}Ready;\n           vec4 xC${t};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {\n       `;for(let t=0;t<u;t++)h+=`\n           xTexelC${2*t} = vec4(0.0);\n           xTexelC${2*t}Ready = 0;\n           xTexelC${2*t+1} = vec4(0.0);\n           xTexelC${2*t+1}Ready = 0;\n           xC${t} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let e=0;e<(c+1)/2;e++){const n=2*e;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===a){if(n<u&&(s%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){const t=s%2==0?km(o):o;o%2==0&&s%2==1||o%2!=0&&s%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===t?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${t};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(s%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${t.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${t.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:i?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const f=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${p}\n         setOutput(result);\n       }\n     `}}class sq{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=SW(this.outputShape.length);const{dataFormat:n}=e,r=nW(),i="channelsLast"===n,s=i?1:2,a=i?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let l="";for(let t=0;t<=1;t++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${t};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${a}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${i}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*t+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*t+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function aq(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&1===n&&t[0]>1?[t[0],1]:null}function oq({x:t,filter:e,convInfo:n,backend:r,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:o=null}){const l=t.shape,u=r.texData.get(t.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat,f=!1;let m;const g=[];if(null!=s){const t=aq(s.shape,p);null!=t&&(s=_H({inputs:{x:s},backend:r,attrs:{shape:t}}),g.push(s))}if(null!=i){const t=aq(i.shape,p);null!=t&&(i=_H({inputs:{x:i},backend:r,attrs:{shape:t}}),g.push(i))}if((1!==h&&1!==d||!(c>1e3))&&u.isPacked&&p&&null!=u.texture&&l[2]%2!=0&&Fm(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:t.dataId,shape:[1,c,n.inChannels],dtype:t.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,Rm(XV(u.shape,h.shape),()=>`packed reshape ${u.shape} to ${h.shape} isn't free`);const p=_H({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(p);const x=LH({a:h,b:p,backend:r,transposeA:!1,transposeB:f,bias:i,activation:o,preluActivationWeights:s,leakyreluAlpha:a}),y=r.texData.get(x.dataId);Rm(y.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=d,y.shape=n.outShape,m=rH({inputs:{x},backend:r}),m.shape=n.outShape,g.push(x)}else{const l=n.outHeight*n.outWidth,u=_H({inputs:{x:t},backend:r,attrs:{shape:p?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=_H({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=LH({a:p?u:c,b:p?c:u,transposeA:!p,transposeB:f,backend:r,bias:i,activation:o,preluActivationWeights:s,leakyreluAlpha:a});m=_H({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),g.push(u),g.push(c),g.push(h)}for(const t of g)r.disposeIntermediateTensorInfo(t);return m}function lq({x:t,filter:e,convInfo:n,backend:r,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=l*u*c,g=d*h,x=[n.batchSize,m,g],y=[];if(null!=s){const t=aq(s.shape,f);null!=t&&(s=_H({inputs:{x:s},backend:r,attrs:{shape:t}}),y.push(s))}if(null!=i){const t=aq(i.shape,f);null!=t&&(i=_H({inputs:{x:i},backend:r,attrs:{shape:t}}),y.push(i))}const v=_H({inputs:{x:e},backend:r,attrs:{shape:[1,m,Lm(e.shape)/m]}});y.push(v);const b=new sq(x,n),w=[t.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],_=r.runWebGLProgram(b,[t],"float32",w),S=_H({inputs:{x:_},backend:r,attrs:{shape:x}});y.push(_),y.push(S);const T=null!=i,M=null!=s,E="leakyrelu"===o,I=o?gH(o,!0):null,C=new xH(f?S.shape:v.shape,f?v.shape:S.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,T,I,M,E),k=f?[S,v]:[v,S];if(i&&k.push(i),M&&k.push(s),E){const t=r.makeTensorInfo([],"float32",Yv(a,"float32"));k.push(t),y.push(t)}const A=r.runWebGLProgram(C,k,"float32"),R=_H({inputs:{x:A},backend:r,attrs:{shape:n.outShape}});y.push(A);for(const t of y)r.disposeIntermediateTensorInfo(t);return R}const uq={kernelName:Hg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=iS(l),d=X_(i.shape,s.shape,a,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&hg().getBool("WEBGL_EXP_CONV")){const t=new iq(d),e=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(t,[i,s],"float32",e)}else if(hg().getBool("WEBGL_CONV_IM2COL"))p=lq({x:i,filter:s,convInfo:d,backend:n});else{const t=new nq(d);p=n.runWebGLProgram(t,[i,s],"float32")}else p=oq({x:i,filter:s,convInfo:d,backend:n});const f=_H({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class cq{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,i=t.padInfo.left,s="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${i};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              ${s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class hq{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,i=t.strideWidth,s="channelsLast"===t.dataFormat,a=e-1-t.padInfo.top,o=n-1-t.padInfo.left,l=s?1:2,u=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class dq{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,i=t.padInfo.front,s=t.padInfo.top,a=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${i};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${a};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pq{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,o=e-1-t.padInfo.front,l=n-1-t.padInfo.top,u=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${i}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const fq={kernelName:jg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,dy:s}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=iS(l),d=X_(i.shape,c,a,1,o,u,!1,h),p=new cq(d);return n.runWebGLProgram(p,[i,s],"float32")}};class mq{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=SW(this.outputShape.length);const e=t.filterHeight,n=t.filterWidth,r=e-1-t.padInfo.top,i=n-1-t.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const gq={kernelName:qg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,filter:s}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=iS(u),d=X_(a,s.shape,o,1,l,c,!1,h);if(hg().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const t=[[d.strideHeight,d.strideWidth]],e=new mq(d);return n.runWebGLProgram(e,[i,s],"float32",t)}{const t=new hq(d);return n.runWebGLProgram(t,[i,s],"float32")}}},xq={kernelName:Xg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dilations:l}=r,u=K_(i.shape,s.shape,a,l,o),c=new rq(u);return n.runWebGLProgram(c,[i,s],"float32")}},yq={kernelName:Kg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,dy:s}=e,{strides:a,pad:o,filterShape:l}=r,u=K_(i.shape,l,a,1,o),c=new dq(u);return n.runWebGLProgram(c,[i,s],"float32")}},vq={kernelName:Yg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,filter:s}=e,{pad:a,strides:o,inputShape:l}=r,u=K_(l,s.shape,o,1,a),c=new pq(u);return n.runWebGLProgram(c,[i,s],"float32")}},bq=fH({opSnippet:pH+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${eH}\n  return result;\n`}),wq={kernelName:Zg,backendName:"webgl",kernelFunc:bq},_q=fH({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Sq={kernelName:Jg,backendName:"webgl",kernelFunc:_q};class Tq{constructor(t,e,n,r,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,a,o,l]=t,[u]=e,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[a-1+".0",o-1+".0"],[m,g,x]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,v,b]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${v};\n\n        float in_y = ${x};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${i}));\n          return;\n        }\n        float in_x = ${b};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${i}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Mq={kernelName:ex,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{image:i,boxes:s,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=r,c=new Tq(i.shape,s.shape,o,l,u);return n.runWebGLProgram(c,[i,s,a],"float32")}};var Eq;!function(t){t.Prod="*",t.Sum="+"}(Eq||(Eq={}));class Iq{constructor(t,e,n,r){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const i=this.outputShape.length,s=this.op===Eq.Prod?"1.0":"0.0",a=n?s:`getX(${Cq(i,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${xW(i)} coords = getOutputCoords();\n        int end = ${kq(i,"coords",this.op)};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${kq(i,"coords",this.op)} = idx;\n          val ${this.op}= getX(${Cq(i,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function Cq(t,e,n){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function kq(t,e,n){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function Aq(t,e,n,r,i,s){const a=e.shape.length,o=ZS([r],a);let l=e;null!=o&&(l=NH({inputs:{x:e},backend:n,attrs:{perm:o}}));const u=QS(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const c=l.shape[u];let h=rH({inputs:{x:l},backend:n});for(let e=0;e<=Math.ceil(Math.log2(c))-1;e++){const r=new Iq(t,l.shape,!1,s),i=[[e]],a=h;h=n.runWebGLProgram(r,[h],h.dtype,i),n.disposeIntermediateTensorInfo(a)}if(i){const e=new Iq(t,l.shape,i,s),r=h;h=n.runWebGLProgram(e,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const t=NH({inputs:{x:h},backend:n,attrs:{perm:JS(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),t}return h}const Rq={kernelName:Qg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,exclusive:a,reverse:o}=r;return Aq(Eq.Prod,i,n,s,a,o)}},Nq={kernelName:tx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,exclusive:a,reverse:o}=r;return Aq(Eq.Sum,i,n,s,a,o)}},Dq={kernelName:nx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,weights:s}=e,{size:a,binaryOutput:o}=r;if(1===i.shape.length){const t=n.readSync(i.dataId),e=n.readSync(s.dataId),r=UW(t,e,s.dtype,s.shape,a);return n.makeTensorInfo([a],s.dtype,r)}if(2===i.shape.length){const t=n.bufferSync(i),e=n.bufferSync(s),r=zW(t,e,a,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}};class Lq{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Fq={kernelName:rx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{blockSize:s,dataFormat:a}=r,o=i.shape[0],l=("NHWC"===a?i.shape[1]:i.shape[2])*s,u=("NHWC"===a?i.shape[2]:i.shape[3])*s,c=("NHWC"===a?i.shape[3]:i.shape[1])/(s*s),h=new Lq("NHWC"===a?[o,l,u,c]:[o,c,l,u],s,a);return n.runWebGLProgram(h,[i],i.dtype)}};class Pq{constructor(t,e=!1,n=null,r=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=SW(this.outputShape.length);const s=t.filterHeight,a=t.filterWidth,o=t.outChannels/t.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class Oq{constructor(t,e=!1,n=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=SW(this.outputShape.length);const s=t.outChannels/t.inChannels,a=t.padInfo.left,o=t.strideWidth,l=t.dilationWidth,u=t.filterHeight,c=t.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let t=0;t<c;t++)d+=`\n          vec4 xTexelC${2*t};\n          int xTexelC${2*t}Ready;\n          vec4 xTexelC${2*t+1};\n          int xTexelC${2*t+1}Ready;\n          vec4 xC${t};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let t=0;t<c;t++)d+=`\n          xTexelC${2*t} = vec4(0.0);\n          xTexelC${2*t}Ready = 0;\n          xTexelC${2*t+1} = vec4(0.0);\n          xTexelC${2*t+1}Ready = 0;\n          xC${t} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let t=0;t<(h+1)/2;t++){const e=2*t;if(d+=`\n          xC = xCCorner + ${e*l};\n          `,1===o){if(e<c&&(a%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,d+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<c)){const t=a%2==0?km(l):l;l%2==0&&a%2==1||l%2!=0&&a%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):d+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<c&&(a%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<c&&(d+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<c&&(d+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<c&&(d+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const $q={kernelName:ix,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),Rm(nS(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const h=X_(i.shape,s.shape,a,c,o,u,!0);let d;d=hg().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new Oq(h):new Pq(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[i,s],"float32",p)}};class Uq{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,i=t.padInfo.left,s=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${i};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zq{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,i=t.strideWidth,s=e-1-t.padInfo.top,a=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Bq={kernelName:sx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,dy:s}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=X_(i.shape,c,a,o,l,u,!0),d=new Uq(h);return n.runWebGLProgram(d,[i,s],"float32")}},Vq={kernelName:ax,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,filter:s}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=X_(c,s.shape,a,o,l,u,!0),d=new zq(h);return n.runWebGLProgram(d,[i,s],"float32")}};class Wq{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Gq={kernelName:ox,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,i=[...r.shape,...r.shape],s=Lm(r.shape),a=_H({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new Wq(s),l=n.runWebGLProgram(o,[a],a.dtype),u=_H({inputs:{x:l},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}};class Hq{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:r,strideHeight:i,strideWidth:s,filterHeight:a,filterWidth:o,dilationHeight:l,dilationWidth:u}=t,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${s});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const jq={kernelName:lx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dilations:l}=r,u=H_(i.shape,s.shape,a,o,"NHWC",l);let c;const h=new Hq(u);c=n.runWebGLProgram(h,[i,s],"float32");const d=_H({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},qq={kernelName:dx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{equation:i}=r,s=e,{allDims:a,summedDims:o,idDims:l}=LE(i,s.length);PE(a.length,l,s);const{path:u,steps:c}=OE(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let t=0;t<h;++t){for(const e of c[t]){const{permutationIndices:t,expandDims:r}=FE(p,l[e]);let i;$E(t)?i=s[e]:(i=NH({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(i));const a=i.shape.slice();for(let t=0;t<r.length;++t)a.splice(r[t],0,1);Fm(i.shape,a)||(i=_H({inputs:{x:i},backend:n,attrs:{shape:a}}),f.push(i)),null===d?d=i:(d=bH({inputs:{a:i,b:d},backend:n}),f.push(d))}t<h-1&&(u[t]>=0&&(d=AH({inputs:{x:d},backend:n,attrs:{axis:u[t]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const t of f)t!==d&&n.disposeIntermediateTensorInfo(t);return d}},Xq=fH({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Kq={kernelName:px,backendName:"webgl",kernelFunc:Xq},Yq={kernelName:fx,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:r,y:i}=e,s=hg().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nH("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,i.shape):new tH("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,i.shape);return n.runWebGLProgram(s,[r,i],r.dtype)}},Zq=mH({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:HW}),Jq={kernelName:gx,backendName:"webgl",kernelFunc:Zq},Qq=fH({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${gE};\n  float a1 = ${xE};\n  float a2 = ${yE};\n  float a3 = ${vE};\n  float a4 = ${bE};\n  float a5 = ${wE};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),tX={kernelName:mx,backendName:"webgl",kernelFunc:Qq},eX=fH({opSnippet:pH+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:jW,dtype:"float32"}),nX={kernelName:xx,backendName:"webgl",kernelFunc:eX};function rX(t){const{inputs:e,attrs:n,backend:r}=t,{dim:i}=n,{input:s}=e,a=s.shape.length,o=s.shape.slice();let l=i;return i<0&&(Rm(-(a+1)<=i,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+i+1),o.splice(l,0,1),_H({inputs:{x:s},backend:r,attrs:{shape:o}})}const iX={kernelName:yx,backendName:"webgl",kernelFunc:rX},sX="return exp(x) - 1.0;",aX=fH({opSnippet:sX,packedOpSnippet:sX,cpuKernelImpl:qW}),oX={kernelName:vx,backendName:"webgl",kernelFunc:aX};class lX{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const i=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let a;if("real"===t)a="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${i};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function uX(t,e,n){const r=n.texData.get(t.dataId),i=Lm(t.shape),s=t.shape[t.shape.length-1],a=_H({inputs:{x:t},backend:n,attrs:{shape:[i/s,s]}}),o=a.shape,l=new lX("real",o,e),u=new lX("imag",o,e),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=sH({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=_H({inputs:{x:p},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(p),f}const cX={kernelName:bx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return uX(r,!1,n)}};class hX{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function dX(t){const{backend:e,attrs:n}=t,{shape:r,value:i}=n;let{dtype:s}=n;if(s=s||Km(i),"string"===s){const t=Gm(s,Lm(r));return t.fill(i),e.makeTensorInfo(r,s,t)}{const t=new hX(r,i),n=[[i]];return e.runWebGLProgram(t,[],s,n)}}const pX={kernelName:wx,backendName:"webgl",kernelFunc:dX};class fX{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const mX={kernelName:_x,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,i=new fX(n.shape);return r.runWebGLProgram(i,[n],n.dtype)}},gX="return floor(x);",xX=fH({opSnippet:gX,packedOpSnippet:gX,cpuKernelImpl:XW}),yX={kernelName:Sx,backendName:"webgl",kernelFunc:xX},vX=mH({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),bX={kernelName:Tx,backendName:"webgl",kernelFunc:vX};class wX{constructor(t){this.variableNames=["A"];const e=nW(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class _X{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=nW(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const SX={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:i}=e;const{numChannels:s}=r,a="undefined"!=typeof HTMLVideoElement&&i instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&i instanceof HTMLImageElement,[l,u]=a?[i.videoWidth,i.videoHeight]:[i.width,i.height],c=[u,l],h=[u,l,s];if(o||a){const t=hg().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=TX&&t===MX||(MX=t,TX=document.createElement("canvas").getContext("2d",{willReadFrequently:MX})),TX.canvas.width=l,TX.canvas.height=u,TX.drawImage(i,0,0,l,u),i=TX.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=EV.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),i);const p=hg().getBool("WEBGL_PACK")?new _X(h):new wX(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let TX,MX=hg().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const EX={kernelName:Sv,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=iS(c),g=X_(i.shape,s.shape,l,h,u,d,!1,m);let x;const y=[],v=null!=a,b=null!=o,w="leakyrelu"===p,_=()=>{const t=[i,s],e=(t,e)=>{if("NCHW"===e&&1===t.shape.length&&1!==t.shape[0]){const e=_H({inputs:{x:t},backend:n,attrs:{shape:[t.shape[0],1,1]}});return y.push(e),e}return t};if(v&&t.push(e(a,c)),b&&t.push(e(o,c)),w){const e=n.makeTensorInfo([],"float32",Yv(f,"float32"));t.push(e),y.push(e)}return t};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&hg().getBool("WEBGL_EXP_CONV")){const t=p?gH(p,!0):null,e=new iq(g,v,t,b,w),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],i=_();x=n.runWebGLProgram(e,i,"float32",r)}else if(hg().getBool("WEBGL_CONV_IM2COL"))x=lq({x:i,filter:s,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const t=p?gH(p,!1):null,e=new nq(g,v,t,b,w),r=_();x=n.runWebGLProgram(e,r,"float32")}else x=oq({x:i,filter:s,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const S=_H({inputs:{x},backend:n,attrs:{shape:g.outShape}});return y.push(x),y.forEach(t=>n.disposeIntermediateTensorInfo(t)),S}},IX={kernelName:Tv,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),Rm(nS(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const g=X_(i.shape,s.shape,l,m,u,h,!0),x=hg().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,y=d?gH(d,x):null,v=[i,s],b=null!=a,w=null!=o,_="leakyrelu"===d;if(b&&v.push(a),w&&v.push(o),_){const t=n.makeTensorInfo([],"float32",Yv(p,"float32"));v.push(t),f.push(t)}let S;S=x?new Oq(g,b,y,w,_):new Pq(g,b,y,w,_);const T=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],M=n.runWebGLProgram(S,v,"float32",T);return f.forEach(t=>n.disposeIntermediateTensorInfo(t)),M}};class CX{constructor(t,e,n,r){this.sliceDim=t,this.strides=e,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const i=xW(n.length);let s="\n    int index;";for(let t=0;t<this.sliceDim;t++)s+=`\n          index = round(getIndices(coords[0], ${t}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[t]};\n          flattenIndex += index * ${this.strides[t]};`;this.userCode=`\n         void main() {\n          ${i} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${s}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const kX={kernelName:Ix,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:i}=e,s=i.shape,a=s[s.length-1],o=Lm(r.shape),[l,u,c,h]=cE(r,i),d=_H({inputs:{x:i},backend:n,attrs:{shape:[u,a]}}),p=_H({inputs:{x:r},backend:n,attrs:{shape:[Lm(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,i])||"string"===r.dtype){const t=n.readSync(i.dataId),e=n.bufferSync(r),s=KW(t,e,r.dtype,u,a,c,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}const f=new CX(a,h,[u,c],r.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=_H({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class AX{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=xW(this.rank),r=function(t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<t.length;r++)2===r?n.push("index"):n.push(`${e[r]}`);return n.join()}(t);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function RX(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,indices:s}=e,{axis:a,batchDims:o}=r,l=Bm(a,i.shape)[0];if(hg().get("DEBUG")){const t=n.readSync(s.dataId),e=i.shape[l];for(let n=0;n<t.length;++n){const r=t[n];Rm(r<=e-1&&r>=0,()=>`GatherV2: the index value ${r} is not in [0, ${e-1}]`)}}const u=eI(i,s,l,o),c=Lm(s.shape),h=[],d=_H({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=_H({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([i,s])||"string"===i.dtype){const t=n.bufferSync(p),e=n.bufferSync(d),r=YW(e,t,f);return h.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const m=new AX(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const x=_H({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach(t=>n.disposeIntermediateTensorInfo(t)),x}const NX={kernelName:Ex,backendName:"webgl",kernelFunc:RX},DX=mH({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:ZW,dtype:"bool"}),LX={kernelName:Cx,backendName:"webgl",kernelFunc:DX},FX=mH({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:JW}),PX={kernelName:kx,backendName:"webgl",kernelFunc:FX},OX={kernelName:Rx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return uX(r,!0,n)}},$X=fH({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),UX={kernelName:Dx,backendName:"webgl",kernelFunc:$X},zX=fH({opSnippet:"return float(isinf(x));",dtype:"bool"}),BX={kernelName:Lx,backendName:"webgl",kernelFunc:zX},VX=fH({opSnippet:"return float(isnan(x));",dtype:"bool"}),WX={kernelName:Fx,backendName:"webgl",kernelFunc:VX},GX=mH({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:QW,dtype:"bool"}),HX={kernelName:Ox,backendName:"webgl",kernelFunc:GX},jX=mH({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:tG,dtype:"bool"}),qX={kernelName:$x,backendName:"webgl",kernelFunc:jX},XX={kernelName:Ux,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:i,num:s}=n,a=eG(r,i,s);return e.makeTensorInfo([a.length],"float32",a)}},KX=fH({opSnippet:pH+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:nG}),YX={kernelName:zx,backendName:"webgl",kernelFunc:KX},ZX=fH({opSnippet:pH+"\n  return log(1.0 + x);\n"}),JX={kernelName:Bx,backendName:"webgl",kernelFunc:ZX},QX=mH({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),tK={kernelName:Vx,backendName:"webgl",kernelFunc:QX},eK=fH({opSnippet:"return float(!(x >= 1.0));"}),nK={kernelName:Wx,backendName:"webgl",kernelFunc:eK},rK=mH({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),iK={kernelName:Gx,backendName:"webgl",kernelFunc:rK};class sK{constructor(t,e,n,r,i){this.variableNames=["x"],this.outputShape=[];const s=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===i?`inversesqrt(${l})`:1===i?`1.0/(${l})`:`exp(log(${l}) * float(-${i}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class aK{constructor(t,e,n,r,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===i?`inversesqrt(${l})`:1===i?`1.0/(${l})`:`exp(log(${l}) * float(-${i}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const oK={kernelName:Hx,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{depthRadius:s,bias:a,alpha:o,beta:l}=r,u=hg().getBool("WEBGL_PACK_NORMALIZATION")?new aK(i.shape,s,a,o,l):new sK(i.shape,s,a,o,l);return n.runWebGLProgram(u,[i],i.dtype)}};class lK{constructor(t,e,n,r,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=i,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${i})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${i});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const uK={kernelName:jx,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:i,y:s,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new lK(i.shape,o,l,u,c);return n.runWebGLProgram(h,[i,s,a],i.dtype)}};function cK(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{reductionIndices:s,keepDims:a}=r,o=i.shape.length,l=Bm(s,i.shape);let u=l;const c=ZS(u,o),h=null!=c,d=n.shouldExecuteOnCPU([i]);let p=i;if(h){if(d){const t=n.texData.get(p.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=i.shape[c[t]];const r=RG(t,i.shape,i.dtype,c,e);p=n.makeTensorInfo(e,i.dtype),n.texData.get(p.dataId).values=r}else p=kH(i,c,n);u=QS(u.length,o)}YS("max",u,o);const[f,m]=XS(p.shape,u);let g,x=f;if(a&&(x=KS(f,l)),d){const t=n.texData.get(p.dataId).values,e=rG(t,Lm(m),x,i.dtype);g=n.makeTensorInfo(x,i.dtype),n.texData.get(g.dataId).values=e}else g=function(t,e,n,r){const i=Lm(e),s=_H({inputs:{x:t},attrs:{shape:[Lm(t.shape)/i,i]},backend:r}),a=EH(s,t.dtype,"max",r),o=_H({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(a),o}(p,m,x,n);return h&&n.disposeIntermediateTensorInfo(p),g}const hK={kernelName:qx,backendName:"webgl",kernelFunc:cK},dK=mH({opSnippet:QG+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+eH+"\n  return result;\n",cpuKernelImpl:iG}),pK={kernelName:Xx,backendName:"webgl",kernelFunc:dK},fK={kernelName:Kx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e;tW(i,"maxPool");const{filterSize:s,strides:a,pad:o,dimRoundingMode:l}=r;Rm(nS(a,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`);const u=j_(i.shape,s,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&Fm(u.inShape,u.outShape))return rH({inputs:{x:i},backend:n});const c=new pj(u,"max",!1);return n.runWebGLProgram(c,[i],i.dtype)}},mK={kernelName:Zx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{filterSize:s,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=q_(i.shape,s,a,[1,1,1],o,u,l),h=new fj(c,"max",!1);return n.runWebGLProgram(h,[i],i.dtype)}};class gK{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,i=t.effectiveFilterHeight,s=t.effectiveFilterWidth,a=i-1-t.padInfo.top,o=s-1-t.padInfo.left,l=i*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xK{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,i=t.dilationDepth,s=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterDepth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=o-1-t.padInfo.front,h=l-1-t.padInfo.top,d=u-1-t.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const yK={kernelName:Jx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s}=e,a=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=q_(a.shape,o,l,[1,1,1],u,c),d=new fj(h,"max",!0),p=n.runWebGLProgram(d,[a],a.dtype),f=new xK(h),m=n.runWebGLProgram(f,[i,p],a.dtype);return n.disposeIntermediateTensorInfo(p),m}},vK={kernelName:Yx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s,output:a}=e,o=s;tW([s,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=j_(o.shape,l,u,1,c,h),p=new pj(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new gK(d),g=n.runWebGLProgram(m,[i,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},bK={kernelName:Qx,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:i,strides:s,pad:a,includeBatchInIndex:o}=e,l=n;Rm(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const u=[1,1];Rm(nS(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);const c=j_(r.shape,i,s,u,a),[h,d]=function(t,e,n,r){let i=new pj(n,"max",!1);const s=r.runWebGLProgram(i,[t],"float32");return i=new pj(n,"max",!0,!0,e),[s,r.runWebGLProgram(i,[t],"float32")]}(r,o,c,l);return[h,d]}},wK={kernelName:ty,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:i,axis:s}=e,a=n,o=r.shape.length,l=Bm(s,r.shape);let u=l;const c=ZS(u,o),h=null!=c,d=a.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const t=a.texData.get(f.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const n=RG(t,r.shape,r.dtype,c,e);f=a.makeTensorInfo(e,r.dtype),a.texData.get(f.dataId).values=n}else f=kH(r,c,a);p.push(f),u=QS(u.length,o)}YS("sum",u,o);const[m,g]=XS(f.shape,u);let x=m;i&&(x=KS(m,l));const y=function(t,e,n,r){const i=Lm(e),s=_H({inputs:{x:t},attrs:{shape:[Lm(t.shape)/i,i]},backend:r}),a=EH(s,"float32","mean",r),o=_H({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(a),o}(f,g,x,a);for(const t of p)a.disposeIntermediateTensorInfo(t);return y}},_K={kernelName:ey,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r,o=i.shape.length,l=Bm(s,i.shape);let u=l;const c=ZS(u,o);let h=i;null!=c&&(h=NH({inputs:{x:i},backend:n,attrs:{perm:c}}),u=QS(u.length,i.shape.length)),YS("min",u,o);const[d,p]=XS(h.shape,u),f=_H({inputs:{x:h},backend:n,attrs:{shape:[-1,Lm(p)]}}),m=EH(f,f.dtype,"min",n);let g;return g=_H(a?{inputs:{x:m},backend:n,attrs:{shape:KS(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},SK=mH({opSnippet:QG+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+eH+"\n  return result;\n",cpuKernelImpl:sG}),TK={kernelName:ny,backendName:"webgl",kernelFunc:SK};class MK{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,i=xW(r),s=e.map(t=>t[0]).join(","),a=e.map((e,n)=>e[0]+t[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${i} start = ${i}(${s});\n      ${i} end = ${i}(${a});\n\n      void main() {\n        ${i} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${i} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class EK{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,i=xW(r),s=e.map(t=>t[0]).join(","),a=e.map((e,n)=>e[0]+t[n]).join(","),o=LG("rc",r),l=LG("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const t=`\n        ${i} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${i} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const t=`\n        ${i} source = rc;\n        ${i} lt = ${i}(lessThan(source, start));\n        ${i} gte = ${i}(greaterThanEqual(source, end));\n        ${i} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${i} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${t}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${i} start = ${i}(${s});\n      const ${i} end = ${i}(${a});\n\n      void main() {\n        ${i} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const IK={kernelName:ry,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:i,mode:s}=n,a=hg().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new EK(r.shape,i,s):new MK(r.shape,i,s);return e.runWebGLProgram(a,[r],r.dtype)}},CK=mH({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+eH+"\n  return result;\n"}),kK={kernelName:iy,backendName:"webgl",kernelFunc:CK};class AK{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}}const RK=mH({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),NK={kernelName:hx,backendName:"webgl",kernelFunc:RK},DK="return a - b;",LK=mH({opSnippet:DK,packedOpSnippet:DK,supportsComplex:!0,cpuKernelImpl:CG}),FK={kernelName:uv,backendName:"webgl",kernelFunc:LK};function PK(t){const{inputs:e,backend:n,attrs:r}=t,{logits:i}=e,{dim:s}=r,a=Bm([s],i.shape),o=cK({inputs:{x:i},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),l=KS(o.shape,a),u=_H({inputs:{x:o},backend:n,attrs:{shape:l}}),c=LK({inputs:{a:i,b:u},backend:n}),h=eX({inputs:{x:c},backend:n}),d=AH({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),p=_H({inputs:{x:d},backend:n,attrs:{shape:l}}),f=RK({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const OK={kernelName:Yy,backendName:"webgl",kernelFunc:PK},$K={kernelName:sy,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:i}=e,{numSamples:s,seed:a,normalized:o}=r,l=o?i:PK({inputs:{logits:i},backend:n,attrs:{dim:i.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new AK(u,c,s),d=[[a]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},UK=VG+"\n  return -x;\n",zK={kernelName:oy,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const t=n.texData.get(r.dataId),[e,i]=oG(t.values,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,e)}let i;return i=hg().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new qG(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new BG(r.shape,UK),n.runWebGLProgram(i,[r],r.dtype)}},BK=vM,VK={kernelName:uy,backendName:"webgl",kernelFunc:function(t){Mv("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(i.dataId),c=n.readSync(s.dataId),{selectedIndices:h}=BK(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},WK=bM,GK={kernelName:cy,backendName:"webgl",kernelFunc:function(t){Mv("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(i.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=WK(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},HK=wM,jK={kernelName:hy,backendName:"webgl",kernelFunc:function(t){Mv("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(i.dataId),h=n.readSync(s.dataId),d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:x}=HK(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}};class qK{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const XK={kernelName:py,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{indices:i}=e,{dtype:s,depth:a,onValue:o,offValue:l}=r,u=Lm(i.shape),c=new qK(u,a,o,l),h=_H({inputs:{x:i},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],s);n.disposeIntermediateTensorInfo(h);const p=_H({inputs:{x:d},backend:n,attrs:{shape:[...i.shape,a]}});return n.disposeIntermediateTensorInfo(d),p}};function KK(t){const{inputs:e,backend:n}=t,{x:r}=e;if("complex64"===r.dtype){const t=Pj({inputs:{input:r},backend:n}),e=KK({inputs:{x:t},backend:n}),i=Zj({inputs:{input:r},backend:n}),s=KK({inputs:{x:i},backend:n}),a=sH({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),a}return dX({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const YK={kernelName:vv,backendName:"webgl",kernelFunc:KK},ZK={kernelName:dy,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:i}=n;if("string"===i.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===i.dtype){const e=Pj({inputs:{input:i},backend:r}),n=t({inputs:{x:e},backend:r}),s=Zj({inputs:{input:i},backend:r}),a=KK({inputs:{x:s},backend:r}),o=sH({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(a),o}return dX({attrs:{shape:i.shape,dtype:i.dtype,value:1},backend:r})}},JK={kernelName:fy,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:i}=r;if(1===e.length)return rX({inputs:{input:e[0]},backend:n,attrs:{dim:i}});const s=e[0].shape,a=e[0].dtype;e.forEach(t=>{Nm(s,t.shape,"All tensors passed to stack must have matching shapes"),Rm(a===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=tq({inputs:e.map(t=>{const e=rX({inputs:{input:t},backend:n,attrs:{dim:i}});return o.push(e),e}),backend:n,attrs:{axis:i}});return o.forEach(t=>n.disposeIntermediateTensorInfo(t)),l}};class QK{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,i=xW(r),s=e.map(t=>t[0]).join(","),a=e.map((e,n)=>e[0]+t[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${i} start = ${i}(${s});\n      ${i} end = ${i}(${a});\n\n      void main() {\n        ${i} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${i} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class tY{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,i=xW(r),s=e.map(t=>t[0]).join(","),a=e.map((e,n)=>e[0]+t[n]).join(","),o=LG("rc",r),l=LG("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${i} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let t=0,e=1===r?2:4;t<e;t++)p+=`\n        ${h[t]}\n        if (${d}) {\n          result[${t}] = float(value);\n        } else {\n          ${i} source = rc - start;\n          result[${t}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${i} start = ${i}(${s});\n      const ${i} end = ${i}(${a});\n\n      void main() {\n        ${i} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const eY=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{paddings:s,constantValue:a}=r;if(0===Lm(i.shape)){const t=s.map((t,e)=>t[0]+i.shape[e]+t[1]);return dX({backend:n,attrs:{shape:t,value:a,dtype:i.dtype}})}const o=hg().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tY(i.shape,s,a):new QK(i.shape,s,a),l=[[a]];return n.runWebGLProgram(o,[i],i.dtype,l)},nY={kernelName:my,backendName:"webgl",kernelFunc:eY},rY=mH({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+eH+"\n  return result;\n"}),iY={kernelName:gy,backendName:"webgl",kernelFunc:rY},sY={kernelName:yy,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r,o=i.shape.length,l=[],u=Bm(s,i.shape);let c=u;const h=ZS(c,o);let d,p=i;if(null!=h&&(p=NH({inputs:{x:i},backend:n,attrs:{perm:h}}),c=QS(c.length,o),l.push(p)),YS("prod",c,o),n.shouldExecuteOnCPU([p])){const t=n.texData.get(p.dataId).values,{outVals:e,outShape:r,outDtype:i}=uG(p.shape,p.dtype,t,c);d=n.makeTensorInfo(r,i,e)}else{const[t,e]=XS(p.shape,c),r=Lm(e),s=_H({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),a=EH(s,Mb(i.dtype),"prod",n);d=_H({inputs:{x:a},backend:n,attrs:{shape:t}}),l.push(s),l.push(a)}if(a){l.push(d);const t=KS(d.shape,u);d=_H({inputs:{x:d},backend:n,attrs:{shape:t}})}return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),d}},aY={kernelName:vy,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{paramsNestedSplits:i,paramsDenseValues:s,indices:a}=e,{outputRaggedRank:o}=r,l=i.map(t=>n.readSync(t.dataId)),u=i.map(t=>t.shape),c=n.readSync(s.dataId),h=n.readSync(a.dataId),[d,p,f]=cG(l,u,c,s.shape,s.dtype,h,a.shape,o),m=d.map(t=>n.makeTensorInfo([t.length],"int32",t)),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}},oY={kernelName:by,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{starts:r,limits:i,deltas:s}=e,a=n.readSync(r.dataId),o=n.readSync(i.dataId),l=n.readSync(s.dataId),[u,c]=hG(a,r.shape,r.dtype,o,i.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}},lY={kernelName:wy,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{shape:i,values:s,defaultValue:a,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=r,u=n.readSync(i.dataId),c=n.readSync(s.dataId),h=n.readSync(a.dataId),d=o.map(t=>n.readSync(t.dataId)),p=o.map(t=>t.shape),[f,m]=dG(u,i.shape,c,s.shape,s.dtype,h,a.shape,d,p,l);return n.makeTensorInfo(f,s.dtype,m)}},uY=t=>{const{backend:e,attrs:n}=t,{start:r,stop:i,step:s,dtype:a}=n,o=pG(r,i,s,a);return e.makeTensorInfo([o.length],a,o)},cY={kernelName:_y,backendName:"webgl",kernelFunc:uY},hY=fH({opSnippet:"return 1.0 / x;"}),dY={kernelName:Ty,backendName:"webgl",kernelFunc:hY},pY=fH({opSnippet:VG+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),fY={kernelName:My,backendName:"webgl",kernelFunc:pY},mY=fH({opSnippet:VG+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),gY={kernelName:Ry,backendName:"webgl",kernelFunc:mY};class xY{constructor(t,e,n,r,i){this.variableNames=["A"],this.outputShape=[];const[s,a,o,l]=t;this.outputShape=[s,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=i?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class yY{constructor(t,e,n,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,a,o,l]=t;this.outputShape=[s,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=i?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const vY={kernelName:ky,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i}=e,{alignCorners:s,halfPixelCenters:a,size:o}=r,[l,u]=o,c=hg().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yY(i.shape,l,u,s,a):new xY(i.shape,l,u,s,a);return n.runWebGLProgram(c,[i],"float32")}};class bY{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,i]=e,[,s,a]=t,o=[n&&s>1?r-1:r,n&&a>1?i-1:i],l=[n&&s>1?s-1:s,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const wY={kernelName:Ay,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i,dy:s}=e,{alignCorners:a}=r,o=new bY(s.shape,i.shape,a);return n.runWebGLProgram(o,[s],s.dtype)}};class _Y{constructor(t,e,n,r,i){this.variableNames=["A"],this.outputShape=[];const[s,a,o,l]=t;this.outputShape=[s,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=i?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class SY{constructor(t,e,n,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,a,o,l]=t;this.outputShape=[s,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=i?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const TY={kernelName:Iy,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i}=e,{alignCorners:s,halfPixelCenters:a,size:o}=r,[l,u]=o,c=hg().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new SY(i.shape,l,u,s,a):new _Y(i.shape,l,u,s,a);return n.runWebGLProgram(c,[i],i.dtype)}};class MY{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,i]=e,[,s,a]=t,o=[n&&s>1?r-1:r,n&&a>1?i-1:i],l=[n&&s>1?s-1:s,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${i}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const EY={kernelName:Cy,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i,dy:s}=e,{alignCorners:a}=r,o=new MY(s.shape,i.shape,a);return n.runWebGLProgram(o,[s],s.dtype)}};class IY{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),i=xW(n);this.userCode=`\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class CY{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=LG("rc",n),i=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,a=xW(n);function o(n){const r=t.map((r,i)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:`${r[n]}`}(i,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${i}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(r.slice())};\n          if(${i}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            if(${i}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const kY={kernelName:Ny,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{dims:s}=r,a=i.shape.length,o=Bm(s,i.shape);if(0===a)return rH({inputs:{x:i},backend:n});const l=hg().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new CY(i.shape,o):new IY(i.shape,o);return n.runWebGLProgram(l,[i],i.dtype)}};class AY{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=t[1],r=t[2];this.outputShape=t;let i="";i="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${i}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const RY={kernelName:wv,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:i,fillValue:s,center:a}=e,o=n,l=new AY(r.shape,s),[u,c]=iE(a,r.shape[1],r.shape[2]),h=[[u,c,Math.sin(i),Math.cos(i)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},NY=fH({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),DY={kernelName:Dy,backendName:"webgl",kernelFunc:NY},LY=fH({opSnippet:"return inversesqrt(x);",cpuKernelImpl:fG}),FY={kernelName:Ly,backendName:"webgl",kernelFunc:LY};class PY{constructor(t,e,n,r,i,s,a=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const l=xW(i.length),u=xW(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=e>1?"strides[j]":"strides";this.userCode=`\n        ${l} strides = ${l}(${i});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}}class OY{constructor(t,e,n,r,i,s,a=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const l=xW(i.length),u=xW(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=e>1?"strides[j]":"strides",x=e>1?"strides[j + 1]":"strides";this.userCode=`\n        ${l} strides = ${l}(${i});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${t}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${e}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${e}) {\n                flattenedIndex += index.yw * ${x};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}const $Y={kernelName:Fy,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:i,updates:s}=e,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=pE(0,i,a),d=[h/u,u];if(0===h)return n.makeTensorInfo(a,i.dtype);const p=_H({inputs:{x:i},backend:n,attrs:{shape:[l,o]}}),f=_H({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=hg().getBool("WEBGL_PACK")?new OY(l,o,p.shape.length,f.shape.length,c,d):new PY(l,o,p.shape.length,f.shape.length,c,d);const x=n.runWebGLProgram(g,[f,p,m],f.dtype),y=_H({inputs:{x},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(m),y}};class UY{constructor(t,e,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,n];const i=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,s=2===hg().getNumber("WEBGL_VERSION")?"while (left < right) {":i,a="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${s}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${a} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const zY={kernelName:Oy,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sortedSequence:i,values:s}=e,{side:a}=r,o=new UY(i.shape[0],i.shape[1],s.shape[1],a),l=[[i.shape[1]]];return n.runWebGLProgram(o,[i,s],"int32",l)}};class BY{constructor(t,e,n){let r,i;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)i="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],a=[];for(let r=0;r<e.length;r++)a.push(`${n[r]}`),r<t&&s.push(`${n[r]}`);r=s.join(),i=a.join()}const s=xW(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${i}));\n        } else {\n          setOutput(getB(${i}));\n        }\n      }\n    `}}const VY={kernelName:$y,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:i,e:s}=e,a=new BY(r.shape.length,i.shape,i.shape.length);return n.runWebGLProgram(a,[r,i,s],Tb(i.dtype,s.dtype))}},WY=fH({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${fE};\n  float scale = ${mE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),GY={kernelName:Uy,backendName:"webgl",kernelFunc:WY},HY=fH({opSnippet:pH+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:gG}),jY={kernelName:Gy,backendName:"webgl",kernelFunc:HY},qY=fH({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),XY={kernelName:Wy,backendName:"webgl",kernelFunc:qY},KY=fH({opSnippet:pH+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${eH}\n  return result;\n`}),YY={kernelName:By,backendName:"webgl",kernelFunc:KY},ZY=fH({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),JY={kernelName:Vy,backendName:"webgl",kernelFunc:ZY},QY=fH({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),tZ={kernelName:Hy,backendName:"webgl",kernelFunc:QY},eZ={kernelName:Xy,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{blockShape:s,paddings:a}=r;Rm(i.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=s.reduce((t,e)=>t*e),l=[[0,0]];l.push(...a);for(let t=1+s.length;t<i.shape.length;++t)l.push([0,0]);const u=[],c=eY({inputs:{x:i},backend:n,attrs:{paddings:l,constantValue:0}}),h=sE(c.shape,s,o,!1),d=aE(h.length,s.length,!1),p=oE(c.shape,s,o,!1),f=_H({inputs:{x:c},backend:n,attrs:{shape:h}}),m=NH({inputs:{x:f},backend:n,attrs:{perm:d}}),g=_H({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach(t=>n.disposeIntermediateTensorInfo(t)),g}},nZ={kernelName:Zy,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:r,values:i,denseShape:s,defaultValue:a}=e;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==i.shape.length)throw new Error(`Values must be a vector, saw:\n         ${i.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.readSync(r.dataId),l=n.readSync(i.dataId),u=n.readSync(s.dataId),c=n.readSync(a.dataId)[0],[h,d,p,f,m]=vG(o,r.shape,r.dtype,l,i.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],i.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(t=>Number(t)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},rZ={kernelName:Jy,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:i,newShape:s}=e;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==i.shape.length)throw new Error(`Input shape should be a vector but received shape ${i.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const a=Array.from(n.readSync(i.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,c,h]=bG(o,r.shape,r.dtype,a,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},iZ={kernelName:Qy,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:i,segmentIds:s}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${i.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const a=n.readSync(r.dataId),o=n.readSync(i.dataId),l=n.readSync(s.dataId),[u,c]=wG(a,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},sZ={kernelName:tv,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:i,segmentIds:s}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${i.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const a=n.readSync(r.dataId),o=n.readSync(i.dataId),l=n.readSync(s.dataId),[u,c]=wG(a,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},aZ={kernelName:ev,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:i,sparseValues:s,defaultValue:a}=e,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=pE(0,i,o),p=!1;if("string"===s.dtype){const t=n.bufferSync(i),e=n.bufferSync(s),r=tb(n.readSync(a.dataId)[0]),f=mG(t,e,o,d,c,u,l,h,r,p);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new PY(u,l,i.shape.length,s.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[s,i,a],s.dtype),g=_H({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}},oZ={kernelName:Ky,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{numOrSizeSplits:s,axis:a}=r,o=Bm(a,i.shape)[0],l=zE(i,s,o),u=i.shape.length,c=new Array(u).fill(0),h=i.shape.slice();return l.map(t=>{const e=[...h];e[o]=t;const r=Cj({inputs:{x:i},backend:n,attrs:{begin:c,size:e}});return c[o]+=t,r})}},lZ="return sqrt(x);",uZ=fH({opSnippet:lZ,packedOpSnippet:lZ,cpuKernelImpl:_G}),cZ={kernelName:jy,backendName:"webgl",kernelFunc:uZ},hZ={kernelName:rv,backendName:"webgl",kernelFunc:fH({opSnippet:"return x * x;"})},dZ="return (a - b) * (a - b);",pZ=mH({opSnippet:dZ,packedOpSnippet:dZ}),fZ={kernelName:nv,backendName:"webgl",kernelFunc:pZ},mZ={kernelName:iv,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");const s=nI(n.readSync(i.dataId)),a=SG(s,"string",r);return n.makeTensorInfo(i.shape,"string",a)}},gZ={kernelName:bv,backendName:"webgl",kernelFunc:function({inputs:t,attrs:e,backend:n}){const{x:r}=t,i=VG+`\n    return x > 0.0 ? 1.0 : float(${e.alpha});\n  `,s=new BG(r.shape,i);return n.runWebGLProgram(s,[r],r.dtype)}};class xZ{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,i=xW(n.length),s=xW(n.length);let a="";if(1===r)a="coords * strides + begin";else{let t=0;a=n.map((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${i} begin = ${i}(${t});\n      ${i} strides = ${i}(${e});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}const yZ={kernelName:sv,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{begin:s,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:y,end:v,strides:b}=z_(i.shape,s,a,o,l,u,c,h,d);let w;if(m)w=_H({inputs:{x:i},backend:n,attrs:{shape:f}});else if(g||x){Rm(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const t=I_(y,v,b),e=Cj({inputs:{x:i},backend:n,attrs:{begin:y,size:t}});w=_H({inputs:{x:e},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(e)}else if(n.shouldExecuteOnCPU([i])){const t=n.readSync(i.dataId),e=Pw(i.shape,i.dtype,t),r=TG(p,e,b,y);w=n.makeTensorInfo(f,i.dtype,r.values)}else{const t=new xZ(y,b,p);w=n.runWebGLProgram(t,[i],i.dtype)}const _=_H({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),_}},vZ={kernelName:av,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{separator:i,nGramWidths:s,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=e,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=MG(d,p,i,s,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},bZ={kernelName:ov,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:i}=r,{input:s,delimiter:a}=e;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.readSync(s.dataId),l=n.readSync(a.dataId)[0],[u,c,h]=EG(o,l,i),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},wZ={kernelName:lv,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:i}=r,{input:s}=e;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(s.dataId),o=IG(a,i);return n.makeTensorInfo(s.shape,"int32",o)}},_Z=fH({opSnippet:"return tan(x);"}),SZ={kernelName:cv,backendName:"webgl",kernelFunc:_Z},TZ=fH({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),MZ={kernelName:hv,backendName:"webgl",kernelFunc:TZ},EZ={kernelName:Py,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{tensor:i,indices:s,updates:a}=e,{}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=pE(0,s,i.shape),d=[h/u,u];if(0===h)return n.makeTensorInfo(i.shape,s.dtype);const p=_H({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=_H({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=_H({inputs:{x:i},backend:n,attrs:{shape:d}}),g=new PY(l,o,p.shape.length,f.shape.length,c,d,!1,!0),x=n.runWebGLProgram(g,[f,p,m],m.dtype),y=_H({inputs:{x},backend:n,attrs:{shape:i.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),y}};class IZ{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const r=xW(this.rank),i=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${n[e]}, ${t[e]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${i}));\n      }\n    `}}function CZ(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{reps:s}=r;if("string"===i.dtype||i.shape.length>5){const t=n.readSync(i.dataId),e="string"===i.dtype?t.map(t=>tb(t)):t,r=Pw(i.shape,i.dtype,e),a=kG(r,s);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const a=new IZ(i.shape,s);return n.runWebGLProgram(a,[i],i.dtype)}const kZ={kernelName:dv,backendName:"webgl",kernelFunc:CZ};class AZ{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class RZ{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function NZ(t,e){null!==e&&t.disposeIntermediateTensorInfo(e)}function DZ(t){let e=1;for(;e<t;)e*=2;return e}const LZ={kernelName:pv,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{k:s,sorted:a}=r,o=hg().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=hg().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=i.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([i])||c<o||s>l){const t=n.readSync(i.dataId),[e,r]=AG(t,u,i.dtype,s,a);return[n.makeTensorInfo(e.shape,e.dtype,e.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,i.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[i,dX({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(i.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(i):i,f=Lm(u)/c,m=_H({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&NZ(n,p);const g=DZ(s),x=DZ(c);let y=null;const v=()=>null===y?[m,m]:[m,y],b=(t,e,r)=>{const i=v(),s=new AZ(r),a=[[c],[null===y?1:0],[Number.NEGATIVE_INFINITY],[t],[e]],o=y;y=n.runWebGLProgram(s,i,"int32",a),NZ(n,o)};for(let t=1;t<g;t*=2){const e=2*t;for(let n=t;n>=1;n/=2)b(e,n,[f,x])}for(let t=x;t>g;t/=2){const e=v(),r=new RZ([f,t/2]),i=[[c],[null===y?1:0],[g]],s=y;y=n.runWebGLProgram(r,e,"int32",i),NZ(n,s);const a=g/2,o=2*a;for(let t=a;t>=1;t/=2)b(o,t,y.shape)}let w=y;y=Cj({inputs:{x:y},backend:n,attrs:{begin:0,size:[f,s]}}),NZ(n,w);let _=RX({inputs:{x:m,indices:y},backend:n,attrs:{axis:1,batchDims:1}});NZ(n,m);const S=u.slice(0,-1);S.push(s),w=y,y=_H({inputs:{x:y},attrs:{shape:S},backend:n}),NZ(n,w);const T=_;return _=_H({inputs:{x:_},attrs:{shape:S},backend:n}),NZ(n,T),[_,y]}};class FZ{constructor(t,e,n,r,i,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const a="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${i});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${i});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const PZ={kernelName:fv,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:i,transforms:s}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,d,p]=i.shape,[f,m]=null!=u?u:[h,d],g=new FZ(h,d,a,o,l,[c,f,m,p]);return n.runWebGLProgram(g,[i,s],"float32")}},OZ={kernelName:gv,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:i}=n,{x:s}=e;tW(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=NG(a,i,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},$Z={kernelName:xv,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:i}=e;let{axis:s}=r;s<0&&(s+=i.shape.length);const a=i,o=a.shape.length,l=i.shape[s],u=new Array(o-1);let c=0;for(let t=0;t<o;t++)t!==s&&(u[c++]=a.shape[t]);const h=[],d=new Array(o).fill(0),p=a.shape.slice();p[s]=1;const f=new Array(l);for(let t=0;t<f.length;t++){d[s]=t;const e=Cj({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),r=_H({inputs:{x:e},backend:n,attrs:{shape:u}});f[t]=r,h.push(e)}return h.forEach(t=>n.disposeIntermediateTensorInfo(t)),f}};class UZ{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,i=t.inSize,s=t.numSegments,a=s*Math.ceil(i/n);this.outputShape=[r,a];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";i%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return initializationValue;\n        }\n      `);let h="";i%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const zZ=[FH,OH,UH,BH,GH,qH,XH,KH,ej,nj,ij,aj,lj,cj,dj,mj,gj,vj,bj,wj,Tj,Aj,Rj,Nj,Dj,$j,Bj,Gj,aH,qj,eq,uq,fq,gq,xq,yq,vq,wq,Sq,Mq,Rq,Nq,Dq,Fq,$q,Bq,Vq,Gq,jq,qq,Kq,Yq,Jq,tX,nX,iX,oX,cX,pX,mX,yX,bX,SX,EX,IX,kX,NX,LX,PX,iH,OX,Jj,UX,BX,WX,uH,HX,qX,XX,YX,JX,tK,nK,iK,oK,uK,hK,pK,fK,mK,yK,vK,bK,wK,_K,TK,IK,kK,$K,wH,zK,VK,GK,jK,Fj,XK,ZK,JK,nY,iY,dH,sY,aY,oY,lY,cY,Oj,NK,dY,fY,gY,SH,vY,wY,TY,EY,kY,RY,DY,FY,$Y,zY,VY,GY,jY,XY,YY,JY,kj,OK,tZ,eZ,nZ,rZ,iZ,sZ,aZ,oZ,cZ,hZ,fZ,mZ,gZ,yZ,vZ,bZ,wZ,FK,RH,SZ,MZ,EZ,kZ,LZ,PZ,DH,OZ,$Z,{kernelName:yv,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,segmentIds:s}=e,{numSegments:a}=r,o=i.shape.length,l=[];let u=0;const c=ZS([u],o);let h=i;null!=c&&(h=NH({inputs:{x:i},backend:n,attrs:{perm:c}}),l.push(h),u=QS(1,o)[0]);const d=tI(h.shape,u,a),p=Lm([h.shape[u]]),f=_H({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=Mb(i.dtype),g=(t,e,r,i,s)=>{const a=t.shape[0],o=t.shape[1],u=QE(o,s),c=new UZ({windowSize:u,inSize:o,batchSize:a,numSegments:s},e),h=n.compileAndRun(c,[t,r],i);if(l.push(h),h.shape[1]===s)return h;const d=uY({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),p=CZ({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),g(h,e,p,i,s)},x=_H({inputs:{x:g(f,"unsortedSegmentSum",s,m,a)},backend:n,attrs:{shape:d}});let y=x;if(null!=c){l.push(x);const t=JS(c);y=NH({inputs:{x:y},backend:n,attrs:{perm:t}})}return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),y}},YK];for(const t of zZ)Nv(t);const BZ=(t,e,n,r=0)=>{const i=((t,e,n)=>({x:t[0][0]*e+t[0][1]*n+t[0][3],y:t[1][0]*e+t[1][1]*n+t[1][3],z:t[2][0]*e+t[2][1]*n+t[2][3]}))(t,e,n),{x:s,y:a,z:o}=i;return{x:s/o,y:a/o}},VZ=(t,e,n,r,i,s,a,o)=>({variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[o,i*i],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int searchOffsetIndex = coords[1];\n\n\t    int markerWidth = int(getMarkerProperties(0));\n\t    int markerHeight = int(getMarkerProperties(1));\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int searchOffsetX = imod(searchOffsetIndex, ${i}) * ${r};\n\t    int searchOffsetY = searchOffsetIndex / ${i} * ${r};\n\n\t    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);\n\t    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);\n\n\t    int sx = sCenterX + searchOffsetX - ${n};\n\t    int sy = sCenterY + searchOffsetY - ${n};\n\n\t    if (sx < ${t} || sx >= (${a} - ${t}) || sy < ${t} || sy >= (${s} - ${t})) {\n\t      setOutput(-2.);\n\t    } \n\t    else {\n\t      float sumPoint = 0.;\n\t      float sumPointSquare = 0.;\n\t      float sumTemplate = 0.;\n\t      float sumTemplateSquare = 0.;\n\t      float sumPointTemplate = 0.;\n\n\t      for (int templateOffsetY = 0; templateOffsetY < ${e}; templateOffsetY++) {\n\t\tfor (int templateOffsetX = 0; templateOffsetX < ${e}; templateOffsetX++) {\n\t\t  int fx2 = sCenterX + templateOffsetX - ${t};\n\t\t  int fy2 = sCenterY + templateOffsetY - ${t};\n\n\t\t  int sx2 = sx + templateOffsetX - ${t};\n\t\t  int sy2 = sy + templateOffsetY - ${t};\n\n\t\t  int markerPixelIndex = fy2 * markerWidth + fx2;\n\t\t  float markerPixel = getMarkerPixels(markerPixelIndex);\n\t\t  float targetPixel = getTargetPixels(sy2, sx2);\n\n\t\t  sumTemplate += markerPixel;\n\t\t  sumTemplateSquare += markerPixel * markerPixel;\n\t\t  sumPoint += targetPixel;\n\t\t  sumPointSquare += targetPixel * targetPixel;\n\t\t  sumPointTemplate += targetPixel * markerPixel;\n\t\t}\n\t      }\n\n\t      // Normalized cross-correlation\n\t      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)\n\t      float count = float(${e} * ${e});\n\t      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);\n\t      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);\n\n\t      if (pointVariance < 0.0000001) {\n\t\tsetOutput(-3.);\n\t      } else if (templateVariance < 0.0000001) {\n\t\t//setOutput(sumTemplate);\n\t\tsetOutput(-4.);\n\t      } else {\n\t\tsumPointTemplate -= sumPoint / count * sumTemplate;\n\t\tfloat sim = sumPointTemplate / pointVariance / templateVariance;  \n\t\tsetOutput(sim);\n\t      }\n\t    }\n\t  }\n\t`}),WZ=(t,e,n,r)=>({variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[r,2],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int featureIndex = coords[0];\n\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    int searchLocationIndex = maxIndex / ${n*n};\n\t    int searchOffsetIndex = imod(maxIndex, ${n*n});\n\n\t    if (coords[1] == 0) {\n\t      int searchOffsetX = imod(searchOffsetIndex, ${n}) * ${e};\n\t      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - ${t}) / markerScale);\n\t    }\n\t    else if (coords[1] == 1) {\n\t      int searchOffsetY = searchOffsetIndex / ${n} * ${e};\n\t      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - ${t}) / markerScale);\n\t    }\n\t  }\n\t`}),GZ=t=>({variableNames:["sims","maxIndex"],outputShape:[t],userCode:"\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    setOutput(getSims(featureIndex, maxIndex));\n\t  }\n\t"}),HZ=(t,e)=>({variableNames:["p"],outputShape:[t,e],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0], coords[1]-2);\n\t    sum += getP(coords[0], coords[1]-1) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0], coords[1]+1) * 4.;\n\t    sum += getP(coords[0], coords[1]+2);\n\t    setOutput(sum);\n\t  }\n\t"}),jZ=(t,e)=>({variableNames:["p"],outputShape:[t,e],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0]-2, coords[1]);\n\t    sum += getP(coords[0]-1, coords[1]) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0]+1, coords[1]) * 4.;\n\t    sum += getP(coords[0]+2, coords[1]);\n\t    sum /= 256.;\n\t    setOutput(sum);\n\t  }\n\t"}),qZ=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],XZ=[];for(let t=0;t<qZ.length;t++){const e=qZ[t].sigma;for(let n=0;n<qZ[t].points.length;n++){const r=qZ[t].points[n];XZ.push([e,r[0],r[1]])}}const KZ=XZ,YZ=(KZ.length-1)*KZ.length/2,ZZ=1/(2*Math.PI),JZ=t=>{const e=[];for(let n=1;n<t.length;n++)e.push("image"+n);return e},QZ=t=>{let e="float getPixel(int octave, int y, int x) {";for(let n=1;n<t.length;n++)e+=`\n\t  if (octave == ${n}) {\n\t    return getImage${n}(y, x);\n\t  }\n\t`;return e+="}",e},tJ=(t,e,n,r)=>{const i=JZ(t),s=QZ(t);return{variableNames:[...i,"extrema","radial"],outputShape:[e.shape[0],n.shape[0],2],userCode:`\n\t  ${s}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int radialIndex = coords[1];\n\t    int propertyIndex = coords[2];\n\n\t    int radialY = int(getRadial(radialIndex, 0));\n\t    int radialX = int(getRadial(radialIndex, 1));\n\t    float radialW = getRadial(radialIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\n\t    int xp = x + radialX;\n\t    int yp = y + radialY;\n\n\t    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);\n\t    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);\n\n\t    if (propertyIndex == 0) {\n\t      // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0\n\t      \n\t      float angle = atan(dy, dx) + ${Math.PI};\n\t      float fbin = angle * 36. * ${r};\n\t      setOutput(fbin);\n\t      return;\n\t    }\n\n\t    if (propertyIndex == 1) {\n\t      float mag = sqrt(dx * dx + dy * dy);\n\t      float magnitude = radialW * mag;\n\t      setOutput(magnitude);\n\t      return;\n\t    }\n\t  }\n\n\t`}},eJ=(t,e)=>({variableNames:["fbinMag"],outputShape:[t.shape[0],36],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    float sum = 0.;\n\t    for (int i = 0; i < ${e.shape[0]}; i++) {\n\t      float fbin = getFbinMag(featureIndex, i, 0);\n\t      int bin = int(floor(fbin - 0.5));\n\t      int b1 = imod(bin + 36, 36);\n\t      int b2 = imod(bin + 1 + 36, 36);\n\n\t      if (b1 == binIndex || b2 == binIndex) {\n\t\tfloat magnitude = getFbinMag(featureIndex, i, 1);\n\t\tfloat w2 = fbin - float(bin) - 0.5;\n\t\tfloat w1 = w2 * -1. + 1.;\n\n\t\tif (b1 == binIndex) {\n\t\t  sum += w1 * magnitude;\n\t\t}\n\t\tif (b2 == binIndex) {\n\t\t  sum += w2 * magnitude;\n\t\t}\n\t      }\n\t    }\n\t    setOutput(sum);\n\t  }\n\t`}),nJ=class{projectionTransform;trackingKeyframeList;debugMode;kernelCaches;featurePointsListT;imagePixelsListT;imagePropertiesListT;constructor(t,e,n,r,i,s=!1){this.projectionTransform=n,this.debugMode=s,this.trackingKeyframeList=e.map(t=>t[0]);const a=Math.max(...this.trackingKeyframeList.map(({points:t})=>t.length));this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(const[t,e]of this.trackingKeyframeList.entries()){const{featurePoints:n,imagePixels:r,imageProperties:i}=this._prebuild(e,a);this.featurePointsListT[t]=n,this.imagePixelsListT[t]=r,this.imagePropertiesListT[t]=i}this.kernelCaches={}}dummyRun(t){const e=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let n=0;n<this.featurePointsListT.length;n++)this.track(t,e,n)}track(t,e,n){let r={};const i=(a=e,[[(s=this.projectionTransform)[0][0]*a[0][0]+s[0][2]*a[2][0],s[0][0]*a[0][1]+s[0][2]*a[2][1],s[0][0]*a[0][2]+s[0][2]*a[2][2],s[0][0]*a[0][3]+s[0][2]*a[2][3]],[s[1][1]*a[1][0]+s[1][2]*a[2][0],s[1][1]*a[1][1]+s[1][2]*a[2][1],s[1][1]*a[1][2]+s[1][2]*a[2][2],s[1][1]*a[1][3]+s[1][2]*a[2][3]],[a[2][0],a[2][1],a[2][2],a[2][3]]]);var s,a;const o=this._buildAdjustedModelViewTransform(i),l=this.featurePointsListT[n],u=this.imagePixelsListT[n],c=this.imagePropertiesListT[n],h=this._computeProjection(o,t,n),{matchingPointsT:d,simT:p}=this._computeMatching(l,u,c,h),f=d.arraySync(),m=p.arraySync(),g=this.trackingKeyframeList[n],x=[],y=[],v=[];for(const[t,e]of f.entries())if(m[t]>.8&&t<g.points.length){v.push(t);const n=BZ(i,e[0],e[1]);y.push(n),x.push({x:g.points[t].x/g.scale,y:g.points[t].y/g.scale,z:0})}return this.debugMode&&(r={projectedImage:h.arraySync(),matchingPoints:f,trackedPoints:y,goodTrack:v}),o.dispose(),h.dispose(),d.dispose(),p.dispose(),{worldCoords:x,screenCoords:y,debugExtra:r}}_prebuild(t,e){return Qb(()=>{const n=t.scale,r=[];for(let i=0;i<e;i++)i<t.points.length?r.push([t.points[i].x/n,t.points[i].y/n]):r.push([-1,-1]);const i=Kb(t.data,[t.width*t.height]),s=Kb([t.width,t.height,t.scale],[3]);return{featurePoints:Kb(r,[r.length,2],"float32"),imagePixels:i,imageProperties:s}})}_computeMatching(t,e,n,r){const i=r.shape[0],s=r.shape[1],a=t.shape[0];return this.kernelCaches.computeMatching||(this.kernelCaches.computeMatching=((t,e,n,r,i,s,a,o)=>[VZ(t,e,n,r,i,s,a,o),WZ(n,r,i,o),GZ(o)])(6,13,10,1,21,i,s,a)),Qb(()=>{const i=this.kernelCaches.computeMatching,s=this._compileAndRun(i[0],[t,e,n,r]),a=s.argMax(1);return{matchingPointsT:this._compileAndRun(i[1],[t,n,a]),simT:this._compileAndRun(i[2],[s,a])}})}_computeProjection(t,e,n){const r=this.trackingKeyframeList[n].width,i=this.trackingKeyframeList[n].height,s=this.trackingKeyframeList[n].scale,a=r+"-"+i+"-"+s;return this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),this.kernelCaches.computeProjection[a]||(this.kernelCaches.computeProjection[a]=((t,e,n)=>({variableNames:["M","pixel"],outputShape:[t,e],userCode:`\n\t  void main() {\n\t      ivec2 coords = getOutputCoords();\n\n\t      float m00 = getM(0, 0) * 1000.;\n\t      float m01 = getM(0, 1) * 1000.;\n\t      float m03 = getM(0, 3) * 1000.;\n\t      float m10 = getM(1, 0) * 1000.;\n\t      float m11 = getM(1, 1) * 1000.;\n\t      float m13 = getM(1, 3) * 1000.;\n\t      float m20 = getM(2, 0) * 1000.;\n\t      float m21 = getM(2, 1) * 1000.;\n\t      float m23 = getM(2, 3) * 1000.;\n\n\t      float y = float(coords[0]) / float(${n});\n\t      float x = float(coords[1]) / float(${n});\n\t      float uz = (x * m20) + (y * m21) + m23;\n\t      float oneOverUz = 1. / uz;\n\n\t      float ux = (x * m00) + (y * m01) + m03;\n\t      float uy = (x * m10) + (y * m11) + m13;\n\n\t      ux = floor(ux * oneOverUz + 0.5);\n\t      uy = floor(uy * oneOverUz + 0.5);\n\t      setOutput(getPixel(int(uy), int(ux)));\n\t    }\n\t`}))(i,r,s)),Qb(()=>{const n=this.kernelCaches.computeProjection[a];return this._compileAndRun(n,[t,e])})}_buildAdjustedModelViewTransform(t){return Qb(()=>Kb(t.map(t=>t.map(t=>t/1e3)),[3,4]))}_compileAndRun(t,e){const n=rw().compileAndRun(t,e);return Zb().makeTensorFromTensorInfo(n)}},rJ=t=>null==t,iJ=t=>t,sJ=t=>{if("object"!=typeof t||null===t)return t;const e=Array.isArray(t)?[]:{};for(const n in t){const r=t[n];e[n]=sJ(r)}return e},aJ=class{debugMode;width;height;numOctaves;tensorCaches;kernelCaches;constructor(t,e,n=!1){this.width=t,this.height=e,this.debugMode=n;let r=0;for(;t>=8&&e>=8&&(t/=2,e/=2,r++,5!==r););this.numOctaves=r,this.tensorCaches={},this.kernelCaches={}}detectImageData(t){const e=new Uint8ClampedArray(4*t.length);for(const[n,r]of t.entries())e[4*n]=r,e[4*n+1]=r,e[4*n+2]=r,e[4*n+3]=255;const n=new ImageData(e,this.width,this.height);return this.detect(n)}_buildPyramidImage(t){const e=[];for(let n=0;n<this.numOctaves;n++){let r;r=0===n?this._applyFilter(t):this._downsampleBilinear(e[n-1][e[n-1].length-1]);const i=this._applyFilter(r);e.push([r,i])}return e}_buildDogPyramid(t){const e=[];for(let n=0;n<this.numOctaves;n++){const r=this._differenceImageBinomial(t[n][0],t[n][1]);e.push(r)}return e}_getExtremas(t){const e=[];for(let n=1;n<this.numOctaves-1;n++){const r=this._buildExtremas(t[n-1],t[n],t[n+1]);e.push(r)}return e}_getFeaturePoints(t,e,n){const r=[];for(const[i,s]of t.entries()){if(0==s[0])continue;const t=[];for(let n=0;n<e[i].length;n+=4){const r=e[i][n]*256**3+65536*e[i][n+1]+256*e[i][n+2]+e[i][n+3];t.push(r)}const a=s[1],o=s[2],l=s[3]*Math.pow(2,a)+Math.pow(2,a-1)-.5,u=o*Math.pow(2,a)+Math.pow(2,a-1)-.5,c=Math.pow(2,a);r.push({maxima:s[0]>0,x:l,y:u,scale:c,angle:n[i],descriptors:t})}return r}detect(t){let e={};const n=this._buildPyramidImage(t),r=this._buildDogPyramid(n),i=this._getExtremas(r),s=this._applyPrune(i),a=this._computeLocalization(s,r),o=this._computeOrientationHistograms(a,n),l=this._smoothHistograms(o),u=this._computeExtremaAngles(l),c=this._computeExtremaFreak(n,a,u),h=this._computeFreakDescriptors(c),d=a.arraySync(),p=u.arraySync(),f=h.arraySync();return this.debugMode&&(e={pyramidImages:n.map(t=>t.map(t=>t.arraySync())),dogPyramidImages:r.map(t=>t?.arraySync()??null),extremasResults:i.map(t=>t.arraySync()),extremaAngles:u.arraySync(),prunedExtremas:s,localizedExtremas:a.arraySync()}),n.forEach(t=>t.forEach(t=>t?.dispose())),r.forEach(t=>t?.dispose()),i.forEach(t=>t.dispose()),a.dispose(),o.dispose(),l.dispose(),u.dispose(),c.dispose(),h.dispose(),{featurePoints:this._getFeaturePoints(d,f,p),debugExtra:e}}_compileAndRun(t,e){const n=rw().compileAndRun(t,e);return Zb().makeTensorFromTensorInfo(n)}_applyPrune(t){if(!this.kernelCaches.applyPrune){const e=t.map(t=>{return e=t.shape[0],n=t.shape[1],{variableNames:["extrema"],outputShape:[Math.floor(e/2),Math.floor(n/2)],userCode:"\n\t    void main() {\n\t      ivec2 coords = getOutputCoords();\n\t      int y = coords[0] * 2;\n\t      int x = coords[1] * 2;\n\n\t      float location = 0.0;\n\t      float values = getExtrema(y, x);\n\n\t      if (getExtrema(y+1, x) != 0.0) {\n\t        location = 1.0;\n\t\tvalues = getExtrema(y+1, x);\n\t      }\n\t      else if (getExtrema(y, x+1) != 0.0) {\n\t        location = 2.0;\n\t\tvalues = getExtrema(y, x+1);\n\t      }\n\t      else if (getExtrema(y+1, x+1) != 0.0) {\n\t        location = 3.0;\n\t\tvalues = getExtrema(y+1, x+1);\n\t      }\n\n\t      if (values < 0.0) {\n\t        setOutput(location * -1000.0 + values);\n\t      } else {\n\t        setOutput(location * 1000.0 + values);\n\t      }\n\t    }\n\t  "};var e,n});this.kernelCaches.applyPrune={reductionKernels:e}}const e=[],n=[];for(let t=0;t<100;t++){n.push([]),e.push([]);for(let r=0;r<5;r++)n[t].push([0,0,0,0]),e[t].push(0)}Qb(()=>{const{reductionKernels:r}=this.kernelCaches.applyPrune;for(let i=0;i<t.length;i++){const s=r[i],a=this._compileAndRun(s,[t[i]]),o=i+1,l=a.arraySync(),u=a.shape[0],c=a.shape[1],h=2*c/10,d=2*u/10;for(let t=0;t<u;t++)for(let r=0;r<c;r++){const i=l[t][r];if(0===i)continue;const s=i%1e3,a=Math.floor(Math.abs(i)/1e3),u=2*r+(2===a||3===a?1:0),c=2*t+(1===a||3===a?1:0),p=Math.floor(u/h),f=10*Math.floor(c/d)+p,m=Math.abs(s);let g=5;for(;g>=1&&m>=e[f][g-1];)g--;if(!(g>=5)){for(let t=4;t>=g+1;t--)e[f][t]=e[f][t-1],n[f][t]=sJ(n[f][t-1]);e[f][g]=m,n[f][g][0]=s,n[f][g][1]=o,n[f][g][2]=c,n[f][g][3]=u}}}});const r=[];for(let t=0;t<100;t++)for(let e=0;e<5;e++)r.push(n[t][e]);return r}_applyFilter(t){const e=t.shape[0],n=t.shape[1],r="w"+n;return this.kernelCaches.applyFilter||(this.kernelCaches.applyFilter={}),this.kernelCaches.applyFilter[r]||(this.kernelCaches.applyFilter[r]=((t,e)=>[HZ(t,e),jZ(t,e)])(e,n)),Qb(()=>{const[e,n]=this.kernelCaches.applyFilter[r],i=this._compileAndRun(e,[t]);return this._compileAndRun(n,[i])})}_buildExtremas(t,e,n){const r=e.shape[0],i=e.shape[1],s="w"+i;return this.kernelCaches.buildExtremas||(this.kernelCaches.buildExtremas={}),this.kernelCaches.buildExtremas[s]||(this.kernelCaches.buildExtremas[s]=((t,e)=>({variableNames:["image0","image1","image2"],outputShape:[t,e],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int y = coords[0];\n\t    int x = coords[1];\n\n\t    float value = getImage1(y, x);\n\n\t    // Step 1: find local maxima/minima\n\t    if (value * value < 9.) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (y < 7 || y > ${t-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (x < 7 || x > ${e-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    bool isMax = true;\n\t    bool isMin = true;\n\t    for (int dy = -1; dy <= 1; dy++) {\n\t      for (int dx = -1; dx <= 1; dx++) {\n\t        float value0 = getImage0(y+dy, x+dx);\n\t        float value1 = getImage1(y+dy, x+dx);\n\t        float value2 = getImage2(y+dy, x+dx);\n\n\t\tif (value < value0 || value < value1 || value < value2) {\n\t\t  isMax = false;\n\t\t}\n\t\tif (value > value0 || value > value1 || value > value2) {\n\t\t  isMin = false;\n\t\t}\n\t      }\n\t    }\n\n\t    if (!isMax && !isMin) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    // compute edge score and reject based on threshold\n\t    float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);\n\t    float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);\n\t    float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));\n\n\t    float det = (dxx * dyy) - (dxy * dxy);\n\n\t    if (abs(det) < 0.0001) { // determinant undefined. no solution\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    float edgeScore = (dxx + dyy) * (dxx + dyy) / det;\n\n\t    if (abs(edgeScore) >= 6.25 ) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    setOutput(getImage1(y,x));\n\t  }\n\t`}))(r,i)),Qb(()=>{const r=this.kernelCaches.buildExtremas[s];return t=this._downsampleBilinear(t),n=this._upsampleBilinear(n,e),this._compileAndRun(r,[t,e,n])})}_computeLocalization(t,e){return this.kernelCaches.computeLocalization||(this.kernelCaches.computeLocalization=((t,e)=>{const n=JZ(t),r=QZ(t);return[{variableNames:[...n,"extrema"],outputShape:[e.length,3,3],userCode:`\n\t  ${r}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    float score = getExtrema(featureIndex, 0);\n\t    if (score == 0.0) {\n\t      return;\n\t    }\n\n\t    int dy = coords[1]-1;\n\t    int dx = coords[2]-1;\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\t    setOutput(getPixel(octave, y+dy, x+dx));\n\t  }\n\t`}]})(e,t)),Qb(()=>{const n=this.kernelCaches.computeLocalization[0],r=Kb(t,[t.length,t[0].length],"int32"),i=this._compileAndRun(n,[...e.slice(1),r]).arraySync(),s=[];for(let t=0;t<i.length;t++){s.push([]);for(let e=0;e<i[t].length;e++)s[t].push([])}const a=[];for(const e of t)a.push([e[0],e[1],e[2],e[3]]);for(const[t,e]of a.entries()){if(0===e[0])continue;const n=i[t],r=.5*(n[1][2]-n[1][0]),s=.5*(n[2][1]-n[0][1]),a=n[1][2]+n[1][0]-2*n[1][1],o=n[2][1]+n[0][1]-2*n[1][1],l=.25*(n[0][0]+n[2][2]-n[0][2]-n[2][0]),u=a*o-l**2,c=(o*-r+-l*-s)/u,h=(-l*-r+a*-s)/u,d=e[2]+h,p=e[3]+c;Math.abs(u)<1e-4||(e[2]=d,e[3]=p)}return Kb(a,[a.length,a[0].length],"float32")})}_computeOrientationHistograms(t,e){const n=[];for(let t=1;t<e.length;t++)n.push(e[t][1]);this.tensorCaches.orientationHistograms||Qb(()=>{const t=-1/18,e=Math.ceil(4.5),n=[];for(let r=-e;r<=e;r++)for(let i=-e;i<=e;i++){const e=Math.sqrt(i**2+r**2);if(e>4.5)continue;const s=Math.exp(t*e**2);n.push([i,r,s])}this.tensorCaches.orientationHistograms={radialPropertiesT:ew(Kb(n,[n.length,3]))}});const{radialPropertiesT:r}=this.tensorCaches.orientationHistograms;return this.kernelCaches.computeOrientationHistograms||(this.kernelCaches.computeOrientationHistograms=((t,e,n,r)=>[tJ(t,e,n,r),eJ(e,n)])(e,t,r,ZZ)),Qb(()=>{const[e,i]=this.kernelCaches.computeOrientationHistograms,s=this._compileAndRun(e,[...n,t,r]);return this._compileAndRun(i,[s])})}_computeExtremaAngles(t){return this.kernelCaches.computeExtremaAngles||(this.kernelCaches.computeExtremaAngles=(t=>({variableNames:["histogram"],outputShape:[t.shape[0]],userCode:`\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\n\t    int maxIndex = 0;\n\t    for (int i = 1; i < 36; i++) {\n\t      if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {\n\t\tmaxIndex = i;\n\t      }\n\t    }\n\n\t    int prev = imod(maxIndex - 1 + 36, 36);\n\t    int next = imod(maxIndex + 1, 36);\n\n\t    /**\n\t     * Fit a quatratic to 3 points. The system of equations is:\n\t     *\n\t     * y0 = A*x0^2 + B*x0 + C\n\t     * y1 = A*x1^2 + B*x1 + C\n\t     * y2 = A*x2^2 + B*x2 + C\n\t     *\n\t     * This system of equations is solved for A,B,C.\n\t     */\n\t    float p10 = float(maxIndex - 1);\n\t    float p11 = getHistogram(featureIndex, prev); \n\t    float p20 = float(maxIndex);\n\t    float p21 = getHistogram(featureIndex, maxIndex); \n\t    float p30 = float(maxIndex + 1);\n\t    float p31 = getHistogram(featureIndex, next); \n\n\t    float d1 = (p30-p20)*(p30-p10);\n\t    float d2 = (p10-p20)*(p30-p10);\n\t    float d3 = p10-p20;\n\n\t    // If any of the denominators are zero then, just use maxIndex.\n            float fbin = float(maxIndex);\n\t    if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {\n\t      float a = p10*p10;\n\t      float b = p20*p20;\n\n\t      // Solve for the coefficients A,B,C\n\t      float A = ((p31-p21)/d1)-((p11-p21)/d2);\n\t      float B = ((p11-p21)+(A*(b-a)))/d3;\n\t      float C = p11-(A*a)-(B*p10);\n\t      fbin = -B / (2. * A);\n\t    }\n\n\t    float an = 2.0 *${Math.PI} * (fbin + 0.5) / 36. - ${Math.PI};\n\t    setOutput(an);\n\t  }\n\t`}))(t)),Qb(()=>{const e=this.kernelCaches.computeExtremaAngles;return this._compileAndRun(e,[t])})}_computeExtremaFreak(t,e,n){this.tensorCaches._computeExtremaFreak||Qb(()=>{const t=Kb(KZ);this.tensorCaches._computeExtremaFreak={freakPointsT:ew(t)}});const{freakPointsT:r}=this.tensorCaches._computeExtremaFreak,i=[];for(let e=1;e<t.length;e++)i.push(t[e][1]);return this.kernelCaches._computeExtremaFreak||(this.kernelCaches._computeExtremaFreak=((t,e)=>{const n=JZ(t),r=QZ(t);return[{variableNames:[...n,"extrema","angles","freakPoints"],outputShape:[e.shape[0],KZ.length],userCode:`\n\t  ${r}\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int freakIndex = coords[1];\n\n\t    float freakSigma = getFreakPoints(freakIndex, 0);\n\t    float freakX = getFreakPoints(freakIndex, 1);\n\t    float freakY = getFreakPoints(freakIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    float inputY = getExtrema(featureIndex, 2);\n\t    float inputX = getExtrema(featureIndex, 3);\n\t    float inputAngle = getAngles(featureIndex);\n            float cos = 7. * cos(inputAngle);\n            float sin = 7. * sin(inputAngle);\n\n\t    float yp = inputY + freakX * sin + freakY * cos;\n\t    float xp = inputX + freakX * cos + freakY * -sin;\n\n\t    int x0 = int(floor(xp));\n\t    int x1 = x0 + 1;\n\t    int y0 = int(floor(yp));\n\t    int y1 = y0 + 1;\n\n\t    float f1 = getPixel(octave, y0, x0);\n\t    float f2 = getPixel(octave, y0, x1);\n\t    float f3 = getPixel(octave, y1, x0);\n\t    float f4 = getPixel(octave, y1, x1);\n\n\t    float x1f = float(x1);\n\t    float y1f = float(y1);\n\t    float x0f = float(x0);\n\t    float y0f = float(y0);\n\n\t    // ratio for interpolation between four neighbouring points\n\t    float value = (x1f - xp) * (y1f - yp) * f1\n\t\t\t+ (xp - x0f) * (y1f - yp) * f2\n\t\t\t+ (x1f - xp) * (yp - y0f) * f3\n\t\t\t+ (xp - x0f) * (yp - y0f) * f4;\n\n\t    setOutput(value);\n\t  }\n\t`}]})(t,e)),Qb(()=>{const[t]=this.kernelCaches._computeExtremaFreak;return this._compileAndRun(t,[...i,e,n,r])})}_computeFreakDescriptors(t){if(!this.tensorCaches.computeFreakDescriptors){const e=[],n=[];for(let r=0;r<t.shape[1];r++)for(let i=r+1;i<t.shape[1];i++)e.push(r),n.push(i);const r=Kb(e,[e.length]).cast("int32"),i=Kb(n,[n.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:ew(OT([r,i],1))}}const{positionT:e}=this.tensorCaches.computeFreakDescriptors,n=Math.ceil(YZ/8);return this.kernelCaches.computeFreakDescriptors||(this.kernelCaches.computeFreakDescriptors=((t,e,n)=>[{variableNames:["freak","p"],outputShape:[t.shape[0],e],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int descIndex = coords[1] * 8;\n\n\t    int sum = 0;\n\t    for (int i = 0; i < 8; i++) {\n\t      if (descIndex + i >= ${n}) {\n\t\tcontinue;\n\t      }\n\n\t      int p1 = int(getP(descIndex + i, 0));\n\t      int p2 = int(getP(descIndex + i, 1));\n\n\t      float v1 = getFreak(featureIndex, p1);\n\t      float v2 = getFreak(featureIndex, p2);\n\n\t      if (v1 < v2 + 0.01) {\n\t        sum += int(pow(2.0, float(7 - i)));\n\t      }\n\t    }\n\t    setOutput(float(sum));\n\t  }\n\t`}])(t,n,YZ)),Qb(()=>{const[n]=this.kernelCaches.computeFreakDescriptors;return this._runWebGLProgram(n,[t,e],"int32")})}_differenceImageBinomial(t,e){return Qb(()=>t.sub(e))}_upsampleBilinear(t,e){const n="w"+t.shape[1];return this.kernelCaches.upsampleBilinear||(this.kernelCaches.upsampleBilinear={}),this.kernelCaches.upsampleBilinear[n]||(this.kernelCaches.upsampleBilinear[n]=(r=e.shape[0],i=e.shape[1],{variableNames:["p"],outputShape:[r,i],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int j = coords[0];\n\t    int i = coords[1];\n\n\t    float sj = 0.5 * float(j) - 0.25; \n\t    float si = 0.5 * float(i) - 0.25;\n\n\t    float sj0 = floor(sj);\n\t    float sj1 = ceil(sj);\n\t    float si0 = floor(si);\n\t    float si1 = ceil(si);\n\n\t    int sj0I = int(sj0);\n\t    int sj1I = int(sj1);\n\t    int si0I = int(si0);\n\t    int si1I = int(si1);\n\n\t    float sum = 0.0;\n\t    sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);\n\t    sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);\n\t    sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);\n\t    sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);\n\t    setOutput(sum);\n\t  }\n\t"})),Qb(()=>{const e=this.kernelCaches.upsampleBilinear[n];return this._compileAndRun(e,[t])});var r,i}_downsampleBilinear(t){const e=t.shape[0],n=t.shape[1],r="w"+n;return this.kernelCaches.downsampleBilinear||(this.kernelCaches.downsampleBilinear={}),this.kernelCaches.downsampleBilinear[r]||(this.kernelCaches.downsampleBilinear[r]=((t,e)=>({variableNames:["p"],outputShape:[Math.floor(t/2),Math.floor(e/2)],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int y = coords[0] * 2;\n\t    int x = coords[1] * 2;\n\n\t    float sum = getP(y, x) * 0.25;\n\t    sum += getP(y+1,x) * 0.25; \n\t    sum += getP(y, x+1) * 0.25; \n\t    sum += getP(y+1,x+1) * 0.25;\n\t    setOutput(sum);\n\t  }\n\t"}))(e,n)),Qb(()=>{const e=this.kernelCaches.downsampleBilinear[r];return this._compileAndRun(e,[t])})}_smoothHistograms(t){return this.kernelCaches.smoothHistograms||(this.kernelCaches.smoothHistograms=(t=>({variableNames:["histogram"],outputShape:[t.shape[0],36],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    int prevBin = imod(binIndex - 1 + 36, 36);\n\t    int nextBin = imod(binIndex + 1, 36);\n\n            float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);\n\n\t    setOutput(result);\n\t  }\n\t"}))(t)),Qb(()=>{const e=this.kernelCaches.smoothHistograms;for(let n=0;n<5;n++)t=this._compileAndRun(e,[t]);return t})}_runWebGLProgram(t,e,n){const r=rw().runWebGLProgram(t,e,n);return Zb().makeTensorFromTensorInfo(r)}},oJ=class{width;height;debugMode;cropSize;lastRandomIndex;detector;constructor(t,e,n=!1){this.width=t,this.height=e,this.debugMode=n,this.cropSize=this._getCropSize(t,e),this.detector=new aJ(t,e,n),this.lastRandomIndex=4}_getCropSize(t,e){const n=Math.min(t,e)/2;return Math.pow(2,Math.round(Math.log(n)/Math.log(2)))}async detect(t){const e=Math.floor(this.height/2-this.cropSize/2),n=Math.floor(this.width/2-this.cropSize/2),r=await this._detect(t,n,e);return this.debugMode&&(r.debugExtra.crop={startX:n,startY:e,cropSize:this.cropSize}),r}detectMoving(t){const e=this.lastRandomIndex%3,n=Math.floor(this.lastRandomIndex/3);let r=Math.floor(this.height/2-this.cropSize+n*this.cropSize/2),i=Math.floor(this.width/2-this.cropSize+e*this.cropSize/2);return i<0&&(i=0),r<0&&(r=0),i>=this.width-this.cropSize&&(i=this.width-this.cropSize-1),r>=this.height-this.cropSize&&(r=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(t,i,r)}_detect(t,e,n){const r=t.slice([n,e],[this.cropSize,this.cropSize]),{featurePoints:i,debugExtra:s}=this.detector.detect(r);return i.forEach(t=>{t.x+=e,t.y+=n}),this.debugMode&&(s.projectedImage=r.arraySync()),r.dispose(),{featurePoints:i,debugExtra:s}}},lJ=new TextEncoder;function uJ(t,e,n){let r=e;const i=r+n,s=[];let a="";for(;r<i;){const e=t[r++];if(128&e)if(192==(224&e)){const n=63&t[r++];s.push((31&e)<<6|n)}else if(224==(240&e)){const n=63&t[r++],i=63&t[r++];s.push((31&e)<<12|n<<6|i)}else if(240==(248&e)){let n=(7&e)<<18|(63&t[r++])<<12|(63&t[r++])<<6|63&t[r++];n>65535&&(n-=65536,s.push(n>>>10&1023|55296),n=56320|1023&n),s.push(n)}else s.push(e);else s.push(e);s.length>=4096&&(a+=String.fromCharCode(...s),s.length=0)}return s.length>0&&(a+=String.fromCharCode(...s)),a}const cJ=new TextDecoder;class hJ{constructor(t,e){this.type=t,this.data=e}}class dJ extends Error{constructor(t){super(t);const e=Object.create(dJ.prototype);Object.setPrototypeOf(this,e),Object.defineProperty(this,"name",{configurable:!0,enumerable:!1,value:dJ.name})}}const pJ=4294967295;function fJ(t,e,n){const r=Math.floor(n/4294967296),i=n;t.setUint32(e,r),t.setUint32(e+4,i)}function mJ(t,e){return 4294967296*t.getInt32(e)+t.getUint32(e+4)}const gJ={type:-1,encode:function(t){return t instanceof Date?function({sec:t,nsec:e}){if(t>=0&&e>=0&&t<=17179869183){if(0===e&&t<=4294967295){const e=new Uint8Array(4);return new DataView(e.buffer).setUint32(0,t),e}{const n=t/4294967296,r=4294967295&t,i=new Uint8Array(8),s=new DataView(i.buffer);return s.setUint32(0,e<<2|3&n),s.setUint32(4,r),i}}{const n=new Uint8Array(12),r=new DataView(n.buffer);return r.setUint32(0,e),fJ(r,4,t),n}}(function(t){const e=t.getTime(),n=Math.floor(e/1e3),r=1e6*(e-1e3*n),i=Math.floor(r/1e9);return{sec:n+i,nsec:r-1e9*i}}(t)):null},decode:function(t){const e=function(t){const e=new DataView(t.buffer,t.byteOffset,t.byteLength);switch(t.byteLength){case 4:return{sec:e.getUint32(0),nsec:0};case 8:{const t=e.getUint32(0);return{sec:4294967296*(3&t)+e.getUint32(4),nsec:t>>>2}}case 12:return{sec:mJ(e,4),nsec:e.getUint32(0)};default:throw new dJ(`Unrecognized data size for timestamp (expected 4, 8, or 12): ${t.length}`)}}(t);return new Date(1e3*e.sec+e.nsec/1e6)}};class xJ{constructor(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(gJ)}register({type:t,encode:e,decode:n}){if(t>=0)this.encoders[t]=e,this.decoders[t]=n;else{const r=-1-t;this.builtInEncoders[r]=e,this.builtInDecoders[r]=n}}tryToEncode(t,e){for(let n=0;n<this.builtInEncoders.length;n++){const r=this.builtInEncoders[n];if(null!=r){const i=r(t,e);if(null!=i)return new hJ(-1-n,i)}}for(let n=0;n<this.encoders.length;n++){const r=this.encoders[n];if(null!=r){const i=r(t,e);if(null!=i)return new hJ(n,i)}}return t instanceof hJ?t:null}decode(t,e,n){const r=e<0?this.builtInDecoders[-1-e]:this.decoders[e];return r?r(t,e,n):new hJ(e,t)}}function yJ(t){return t instanceof Uint8Array?t:ArrayBuffer.isView(t)?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):function(t){return t instanceof ArrayBuffer||"undefined"!=typeof SharedArrayBuffer&&t instanceof SharedArrayBuffer}(t)?new Uint8Array(t):Uint8Array.from(t)}xJ.defaultCodec=new xJ;class vJ{constructor(t){this.entered=!1,this.extensionCodec=t?.extensionCodec??xJ.defaultCodec,this.context=t?.context,this.useBigInt64=t?.useBigInt64??!1,this.maxDepth=t?.maxDepth??100,this.initialBufferSize=t?.initialBufferSize??2048,this.sortKeys=t?.sortKeys??!1,this.forceFloat32=t?.forceFloat32??!1,this.ignoreUndefined=t?.ignoreUndefined??!1,this.forceIntegerToFloat=t?.forceIntegerToFloat??!1,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}clone(){return new vJ({extensionCodec:this.extensionCodec,context:this.context,useBigInt64:this.useBigInt64,maxDepth:this.maxDepth,initialBufferSize:this.initialBufferSize,sortKeys:this.sortKeys,forceFloat32:this.forceFloat32,ignoreUndefined:this.ignoreUndefined,forceIntegerToFloat:this.forceIntegerToFloat})}reinitializeState(){this.pos=0}encodeSharedRef(t){if(this.entered)return this.clone().encodeSharedRef(t);try{return this.entered=!0,this.reinitializeState(),this.doEncode(t,1),this.bytes.subarray(0,this.pos)}finally{this.entered=!1}}encode(t){if(this.entered)return this.clone().encode(t);try{return this.entered=!0,this.reinitializeState(),this.doEncode(t,1),this.bytes.slice(0,this.pos)}finally{this.entered=!1}}doEncode(t,e){if(e>this.maxDepth)throw new Error(`Too deep objects in depth ${e}`);null==t?this.encodeNil():"boolean"==typeof t?this.encodeBoolean(t):"number"==typeof t?this.forceIntegerToFloat?this.encodeNumberAsFloat(t):this.encodeNumber(t):"string"==typeof t?this.encodeString(t):this.useBigInt64&&"bigint"==typeof t?this.encodeBigInt64(t):this.encodeObject(t,e)}ensureBufferSizeToWrite(t){const e=this.pos+t;this.view.byteLength<e&&this.resizeBuffer(2*e)}resizeBuffer(t){const e=new ArrayBuffer(t),n=new Uint8Array(e),r=new DataView(e);n.set(this.bytes),this.view=r,this.bytes=n}encodeNil(){this.writeU8(192)}encodeBoolean(t){!1===t?this.writeU8(194):this.writeU8(195)}encodeNumber(t){!this.forceIntegerToFloat&&Number.isSafeInteger(t)?t>=0?t<128?this.writeU8(t):t<256?(this.writeU8(204),this.writeU8(t)):t<65536?(this.writeU8(205),this.writeU16(t)):t<4294967296?(this.writeU8(206),this.writeU32(t)):this.useBigInt64?this.encodeNumberAsFloat(t):(this.writeU8(207),this.writeU64(t)):t>=-32?this.writeU8(224|t+32):t>=-128?(this.writeU8(208),this.writeI8(t)):t>=-32768?(this.writeU8(209),this.writeI16(t)):t>=-2147483648?(this.writeU8(210),this.writeI32(t)):this.useBigInt64?this.encodeNumberAsFloat(t):(this.writeU8(211),this.writeI64(t)):this.encodeNumberAsFloat(t)}encodeNumberAsFloat(t){this.forceFloat32?(this.writeU8(202),this.writeF32(t)):(this.writeU8(203),this.writeF64(t))}encodeBigInt64(t){t>=BigInt(0)?(this.writeU8(207),this.writeBigUint64(t)):(this.writeU8(211),this.writeBigInt64(t))}writeStringHeader(t){if(t<32)this.writeU8(160+t);else if(t<256)this.writeU8(217),this.writeU8(t);else if(t<65536)this.writeU8(218),this.writeU16(t);else{if(!(t<4294967296))throw new Error(`Too long string: ${t} bytes in UTF-8`);this.writeU8(219),this.writeU32(t)}}encodeString(t){const e=function(t){const e=t.length;let n=0,r=0;for(;r<e;){let i=t.charCodeAt(r++);if(4294967168&i)if(4294965248&i){if(i>=55296&&i<=56319&&r<e){const e=t.charCodeAt(r);56320==(64512&e)&&(++r,i=((1023&i)<<10)+(1023&e)+65536)}n+=4294901760&i?4:3}else n+=2;else n++}return n}(t);var n,r,i;this.ensureBufferSizeToWrite(5+e),this.writeStringHeader(e),n=t,r=this.bytes,i=this.pos,n.length>50?function(t,e,n){lJ.encodeInto(t,e.subarray(n))}(n,r,i):function(t,e,n){const r=t.length;let i=n,s=0;for(;s<r;){let n=t.charCodeAt(s++);if(4294967168&n){if(4294965248&n){if(n>=55296&&n<=56319&&s<r){const e=t.charCodeAt(s);56320==(64512&e)&&(++s,n=((1023&n)<<10)+(1023&e)+65536)}4294901760&n?(e[i++]=n>>18&7|240,e[i++]=n>>12&63|128,e[i++]=n>>6&63|128):(e[i++]=n>>12&15|224,e[i++]=n>>6&63|128)}else e[i++]=n>>6&31|192;e[i++]=63&n|128}else e[i++]=n}}(n,r,i),this.pos+=e}encodeObject(t,e){const n=this.extensionCodec.tryToEncode(t,this.context);if(null!=n)this.encodeExtension(n);else if(Array.isArray(t))this.encodeArray(t,e);else if(ArrayBuffer.isView(t))this.encodeBinary(t);else{if("object"!=typeof t)throw new Error(`Unrecognized object: ${Object.prototype.toString.apply(t)}`);this.encodeMap(t,e)}}encodeBinary(t){const e=t.byteLength;if(e<256)this.writeU8(196),this.writeU8(e);else if(e<65536)this.writeU8(197),this.writeU16(e);else{if(!(e<4294967296))throw new Error(`Too large binary: ${e}`);this.writeU8(198),this.writeU32(e)}const n=yJ(t);this.writeU8a(n)}encodeArray(t,e){const n=t.length;if(n<16)this.writeU8(144+n);else if(n<65536)this.writeU8(220),this.writeU16(n);else{if(!(n<4294967296))throw new Error(`Too large array: ${n}`);this.writeU8(221),this.writeU32(n)}for(const n of t)this.doEncode(n,e+1)}countWithoutUndefined(t,e){let n=0;for(const r of e)void 0!==t[r]&&n++;return n}encodeMap(t,e){const n=Object.keys(t);this.sortKeys&&n.sort();const r=this.ignoreUndefined?this.countWithoutUndefined(t,n):n.length;if(r<16)this.writeU8(128+r);else if(r<65536)this.writeU8(222),this.writeU16(r);else{if(!(r<4294967296))throw new Error(`Too large map object: ${r}`);this.writeU8(223),this.writeU32(r)}for(const r of n){const n=t[r];this.ignoreUndefined&&void 0===n||(this.encodeString(r),this.doEncode(n,e+1))}}encodeExtension(t){if("function"==typeof t.data){const e=t.data(this.pos+6),n=e.length;if(n>=4294967296)throw new Error(`Too large extension object: ${n}`);return this.writeU8(201),this.writeU32(n),this.writeI8(t.type),void this.writeU8a(e)}const e=t.data.length;if(1===e)this.writeU8(212);else if(2===e)this.writeU8(213);else if(4===e)this.writeU8(214);else if(8===e)this.writeU8(215);else if(16===e)this.writeU8(216);else if(e<256)this.writeU8(199),this.writeU8(e);else if(e<65536)this.writeU8(200),this.writeU16(e);else{if(!(e<4294967296))throw new Error(`Too large extension object: ${e}`);this.writeU8(201),this.writeU32(e)}this.writeI8(t.type),this.writeU8a(t.data)}writeU8(t){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,t),this.pos++}writeU8a(t){const e=t.length;this.ensureBufferSizeToWrite(e),this.bytes.set(t,this.pos),this.pos+=e}writeI8(t){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,t),this.pos++}writeU16(t){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,t),this.pos+=2}writeI16(t){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,t),this.pos+=2}writeU32(t){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,t),this.pos+=4}writeI32(t){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,t),this.pos+=4}writeF32(t){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,t),this.pos+=4}writeF64(t){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,t),this.pos+=8}writeU64(t){this.ensureBufferSizeToWrite(8),function(t,e,n){const r=n/4294967296,i=n;t.setUint32(e,r),t.setUint32(e+4,i)}(this.view,this.pos,t),this.pos+=8}writeI64(t){this.ensureBufferSizeToWrite(8),fJ(this.view,this.pos,t),this.pos+=8}writeBigUint64(t){this.ensureBufferSizeToWrite(8),this.view.setBigUint64(this.pos,t),this.pos+=8}writeBigInt64(t){this.ensureBufferSizeToWrite(8),this.view.setBigInt64(this.pos,t),this.pos+=8}}function bJ(t){return`${t<0?"-":""}0x${Math.abs(t).toString(16).padStart(2,"0")}`}const wJ="array",_J="map_key",SJ="map_value",TJ=t=>{if("string"==typeof t||"number"==typeof t)return t;throw new dJ("The type of key must be string or number but "+typeof t)};class MJ{constructor(){this.stack=[],this.stackHeadPosition=-1}get length(){return this.stackHeadPosition+1}top(){return this.stack[this.stackHeadPosition]}pushArrayState(t){const e=this.getUninitializedStateFromPool();e.type=wJ,e.position=0,e.size=t,e.array=new Array(t)}pushMapState(t){const e=this.getUninitializedStateFromPool();e.type=_J,e.readCount=0,e.size=t,e.map={}}getUninitializedStateFromPool(){if(this.stackHeadPosition++,this.stackHeadPosition===this.stack.length){const t={type:void 0,size:0,array:void 0,position:0,readCount:0,map:void 0,key:null};this.stack.push(t)}return this.stack[this.stackHeadPosition]}release(t){if(this.stack[this.stackHeadPosition]!==t)throw new Error("Invalid stack state. Released state is not on top of the stack.");if(t.type===wJ){const e=t;e.size=0,e.array=void 0,e.position=0,e.type=void 0}if(t.type===_J||t.type===SJ){const e=t;e.size=0,e.map=void 0,e.readCount=0,e.type=void 0}this.stackHeadPosition--}reset(){this.stack.length=0,this.stackHeadPosition=-1}}const EJ=new DataView(new ArrayBuffer(0)),IJ=new Uint8Array(EJ.buffer);try{EJ.getInt8(0)}catch(t){if(!(t instanceof RangeError))throw new Error("This module is not supported in the current JavaScript engine because DataView does not throw RangeError on out-of-bounds access")}const CJ=new RangeError("Insufficient data"),kJ=new class{constructor(t=16,e=16){this.hit=0,this.miss=0,this.maxKeyLength=t,this.maxLengthPerKey=e,this.caches=[];for(let t=0;t<this.maxKeyLength;t++)this.caches.push([])}canBeCached(t){return t>0&&t<=this.maxKeyLength}find(t,e,n){const r=this.caches[n-1];t:for(const i of r){const r=i.bytes;for(let i=0;i<n;i++)if(r[i]!==t[e+i])continue t;return i.str}return null}store(t,e){const n=this.caches[t.length-1],r={bytes:t,str:e};n.length>=this.maxLengthPerKey?n[Math.random()*n.length|0]=r:n.push(r)}decode(t,e,n){const r=this.find(t,e,n);if(null!=r)return this.hit++,r;this.miss++;const i=uJ(t,e,n),s=Uint8Array.prototype.slice.call(t,e,e+n);return this.store(s,i),i}};class AJ{constructor(t){this.totalPos=0,this.pos=0,this.view=EJ,this.bytes=IJ,this.headByte=-1,this.stack=new MJ,this.entered=!1,this.extensionCodec=t?.extensionCodec??xJ.defaultCodec,this.context=t?.context,this.useBigInt64=t?.useBigInt64??!1,this.rawStrings=t?.rawStrings??!1,this.maxStrLength=t?.maxStrLength??pJ,this.maxBinLength=t?.maxBinLength??pJ,this.maxArrayLength=t?.maxArrayLength??pJ,this.maxMapLength=t?.maxMapLength??pJ,this.maxExtLength=t?.maxExtLength??pJ,this.keyDecoder=void 0!==t?.keyDecoder?t.keyDecoder:kJ,this.mapKeyConverter=t?.mapKeyConverter??TJ}clone(){return new AJ({extensionCodec:this.extensionCodec,context:this.context,useBigInt64:this.useBigInt64,rawStrings:this.rawStrings,maxStrLength:this.maxStrLength,maxBinLength:this.maxBinLength,maxArrayLength:this.maxArrayLength,maxMapLength:this.maxMapLength,maxExtLength:this.maxExtLength,keyDecoder:this.keyDecoder})}reinitializeState(){this.totalPos=0,this.headByte=-1,this.stack.reset()}setBuffer(t){const e=yJ(t);this.bytes=e,this.view=new DataView(e.buffer,e.byteOffset,e.byteLength),this.pos=0}appendBuffer(t){if(-1!==this.headByte||this.hasRemaining(1)){const e=this.bytes.subarray(this.pos),n=yJ(t),r=new Uint8Array(e.length+n.length);r.set(e),r.set(n,e.length),this.setBuffer(r)}else this.setBuffer(t)}hasRemaining(t){return this.view.byteLength-this.pos>=t}createExtraByteError(t){const{view:e,pos:n}=this;return new RangeError(`Extra ${e.byteLength-n} of ${e.byteLength} byte(s) found at buffer[${t}]`)}decode(t){if(this.entered)return this.clone().decode(t);try{this.entered=!0,this.reinitializeState(),this.setBuffer(t);const e=this.doDecodeSync();if(this.hasRemaining(1))throw this.createExtraByteError(this.pos);return e}finally{this.entered=!1}}*decodeMulti(t){if(this.entered){const e=this.clone();return void(yield*e.decodeMulti(t))}try{for(this.entered=!0,this.reinitializeState(),this.setBuffer(t);this.hasRemaining(1);)yield this.doDecodeSync()}finally{this.entered=!1}}async decodeAsync(t){if(this.entered)return this.clone().decodeAsync(t);try{this.entered=!0;let e,n=!1;for await(const r of t){if(n)throw this.entered=!1,this.createExtraByteError(this.totalPos);this.appendBuffer(r);try{e=this.doDecodeSync(),n=!0}catch(t){if(!(t instanceof RangeError))throw t}this.totalPos+=this.pos}if(n){if(this.hasRemaining(1))throw this.createExtraByteError(this.totalPos);return e}const{headByte:r,pos:i,totalPos:s}=this;throw new RangeError(`Insufficient data in parsing ${bJ(r)} at ${s} (${i} in the current buffer)`)}finally{this.entered=!1}}decodeArrayStream(t){return this.decodeMultiAsync(t,!0)}decodeStream(t){return this.decodeMultiAsync(t,!1)}async*decodeMultiAsync(t,e){if(this.entered){const n=this.clone();return void(yield*n.decodeMultiAsync(t,e))}try{this.entered=!0;let n=e,r=-1;for await(const i of t){if(e&&0===r)throw this.createExtraByteError(this.totalPos);this.appendBuffer(i),n&&(r=this.readArraySize(),n=!1,this.complete());try{for(;yield this.doDecodeSync(),0!==--r;);}catch(t){if(!(t instanceof RangeError))throw t}this.totalPos+=this.pos}}finally{this.entered=!1}}doDecodeSync(){t:for(;;){const t=this.readHeadByte();let e;if(t>=224)e=t-256;else if(t<192)if(t<128)e=t;else if(t<144){const n=t-128;if(0!==n){this.pushMapState(n),this.complete();continue t}e={}}else if(t<160){const n=t-144;if(0!==n){this.pushArrayState(n),this.complete();continue t}e=[]}else{const n=t-160;e=this.decodeString(n,0)}else if(192===t)e=null;else if(194===t)e=!1;else if(195===t)e=!0;else if(202===t)e=this.readF32();else if(203===t)e=this.readF64();else if(204===t)e=this.readU8();else if(205===t)e=this.readU16();else if(206===t)e=this.readU32();else if(207===t)e=this.useBigInt64?this.readU64AsBigInt():this.readU64();else if(208===t)e=this.readI8();else if(209===t)e=this.readI16();else if(210===t)e=this.readI32();else if(211===t)e=this.useBigInt64?this.readI64AsBigInt():this.readI64();else if(217===t){const t=this.lookU8();e=this.decodeString(t,1)}else if(218===t){const t=this.lookU16();e=this.decodeString(t,2)}else if(219===t){const t=this.lookU32();e=this.decodeString(t,4)}else if(220===t){const t=this.readU16();if(0!==t){this.pushArrayState(t),this.complete();continue t}e=[]}else if(221===t){const t=this.readU32();if(0!==t){this.pushArrayState(t),this.complete();continue t}e=[]}else if(222===t){const t=this.readU16();if(0!==t){this.pushMapState(t),this.complete();continue t}e={}}else if(223===t){const t=this.readU32();if(0!==t){this.pushMapState(t),this.complete();continue t}e={}}else if(196===t){const t=this.lookU8();e=this.decodeBinary(t,1)}else if(197===t){const t=this.lookU16();e=this.decodeBinary(t,2)}else if(198===t){const t=this.lookU32();e=this.decodeBinary(t,4)}else if(212===t)e=this.decodeExtension(1,0);else if(213===t)e=this.decodeExtension(2,0);else if(214===t)e=this.decodeExtension(4,0);else if(215===t)e=this.decodeExtension(8,0);else if(216===t)e=this.decodeExtension(16,0);else if(199===t){const t=this.lookU8();e=this.decodeExtension(t,1)}else if(200===t){const t=this.lookU16();e=this.decodeExtension(t,2)}else{if(201!==t)throw new dJ(`Unrecognized type byte: ${bJ(t)}`);{const t=this.lookU32();e=this.decodeExtension(t,4)}}this.complete();const n=this.stack;for(;n.length>0;){const t=n.top();if(t.type===wJ){if(t.array[t.position]=e,t.position++,t.position!==t.size)continue t;e=t.array,n.release(t)}else{if(t.type===_J){if("__proto__"===e)throw new dJ("The key __proto__ is not allowed");t.key=this.mapKeyConverter(e),t.type=SJ;continue t}if(t.map[t.key]=e,t.readCount++,t.readCount!==t.size){t.key=null,t.type=_J;continue t}e=t.map,n.release(t)}}return e}}readHeadByte(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte}complete(){this.headByte=-1}readArraySize(){const t=this.readHeadByte();switch(t){case 220:return this.readU16();case 221:return this.readU32();default:if(t<160)return t-144;throw new dJ(`Unrecognized array type byte: ${bJ(t)}`)}}pushMapState(t){if(t>this.maxMapLength)throw new dJ(`Max length exceeded: map length (${t}) > maxMapLengthLength (${this.maxMapLength})`);this.stack.pushMapState(t)}pushArrayState(t){if(t>this.maxArrayLength)throw new dJ(`Max length exceeded: array length (${t}) > maxArrayLength (${this.maxArrayLength})`);this.stack.pushArrayState(t)}decodeString(t,e){return!this.rawStrings||this.stateIsMapKey()?this.decodeUtf8String(t,e):this.decodeBinary(t,e)}decodeUtf8String(t,e){if(t>this.maxStrLength)throw new dJ(`Max length exceeded: UTF-8 byte length (${t}) > maxStrLength (${this.maxStrLength})`);if(this.bytes.byteLength<this.pos+e+t)throw CJ;const n=this.pos+e;let r;return r=this.stateIsMapKey()&&this.keyDecoder?.canBeCached(t)?this.keyDecoder.decode(this.bytes,n,t):function(t,e,n){return n>200?function(t,e,n){const r=t.subarray(e,e+n);return cJ.decode(r)}(t,e,n):uJ(t,e,n)}(this.bytes,n,t),this.pos+=e+t,r}stateIsMapKey(){return this.stack.length>0&&this.stack.top().type===_J}decodeBinary(t,e){if(t>this.maxBinLength)throw new dJ(`Max length exceeded: bin length (${t}) > maxBinLength (${this.maxBinLength})`);if(!this.hasRemaining(t+e))throw CJ;const n=this.pos+e,r=this.bytes.subarray(n,n+t);return this.pos+=e+t,r}decodeExtension(t,e){if(t>this.maxExtLength)throw new dJ(`Max length exceeded: ext length (${t}) > maxExtLength (${this.maxExtLength})`);const n=this.view.getInt8(this.pos+e),r=this.decodeBinary(t,e+1);return this.extensionCodec.decode(r,n,this.context)}lookU8(){return this.view.getUint8(this.pos)}lookU16(){return this.view.getUint16(this.pos)}lookU32(){return this.view.getUint32(this.pos)}readU8(){const t=this.view.getUint8(this.pos);return this.pos++,t}readI8(){const t=this.view.getInt8(this.pos);return this.pos++,t}readU16(){const t=this.view.getUint16(this.pos);return this.pos+=2,t}readI16(){const t=this.view.getInt16(this.pos);return this.pos+=2,t}readU32(){const t=this.view.getUint32(this.pos);return this.pos+=4,t}readI32(){const t=this.view.getInt32(this.pos);return this.pos+=4,t}readU64(){const t=(e=this.view,n=this.pos,4294967296*e.getUint32(n)+e.getUint32(n+4));var e,n;return this.pos+=8,t}readI64(){const t=mJ(this.view,this.pos);return this.pos+=8,t}readU64AsBigInt(){const t=this.view.getBigUint64(this.pos);return this.pos+=8,t}readI64AsBigInt(){const t=this.view.getBigInt64(this.pos);return this.pos+=8,t}readF32(){const t=this.view.getFloat32(this.pos);return this.pos+=4,t}readF64(){const t=this.view.getFloat64(this.pos);return this.pos+=8,t}}var RJ=n(512),NJ=n.n(RJ);function DJ(){return NJ()('(()=>{"use strict";const t=class{cumsum;constructor(t,e,s){this.cumsum=[];for(let t=0;t<s;t++){this.cumsum.push([]);for(let s=0;s<e;s++)this.cumsum[t].push(0)}this.cumsum[0][0]=t[0];for(let s=1;s<e;s++)this.cumsum[0][s]=this.cumsum[0][s-1]+t[s];for(let r=1;r<s;r++)this.cumsum[r][0]=this.cumsum[r-1][0]+t[r*e];for(let r=1;r<s;r++)for(let s=1;s<e;s++)this.cumsum[r][s]=t[r*e+s]+this.cumsum[r-1][s]+this.cumsum[r][s-1]-this.cumsum[r-1][s-1]}query(t,e,s,r){let a=this.cumsum[r][s];return e>0&&(a-=this.cumsum[e-1][s]),t>0&&(a-=this.cumsum[r][t-1]),t>0&&e>0&&(a+=this.cumsum[e-1][t-1]),a}},e=t=>{const{cx:e,cy:s,image:r,imageDataCumsum:a,imageDataSqrCumsum:i,sdThresh:o}=t;if(e-6<0||e+6>=r.width)return null;if(s-6<0||s+6>=r.height)return null;const u=a.query(e-6,s-6,e+6,s+6)/169;let n=i.query(e-6,s-6,e+6,s+6);return n-=2*u*a.query(e-6,s-6,e+6,s+6),n+=169*u**2,n/169<o*o?null:(n=Math.sqrt(n),n)},s=t=>{const{cx:e,cy:s,image:r,imageDataCumsum:a,imageDataSqrCumsum:i,tx:o,ty:u,vlen:n}=t,{data:m,width:h,height:l}=r;if(e-6<0||e+6>=h)return null;if(s-6<0||s+6>=l)return null;const c=a.query(e-6,s-6,e+6,s+6),f=i.query(e-6,s-6,e+6,s+6);let g=0,d=(s-6)*h+(e-6),y=(u-6)*h+(o-6);const M=h-13;for(let t=0;t<13;t++){for(let t=0;t<13;t++)g+=m[d]*m[y],d+=1,y+=1;d+=M,y+=M}g-=a.query(o-6,u-6,o+6,u+6)/169*c;let p=f-c*c/169;return 0==p?null:(p=Math.sqrt(p),1*g/(n*p))},r=r=>{const{data:a,height:i,width:o}=r,u=[o*i];for(let t=0;t<u.length;t++)u[t]=!1;const n=new Float32Array(a.length);for(let t=0;t<o;t++)n[t]=-1,n[o*(i-1)+t]=-1;for(let t=0;t<i;t++)n[t*o]=-1,n[t*o+o-1]=-1;for(let t=1;t<o-1;t++)for(let e=1;e<i-1;e++){const s=t+o*e;let r=0,i=0;for(let t=-1;t<=1;t++)r+=a[s+o*t+1]-a[s+o*t-1],i+=a[s+o+t]-a[s-o+t];r/=768,i/=768,n[s]=Math.sqrt((r*r+i*i)/2)}const m=new Uint32Array(1e3).fill(0),h=[-1,1,-o,o];for(let t=1;t<o-1;t++)for(let e=1;e<i-1;e++){const s=t+o*e;let r=!0;for(let t=0;t<h.length;t++)if(n[s]<=n[s+h[t]]){r=!1;break}if(r){let t=Math.floor(1e3*n[s]);t>999&&(t=999),t<0&&(t=0),m[t]+=1,u[s]=!0}}const l=.02*o*i;let c=999,f=0;for(;c>=0&&(f+=m[c],!(f>l));)c--;for(let t=0;t<u.length;t++)u[t]&&1e3*n[t]<c&&(u[t]=!1);const g=[];for(const[t,e]of a.entries())g[t]=e**2;const d=new t(a,o,i),y=new t(g,o,i),M=new Float32Array(a.length);for(let t=0;t<o;t++)for(let a=0;a<i;a++){const i=a*o+t;if(!u[i]){M[i]=1;continue}const n=e({image:r,cx:t,cy:a,sdThresh:5,imageDataCumsum:d,imageDataSqrCumsum:y});if(null===n){M[i]=1;continue}let m=-1;for(let e=-10;e<=10;e++){for(let i=-10;i<=10;i++){if(i*i+e*e<=4)continue;const o=s({image:r,cx:t+i,cy:a+e,vlen:n,tx:t,ty:a,imageDataCumsum:d,imageDataSqrCumsum:y});if(null!==o&&o>m&&(m=o,m>.95))break}if(m>.95)break}M[i]=m}const p=(t=>{const{image:r,featureMap:a,templateSize:i,searchSize:o,maxSimThresh:u,minSimThresh:n,sdThresh:m,imageDataCumsum:h,imageDataSqrCumsum:l}=t;let{occSize:c}=t;const{data:f,width:g,height:d}=r;c=Math.floor(Math.min(r.width,r.height)/10);const y=3*(2*i+1),M=Math.floor(g/y),p=Math.floor(d/y),w=Math.floor(g/c)*Math.floor(d/c)+M*p,q=[],S=new Float32Array(f.length);for(const[t,e]of a.entries())S[t]=e;let D=0;for(;D<w;){let t=u,a=-1,f=-1;for(let e=0;e<d;e++)for(let s=0;s<g;s++)S[e*g+s]<t&&(t=S[e*g+s],a=s,f=e);if(-1===a)break;const y=e({image:r,cx:a,cy:f,sdThresh:0,imageDataCumsum:h,imageDataSqrCumsum:l});if(null===y){S[f*g+a]=1;continue}if(y/(2*i+1)<m){S[f*g+a]=1;continue}let M=1,p=-1;for(let e=-o;e<=o;e++){for(let i=-o;i<=o;i++){if(i*i+e*e>o*o)continue;if(0===i&&0===e)continue;const u=s({image:r,vlen:y,cx:a+i,cy:f+e,tx:a,ty:f,imageDataCumsum:h,imageDataSqrCumsum:l});if(null!==u){if(u<M&&(M=u,M<n&&M<t))break;if(u>p&&(p=u,p>.99))break}}if(M<n&&M<t||p>.99)break}if(M<n&&M<t||p>.99)S[f*g+a]=1;else{q.push({x:a,y:f}),D+=1;for(let t=-c;t<=c;t++)for(let e=-c;e<=c;e++)f+t<0||f+t>=d||a+e<0||a+e>=g||(S[(f+t)*g+(a+e)]=1)}}return q})({image:r,featureMap:M,templateSize:6,searchSize:2,occSize:16,maxSimThresh:.9,minSimThresh:.2,sdThresh:8,imageDataCumsum:d,imageDataSqrCumsum:y});return p},a=t=>{const e=Math.min(t.width,t.height);return[256/e,128/e].map(e=>Object.assign((({image:t,ratio:e})=>{const s=Math.round(t.width*e),r=Math.round(t.height*e),a=new Uint8Array(s*r);for(let i=0;i<s;i++){const o=Math.round(1*i/e);let u=Math.round(1*(i+1)/e)-1;u>=t.width&&(u=t.width-1);for(let n=0;n<r;n++){const r=Math.round(1*n/e);let m=Math.round(1*(n+1)/e)-1;m>=t.height&&(m=t.height-1);let h=0,l=0;for(let e=o;e<=u;e++)for(let s=r;s<=m;s++)h+=1*t.data[s*t.width+e],l+=1;a[n*s+i]=Math.floor(h/l)}}return{data:a,width:s,height:r}})({image:t,ratio:e}),{scale:e}))},i=(t,e)=>{const s=[];for(const[a,i]of t.entries()){const t=r(i),o={data:i.data,scale:i.scale,width:i.width,height:i.height,points:t};s.push(o),e(a)}return s};onmessage=t=>{const{data:e}=t;if("compile"===e.type){const{targetImages:t}=e,s=50/t.length;let r=0;const o=[];for(const e of t){const t=a(e),u=s/t.length,n=i(t,()=>{r+=u,postMessage({type:"progress",percent:r})});o.push(n)}postMessage({type:"compileDone",list:o})}}})();',"Worker",void 0,void 0)}const LJ=({image:t,ratio:e})=>{const n=Math.round(t.width*e),r=Math.round(t.height*e),i=new Uint8Array(n*r);for(let s=0;s<n;s++){const a=Math.round(1*s/e);let o=Math.round(1*(s+1)/e)-1;o>=t.width&&(o=t.width-1);for(let l=0;l<r;l++){const r=Math.round(1*l/e);let u=Math.round(1*(l+1)/e)-1;u>=t.height&&(u=t.height-1);let c=0,h=0;for(let e=a;e<=o;e++)for(let n=r;n<=u;n++)c+=1*t.data[n*t.width+e],h+=1;i[l*n+s]=Math.floor(c/h)}}return{data:i,width:n,height:r}},FJ=t=>{const e=[];let n=100/Math.min(t.width,t.height);for(;;)if(e.push(n),n*=Math.pow(2,1/3),n>=.95){n=1;break}e.push(n),e.reverse();const r=e.map(e=>Object.assign(LJ({image:t,ratio:e}),{scale:e}));return r},PJ=t=>{const e=Math.min(t.width,t.height),n=[256/e,128/e].map(e=>Object.assign(LJ({image:t,ratio:e}),{scale:e}));return n},OJ=t=>{let e=t-(t>>1&1431655765);return e=(e>>2&858993459)+(858993459&e),e=(e>>4)+e&252645135,e=(e>>8)+e&16711935,e=(e>>16)+e&65535,e},$J=t=>{const{v1:e,v2:n}=t;let r=0;for(let t=0;t<e.length;t++){const i=(e[t]^n[t])>>>0;r+=OJ(i)}return r},UJ=()=>{const t={seed:1234,arrayShuffle(t){const{arr:e,sampleSize:n}=t;for(let t=0;t<n;t++){this.seed=(214013*this.seed+2531011)%(1<<31);let n=this.seed>>16&32767;n%=e.length;const r=e[t];e[t]=e[n],e[n]=r}},nextInt(t){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;return e%=t,e}};return t},zJ=t=>{const{points:e,pointIndexes:n,centerPointIndex:r,randomizer:i}=t;let s=!1;(n.length<=8||n.length<=16)&&(s=!0);const a={};if(!s){const t=(t=>{const{points:e,pointIndexes:n,randomizer:r}=t,i=[];for(let t=0;t<n.length;t++)i.push(t);let s=Number.MAX_SAFE_INTEGER,a=-1;const o=[];for(let t=0;t<128;t++){r.arrayShuffle({arr:i,sampleSize:8});let l=0;const u=[];for(let t=0;t<n.length;t++){let r=Number.MAX_SAFE_INTEGER;for(let s=0;s<8;s++){const a=n[i[s]],o=$J({v1:e[n[t]].descriptors,v2:e[a].descriptors});o<r&&(u[t]=i[s],r=o)}l+=r}o.push(u),l<s&&(s=l,a=t)}return o[a]})({points:e,pointIndexes:n,randomizer:i});for(let e=0;e<t.length;e++)void 0===a[n[t[e]]]&&(a[n[t[e]]]=[]),a[n[t[e]]].push(n[e])}1===Object.keys(a).length&&(s=!0);const o={centerPointIndex:r};if(s){o.leaf=!0,o.pointIndexes=[];for(let t=0;t<n.length;t++)o.pointIndexes.push(n[t]);return o}return o.leaf=!1,o.children=[],Object.keys(a).forEach(t=>{o.children.push(zJ({points:e,pointIndexes:a[t],centerPointIndex:+t,randomizer:i}))}),o},BJ=({points:t})=>{const e=[];for(let n=0;n<t.length;n++)e.push(n);const n=UJ();return{rootNode:zJ({points:t,pointIndexes:e,centerPointIndex:null,randomizer:n})}},VJ=class{data;constructor(){this.data=[]}compileImageTargets(t,e){return new Promise(async n=>{const r=[];for(const e of t){const t=iJ(document.createElement("canvas"));t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=new Uint8Array(e.width*e.height);for(let t=0;t<s.length;t++){const e=4*t;s[t]=Math.floor((i.data[e]+i.data[e+1]+i.data[e+2])/3)}r.push(iJ({data:s,width:e.width,height:e.height}))}const i=50/r.length;let s=0;this.data=[];for(let t=0;t<r.length;t++){const n=r[t],a=FJ(n),o=i/a.length,l={targetImage:n,imageList:a,matchingData:await this._extractMatchingFeatures(a,()=>{s+=o,e(s)})};this.data.push(l)}for(const[t,e]of r.entries()){const n=PJ(e);this.data[t].trackingImageList=n}const a=await new Promise(t=>{const n=new DJ;n.onmessage=n=>{switch(n.data.type){case"progress":e(50+n.data.percent);break;case"compileDone":t(n.data.list)}},n.postMessage({type:"compile",targetImages:r})});for(const[t,e]of a.entries())this.data[t].trackingData=e;n(this.data)})}exportData(){const t=[];for(const e of this.data)t.push({targetImage:{width:e.targetImage.width,height:e.targetImage.height},trackingData:e.trackingData,matchingData:e.matchingData});var e;return e={v:2,dataList:t},new vJ(void 0).encodeSharedRef(e)}importData(t){const e=function(t){return new AJ(void 0).decode(t)}(new Uint8Array(t));if(!e.v||2!==e.v)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:n}=e;this.data=[];for(const t of n)this.data.push({targetImage:t.targetImage,trackingData:t.trackingData,matchingData:t.matchingData});return this.data}async _extractMatchingFeatures(t,e){const n=[];for(const[r,i]of t.entries()){const t=new aJ(i.width,i.height);await XM(),Qb(()=>{const s=Kb(i.data,[i.data.length],"float32").reshape([i.height,i.width]),{featurePoints:a}=t.detect(s),o=a.filter(t=>t.maxima),l=a.filter(t=>!t.maxima),u=BJ({points:o}),c=BJ({points:l});n.push({maximaPoints:o,minimaPoints:l,maximaPointsCluster:u,minimaPointsCluster:c,width:i.width,height:i.height,scale:i.scale}),e(r)})}return n}},WJ=class{width;height;texShape;context;program;tempPixelHandle;constructor(t,e){this.width=t,this.height=e,this.texShape=[e,t];const n=document.createElement("canvas").getContext("2d");n.canvas.width=t,n.canvas.height=e,this.context=n,this.program=this.buildProgram(t,e);const r=rw();this.tempPixelHandle=r.makeTensorInfo(this.texShape,"float32"),r.texData.get(this.tempPixelHandle.dataId).usage=EV.PIXELS}loadInput(t){this.context.drawImage(t,0,0,this.width,this.height);const e=rw();return e.gpgpu.uploadPixelDataToTexture(e.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(t,e){const n=2===hg().getNumber("WEBGL_VERSION")?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`\n\tvoid main() {\n\t  ivec2 coords = getOutputCoords();\n\t  int texR = coords[0];\n\t  int texC = coords[1];\n\t  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${t}.0, ${e}.0);\n\n\t  vec4 values = ${n}(A, uv);\n\t  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);\n\t}\n      `}}_compileAndRun(t,e){const n=rw().compileAndRun(t,e);return Zb().makeTensorFromTensorInfo(n)}},GJ=(t,e)=>{const n=2*Math.PI*e*t;return n/(n+1)},HJ=(t,e,n)=>t*e+(1-t)*n,jJ=class{minCutOff;beta;dCutOff;xPrev;dxPrev;tPrev;initialized;constructor({minCutOff:t,beta:e}){this.minCutOff=t,this.beta=e,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}reset(){this.initialized=!1}filter(t,e){if(!(this.initialized&&this.tPrev&&this.dxPrev&&this.xPrev))return this.initialized=!0,this.xPrev=e,this.dxPrev=e.map(()=>0),this.tPrev=t,e;const{xPrev:n,tPrev:r,dxPrev:i}=this,s=t-r,a=GJ(s,this.dCutOff),o=[],l=[],u=[];for(let t=0;t<e.length;t++){o[t]=(e[t]-n[t])/s,l[t]=HJ(a,o[t],i[t]);const r=this.minCutOff+this.beta*Math.abs(l[t]),c=GJ(s,r);u[t]=HJ(c,e[t],n[t])}return this.xPrev=u,this.dxPrev=l,this.tPrev=t,u}};function qJ(){return NJ()('(()=>{"use strict";var t={673:(t,e,r)=>{var s=r(788),o=r(718);const n=" ".repeat(2),i=" ".repeat(4);function h(t,e={}){const{maxRows:r=15,maxColumns:s=10,maxNumSize:o=8,padMinus:h="auto"}=e;return`${t.constructor.name} {\\n${n}[\\n${i}${function(t,e,r,s,o){const{rows:n,columns:h}=t,u=Math.min(n,e),a=Math.min(h,r),c=[];if("auto"===o){o=!1;t:for(let e=0;e<u;e++)for(let r=0;r<a;r++)if(t.get(e,r)<0){o=!0;break t}}for(let e=0;e<u;e++){let r=[];for(let n=0;n<a;n++)r.push(l(t.get(e,n),s,o));c.push(`${r.join(" ")}`)}return a!==h&&(c[c.length-1]+=` ... ${h-r} more columns`),u!==n&&c.push(`... ${n-e} more rows`),c.join(`\\n${i}`)}(t,r,s,o,h)}\\n${n}]\\n${n}rows: ${t.rows}\\n${n}columns: ${t.columns}\\n}`}function l(t,e,r){return(t>=0&&r?` ${u(t,e-1)}`:u(t,e)).padEnd(e)}function u(t,e){let r=t.toString();if(r.length<=e)return r;let s=t.toFixed(e);if(s.length>e&&(s=t.toFixed(Math.max(0,e-(s.length-e)))),s.length<=e&&!s.startsWith("0.000")&&!s.startsWith("-0.000"))return s;let o=t.toExponential(e);return o.length>e&&(o=t.toExponential(Math.max(0,e-(o.length-e)))),o.slice(0)}function a(t,e,r){let s=r?t.rows:t.rows-1;if(e<0||e>s)throw new RangeError("Row index out of range")}function c(t,e,r){let s=r?t.columns:t.columns-1;if(e<0||e>s)throw new RangeError("Column index out of range")}function f(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.columns)throw new RangeError("vector size must be the same as the number of columns");return e}function m(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.rows)throw new RangeError("vector size must be the same as the number of rows");return e}function g(t,e){if(!s.isAnyArray(e))throw new TypeError("row indices must be an array");for(let r=0;r<e.length;r++)if(e[r]<0||e[r]>=t.rows)throw new RangeError("row indices are out of range")}function w(t,e){if(!s.isAnyArray(e))throw new TypeError("column indices must be an array");for(let r=0;r<e.length;r++)if(e[r]<0||e[r]>=t.columns)throw new RangeError("column indices are out of range")}function p(t,e,r,s,o){if(5!==arguments.length)throw new RangeError("expected 4 arguments");if(y("startRow",e),y("endRow",r),y("startColumn",s),y("endColumn",o),e>r||s>o||e<0||e>=t.rows||r<0||r>=t.rows||s<0||s>=t.columns||o<0||o>=t.columns)throw new RangeError("Submatrix indices are out of range")}function d(t,e=0){let r=[];for(let s=0;s<t;s++)r.push(e);return r}function y(t,e){if("number"!=typeof e)throw new TypeError(`${t} must be a number`)}function M(t){if(t.isEmpty())throw new Error("Empty matrix has no elements to index")}class b{static from1DArray(t,e,r){if(t*e!==r.length)throw new RangeError("data length does not match given dimensions");let s=new v(t,e);for(let o=0;o<t;o++)for(let t=0;t<e;t++)s.set(o,t,r[o*e+t]);return s}static rowVector(t){let e=new v(1,t.length);for(let r=0;r<t.length;r++)e.set(0,r,t[r]);return e}static columnVector(t){let e=new v(t.length,1);for(let r=0;r<t.length;r++)e.set(r,0,t[r]);return e}static zeros(t,e){return new v(t,e)}static ones(t,e){return new v(t,e).fill(1)}static rand(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{random:s=Math.random}=r;let o=new v(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++)o.set(r,t,s());return o}static randInt(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{min:s=0,max:o=1e3,random:n=Math.random}=r;if(!Number.isInteger(s))throw new TypeError("min must be an integer");if(!Number.isInteger(o))throw new TypeError("max must be an integer");if(s>=o)throw new RangeError("min must be smaller than max");let i=o-s,h=new v(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++){let e=s+Math.round(n()*i);h.set(r,t,e)}return h}static eye(t,e,r){void 0===e&&(e=t),void 0===r&&(r=1);let s=Math.min(t,e),o=this.zeros(t,e);for(let t=0;t<s;t++)o.set(t,t,r);return o}static diag(t,e,r){let s=t.length;void 0===e&&(e=s),void 0===r&&(r=e);let o=Math.min(s,e,r),n=this.zeros(e,r);for(let e=0;e<o;e++)n.set(e,e,t[e]);return n}static min(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,s=t.columns,o=new v(r,s);for(let n=0;n<r;n++)for(let r=0;r<s;r++)o.set(n,r,Math.min(t.get(n,r),e.get(n,r)));return o}static max(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,s=t.columns,o=new this(r,s);for(let n=0;n<r;n++)for(let r=0;r<s;r++)o.set(n,r,Math.max(t.get(n,r),e.get(n,r)));return o}static checkMatrix(t){return b.isMatrix(t)?t:new v(t)}static isMatrix(t){return null!=t&&"Matrix"===t.klass}get size(){return this.rows*this.columns}apply(t){if("function"!=typeof t)throw new TypeError("callback must be a function");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.call(this,e,r);return this}to1DArray(){let t=[];for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.push(this.get(e,r));return t}to2DArray(){let t=[];for(let e=0;e<this.rows;e++){t.push([]);for(let r=0;r<this.columns;r++)t[e].push(this.get(e,r))}return t}toJSON(){return this.to2DArray()}isRowVector(){return 1===this.rows}isColumnVector(){return 1===this.columns}isVector(){return 1===this.rows||1===this.columns}isSquare(){return this.rows===this.columns}isEmpty(){return 0===this.rows||0===this.columns}isSymmetric(){if(this.isSquare()){for(let t=0;t<this.rows;t++)for(let e=0;e<=t;e++)if(this.get(t,e)!==this.get(e,t))return!1;return!0}return!1}isDistance(){if(!this.isSymmetric())return!1;for(let t=0;t<this.rows;t++)if(0!==this.get(t,t))return!1;return!0}isEchelonForm(){let t=0,e=0,r=-1,s=!0,o=!1;for(;t<this.rows&&s;){for(e=0,o=!1;e<this.columns&&!1===o;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(o=!0,r=e):(s=!1,o=!0);t++}return s}isReducedEchelonForm(){let t=0,e=0,r=-1,s=!0,o=!1;for(;t<this.rows&&s;){for(e=0,o=!1;e<this.columns&&!1===o;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(o=!0,r=e):(s=!1,o=!0);for(let r=e+1;r<this.rows;r++)0!==this.get(t,r)&&(s=!1);t++}return s}echelonForm(){let t=this.clone(),e=0,r=0;for(;e<t.rows&&r<t.columns;){let s=e;for(let o=e;o<t.rows;o++)t.get(o,r)>t.get(s,r)&&(s=o);if(0===t.get(s,r))r++;else{t.swapRows(e,s);let o=t.get(e,r);for(let s=r;s<t.columns;s++)t.set(e,s,t.get(e,s)/o);for(let s=e+1;s<t.rows;s++){let o=t.get(s,r)/t.get(e,r);t.set(s,r,0);for(let n=r+1;n<t.columns;n++)t.set(s,n,t.get(s,n)-t.get(e,n)*o)}e++,r++}}return t}reducedEchelonForm(){let t=this.echelonForm(),e=t.columns,r=t.rows,s=r-1;for(;s>=0;)if(0===t.maxRow(s))s--;else{let o=0,n=!1;for(;o<r&&!1===n;)1===t.get(s,o)?n=!0:o++;for(let r=0;r<s;r++){let n=t.get(r,o);for(let i=o;i<e;i++){let e=t.get(r,i)-n*t.get(s,i);t.set(r,i,e)}}s--}return t}set(){throw new Error("set method is unimplemented")}get(){throw new Error("get method is unimplemented")}repeat(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{rows:e=1,columns:r=1}=t;if(!Number.isInteger(e)||e<=0)throw new TypeError("rows must be a positive integer");if(!Number.isInteger(r)||r<=0)throw new TypeError("columns must be a positive integer");let s=new v(this.rows*e,this.columns*r);for(let t=0;t<e;t++)for(let e=0;e<r;e++)s.setSubMatrix(this,this.rows*t,this.columns*e);return s}fill(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,t);return this}neg(){return this.mulS(-1)}getRow(t){a(this,t);let e=[];for(let r=0;r<this.columns;r++)e.push(this.get(t,r));return e}getRowVector(t){return v.rowVector(this.getRow(t))}setRow(t,e){a(this,t),e=f(this,e);for(let r=0;r<this.columns;r++)this.set(t,r,e[r]);return this}swapRows(t,e){a(this,t),a(this,e);for(let r=0;r<this.columns;r++){let s=this.get(t,r);this.set(t,r,this.get(e,r)),this.set(e,r,s)}return this}getColumn(t){c(this,t);let e=[];for(let r=0;r<this.rows;r++)e.push(this.get(r,t));return e}getColumnVector(t){return v.columnVector(this.getColumn(t))}setColumn(t,e){c(this,t),e=m(this,e);for(let r=0;r<this.rows;r++)this.set(r,t,e[r]);return this}swapColumns(t,e){c(this,t),c(this,e);for(let r=0;r<this.rows;r++){let s=this.get(r,t);this.set(r,t,this.get(r,e)),this.set(r,e,s)}return this}addRowVector(t){t=f(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[r]);return this}subRowVector(t){t=f(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[r]);return this}mulRowVector(t){t=f(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[r]);return this}divRowVector(t){t=f(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[r]);return this}addColumnVector(t){t=m(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[e]);return this}subColumnVector(t){t=m(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[e]);return this}mulColumnVector(t){t=m(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[e]);return this}divColumnVector(t){t=m(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[e]);return this}mulRow(t,e){a(this,t);for(let r=0;r<this.columns;r++)this.set(t,r,this.get(t,r)*e);return this}mulColumn(t,e){c(this,t);for(let r=0;r<this.rows;r++)this.set(r,t,this.get(r,t)*e);return this}max(t){if(this.isEmpty())return NaN;switch(t){case"row":{const t=new Array(this.rows).fill(Number.NEGATIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t[e]&&(t[e]=this.get(e,r));return t}case"column":{const t=new Array(this.columns).fill(Number.NEGATIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t[r]&&(t[r]=this.get(e,r));return t}case void 0:{let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t&&(t=this.get(e,r));return t}default:throw new Error(`invalid option: ${t}`)}}maxIndex(){M(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let s=0;s<this.columns;s++)this.get(r,s)>t&&(t=this.get(r,s),e[0]=r,e[1]=s);return e}min(t){if(this.isEmpty())return NaN;switch(t){case"row":{const t=new Array(this.rows).fill(Number.POSITIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t[e]&&(t[e]=this.get(e,r));return t}case"column":{const t=new Array(this.columns).fill(Number.POSITIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t[r]&&(t[r]=this.get(e,r));return t}case void 0:{let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t&&(t=this.get(e,r));return t}default:throw new Error(`invalid option: ${t}`)}}minIndex(){M(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let s=0;s<this.columns;s++)this.get(r,s)<t&&(t=this.get(r,s),e[0]=r,e[1]=s);return e}maxRow(t){if(a(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)>e&&(e=this.get(t,r));return e}maxRowIndex(t){a(this,t),M(this);let e=this.get(t,0),r=[t,0];for(let s=1;s<this.columns;s++)this.get(t,s)>e&&(e=this.get(t,s),r[1]=s);return r}minRow(t){if(a(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)<e&&(e=this.get(t,r));return e}minRowIndex(t){a(this,t),M(this);let e=this.get(t,0),r=[t,0];for(let s=1;s<this.columns;s++)this.get(t,s)<e&&(e=this.get(t,s),r[1]=s);return r}maxColumn(t){if(c(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)>e&&(e=this.get(r,t));return e}maxColumnIndex(t){c(this,t),M(this);let e=this.get(0,t),r=[0,t];for(let s=1;s<this.rows;s++)this.get(s,t)>e&&(e=this.get(s,t),r[0]=s);return r}minColumn(t){if(c(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)<e&&(e=this.get(r,t));return e}minColumnIndex(t){c(this,t),M(this);let e=this.get(0,t),r=[0,t];for(let s=1;s<this.rows;s++)this.get(s,t)<e&&(e=this.get(s,t),r[0]=s);return r}diag(){let t=Math.min(this.rows,this.columns),e=[];for(let r=0;r<t;r++)e.push(this.get(r,r));return e}norm(t="frobenius"){switch(t){case"max":return this.max();case"frobenius":return Math.sqrt(this.dot(this));default:throw new RangeError(`unknown norm type: ${t}`)}}cumulativeSum(){let t=0;for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t+=this.get(e,r),this.set(e,r,t);return this}dot(t){b.isMatrix(t)&&(t=t.to1DArray());let e=this.to1DArray();if(e.length!==t.length)throw new RangeError("vectors do not have the same size");let r=0;for(let s=0;s<e.length;s++)r+=e[s]*t[s];return r}mmul(t){t=v.checkMatrix(t);let e=this.rows,r=this.columns,s=t.columns,o=new v(e,s),n=new Float64Array(r);for(let i=0;i<s;i++){for(let e=0;e<r;e++)n[e]=t.get(e,i);for(let t=0;t<e;t++){let e=0;for(let s=0;s<r;s++)e+=this.get(t,s)*n[s];o.set(t,i,e)}}return o}mpow(t){if(!this.isSquare())throw new RangeError("Matrix must be square");if(!Number.isInteger(t)||t<0)throw new RangeError("Exponent must be a non-negative integer");let e=v.eye(this.rows),r=this;for(let s=t;s>=1;s/=2)1&s&&(e=e.mmul(r)),r=r.mmul(r);return e}strassen2x2(t){t=v.checkMatrix(t);let e=new v(2,2);const r=this.get(0,0),s=t.get(0,0),o=this.get(0,1),n=t.get(0,1),i=this.get(1,0),h=t.get(1,0),l=this.get(1,1),u=t.get(1,1),a=(r+l)*(s+u),c=(i+l)*s,f=r*(n-u),m=l*(h-s),g=(r+o)*u,w=a+m-g+(o-l)*(h+u),p=f+g,d=c+m,y=a-c+f+(i-r)*(s+n);return e.set(0,0,w),e.set(0,1,p),e.set(1,0,d),e.set(1,1,y),e}strassen3x3(t){t=v.checkMatrix(t);let e=new v(3,3);const r=this.get(0,0),s=this.get(0,1),o=this.get(0,2),n=this.get(1,0),i=this.get(1,1),h=this.get(1,2),l=this.get(2,0),u=this.get(2,1),a=this.get(2,2),c=t.get(0,0),f=t.get(0,1),m=t.get(0,2),g=t.get(1,0),w=t.get(1,1),p=t.get(1,2),d=t.get(2,0),y=t.get(2,1),M=t.get(2,2),b=(r-n)*(-f+w),x=(-r+n+i)*(c-f+w),E=(n+i)*(-c+f),S=r*c,k=(-r+l+u)*(c-m+p),R=(-r+l)*(m-p),I=(l+u)*(-c+m),q=(-o+u+a)*(w+d-y),T=(o-a)*(w-y),A=o*d,N=(u+a)*(-d+y),C=(-o+i+h)*(p+d-M),P=(o-h)*(p-M),V=(i+h)*(-d+M),z=S+A+s*g,j=(r+s+o-n-i-u-a)*w+x+E+S+q+A+N,F=S+k+I+(r+s+o-i-h-l-u)*p+A+C+V,D=b+i*(-c+f+g-w-p-d+M)+x+S+A+C+P,_=b+x+E+S+h*y,$=A+C+P+V+n*m,L=S+k+R+u*(-c+m+g-w-p-d+y)+q+T+A,H=q+T+A+N+l*f,O=S+k+R+I+a*M;return e.set(0,0,z),e.set(0,1,j),e.set(0,2,F),e.set(1,0,D),e.set(1,1,_),e.set(1,2,$),e.set(2,0,L),e.set(2,1,H),e.set(2,2,O),e}mmulStrassen(t){t=v.checkMatrix(t);let e=this.clone(),r=e.rows,s=e.columns,o=t.rows,n=t.columns;function i(t,e,r){let s=t.rows,o=t.columns;if(s===e&&o===r)return t;{let s=b.zeros(e,r);return s=s.setSubMatrix(t,0,0),s}}s!==o&&console.warn(`Multiplying ${r} x ${s} and ${o} x ${n} matrix: dimensions do not match.`);let h=Math.max(r,o),l=Math.max(s,n);return e=i(e,h,l),function t(e,r,s,o){if(s<=512||o<=512)return e.mmul(r);s%2==1&&o%2==1?(e=i(e,s+1,o+1),r=i(r,s+1,o+1)):s%2==1?(e=i(e,s+1,o),r=i(r,s+1,o)):o%2==1&&(e=i(e,s,o+1),r=i(r,s,o+1));let n=parseInt(e.rows/2,10),h=parseInt(e.columns/2,10),l=e.subMatrix(0,n-1,0,h-1),u=r.subMatrix(0,n-1,0,h-1),a=e.subMatrix(0,n-1,h,e.columns-1),c=r.subMatrix(0,n-1,h,r.columns-1),f=e.subMatrix(n,e.rows-1,0,h-1),m=r.subMatrix(n,r.rows-1,0,h-1),g=e.subMatrix(n,e.rows-1,h,e.columns-1),w=r.subMatrix(n,r.rows-1,h,r.columns-1),p=t(b.add(l,g),b.add(u,w),n,h),d=t(b.add(f,g),u,n,h),y=t(l,b.sub(c,w),n,h),M=t(g,b.sub(m,u),n,h),x=t(b.add(l,a),w,n,h),E=t(b.sub(f,l),b.add(u,c),n,h),v=t(b.sub(a,g),b.add(m,w),n,h),S=b.add(p,M);S.sub(x),S.add(v);let k=b.add(y,x),R=b.add(d,M),I=b.sub(p,d);I.add(y),I.add(E);let q=b.zeros(2*S.rows,2*S.columns);return q=q.setSubMatrix(S,0,0),q=q.setSubMatrix(k,S.rows,0),q=q.setSubMatrix(R,0,S.columns),q=q.setSubMatrix(I,S.rows,S.columns),q.subMatrix(0,s-1,0,o-1)}(e,t=i(t,h,l),h,l)}scaleRows(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let s=new v(this.rows,this.columns);for(let t=0;t<this.rows;t++){const n=this.getRow(t);n.length>0&&o(n,{min:e,max:r,output:n}),s.setRow(t,n)}return s}scaleColumns(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let s=new v(this.rows,this.columns);for(let t=0;t<this.columns;t++){const n=this.getColumn(t);n.length&&o(n,{min:e,max:r,output:n}),s.setColumn(t,n)}return s}flipRows(){const t=Math.ceil(this.columns/2);for(let e=0;e<this.rows;e++)for(let r=0;r<t;r++){let t=this.get(e,r),s=this.get(e,this.columns-1-r);this.set(e,r,s),this.set(e,this.columns-1-r,t)}return this}flipColumns(){const t=Math.ceil(this.rows/2);for(let e=0;e<this.columns;e++)for(let r=0;r<t;r++){let t=this.get(r,e),s=this.get(this.rows-1-r,e);this.set(r,e,s),this.set(this.rows-1-r,e,t)}return this}kroneckerProduct(t){t=v.checkMatrix(t);let e=this.rows,r=this.columns,s=t.rows,o=t.columns,n=new v(e*s,r*o);for(let i=0;i<e;i++)for(let e=0;e<r;e++)for(let r=0;r<s;r++)for(let h=0;h<o;h++)n.set(s*i+r,o*e+h,this.get(i,e)*t.get(r,h));return n}kroneckerSum(t){if(t=v.checkMatrix(t),!this.isSquare()||!t.isSquare())throw new Error("Kronecker Sum needs two Square Matrices");let e=this.rows,r=t.rows,s=this.kroneckerProduct(v.eye(r,r)),o=v.eye(e,e).kroneckerProduct(t);return s.add(o)}transpose(){let t=new v(this.columns,this.rows);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(r,e,this.get(e,r));return t}sortRows(t=x){for(let e=0;e<this.rows;e++)this.setRow(e,this.getRow(e).sort(t));return this}sortColumns(t=x){for(let e=0;e<this.columns;e++)this.setColumn(e,this.getColumn(e).sort(t));return this}subMatrix(t,e,r,s){p(this,t,e,r,s);let o=new v(e-t+1,s-r+1);for(let n=t;n<=e;n++)for(let e=r;e<=s;e++)o.set(n-t,e-r,this.get(n,e));return o}subMatrixRow(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.columns-1),e>r||e<0||e>=this.columns||r<0||r>=this.columns)throw new RangeError("Argument out of range");let s=new v(t.length,r-e+1);for(let o=0;o<t.length;o++)for(let n=e;n<=r;n++){if(t[o]<0||t[o]>=this.rows)throw new RangeError(`Row index out of range: ${t[o]}`);s.set(o,n-e,this.get(t[o],n))}return s}subMatrixColumn(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.rows-1),e>r||e<0||e>=this.rows||r<0||r>=this.rows)throw new RangeError("Argument out of range");let s=new v(r-e+1,t.length);for(let o=0;o<t.length;o++)for(let n=e;n<=r;n++){if(t[o]<0||t[o]>=this.columns)throw new RangeError(`Column index out of range: ${t[o]}`);s.set(n-e,o,this.get(n,t[o]))}return s}setSubMatrix(t,e,r){if((t=v.checkMatrix(t)).isEmpty())return this;p(this,e,e+t.rows-1,r,r+t.columns-1);for(let s=0;s<t.rows;s++)for(let o=0;o<t.columns;o++)this.set(e+s,r+o,t.get(s,o));return this}selection(t,e){g(this,t),w(this,e);let r=new v(t.length,e.length);for(let s=0;s<t.length;s++){let o=t[s];for(let t=0;t<e.length;t++){let n=e[t];r.set(s,t,this.get(o,n))}}return r}trace(){let t=Math.min(this.rows,this.columns),e=0;for(let r=0;r<t;r++)e+=this.get(r,r);return e}clone(){return this.constructor.copy(this,new v(this.rows,this.columns))}static copy(t,e){for(const[r,s,o]of t.entries())e.set(r,s,o);return e}sum(t){switch(t){case"row":return function(t){let e=d(t.rows);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[r]+=t.get(r,s);return e}(this);case"column":return function(t){let e=d(t.columns);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[s]+=t.get(r,s);return e}(this);case void 0:return function(t){let e=0;for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)e+=t.get(r,s);return e}(this);default:throw new Error(`invalid option: ${t}`)}}product(t){switch(t){case"row":return function(t){let e=d(t.rows,1);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[r]*=t.get(r,s);return e}(this);case"column":return function(t){let e=d(t.columns,1);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[s]*=t.get(r,s);return e}(this);case void 0:return function(t){let e=1;for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)e*=t.get(r,s);return e}(this);default:throw new Error(`invalid option: ${t}`)}}mean(t){const e=this.sum(t);switch(t){case"row":for(let t=0;t<this.rows;t++)e[t]/=this.columns;return e;case"column":for(let t=0;t<this.columns;t++)e[t]/=this.rows;return e;case void 0:return e/this.size;default:throw new Error(`invalid option: ${t}`)}}variance(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{unbiased:r=!0,mean:o=this.mean(t)}=e;if("boolean"!=typeof r)throw new TypeError("unbiased must be a boolean");switch(t){case"row":if(!s.isAnyArray(o))throw new TypeError("mean must be an array");return function(t,e,r){const s=t.rows,o=t.columns,n=[];for(let i=0;i<s;i++){let s=0,h=0,l=0;for(let e=0;e<o;e++)l=t.get(i,e)-r[i],s+=l,h+=l*l;e?n.push((h-s*s/o)/(o-1)):n.push((h-s*s/o)/o)}return n}(this,r,o);case"column":if(!s.isAnyArray(o))throw new TypeError("mean must be an array");return function(t,e,r){const s=t.rows,o=t.columns,n=[];for(let i=0;i<o;i++){let o=0,h=0,l=0;for(let e=0;e<s;e++)l=t.get(e,i)-r[i],o+=l,h+=l*l;e?n.push((h-o*o/s)/(s-1)):n.push((h-o*o/s)/s)}return n}(this,r,o);case void 0:if("number"!=typeof o)throw new TypeError("mean must be a number");return function(t,e,r){const s=t.rows,o=t.columns,n=s*o;let i=0,h=0,l=0;for(let e=0;e<s;e++)for(let s=0;s<o;s++)l=t.get(e,s)-r,i+=l,h+=l*l;return e?(h-i*i/n)/(n-1):(h-i*i/n)/n}(this,r,o);default:throw new Error(`invalid option: ${t}`)}}standardDeviation(t,e){"object"==typeof t&&(e=t,t=void 0);const r=this.variance(t,e);if(void 0===t)return Math.sqrt(r);for(let t=0;t<r.length;t++)r[t]=Math.sqrt(r[t]);return r}center(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{center:r=this.mean(t)}=e;switch(t){case"row":if(!s.isAnyArray(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)-e[r])}(this,r),this;case"column":if(!s.isAnyArray(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)-e[s])}(this,r),this;case void 0:if("number"!=typeof r)throw new TypeError("center must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)-e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}scale(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");let r=e.scale;switch(t){case"row":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.rows;r++){let s=0;for(let e=0;e<t.columns;e++)s+=t.get(r,e)**2/(t.columns-1);e.push(Math.sqrt(s))}return e}(this);else if(!s.isAnyArray(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)/e[r])}(this,r),this;case"column":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.columns;r++){let s=0;for(let e=0;e<t.rows;e++)s+=t.get(e,r)**2/(t.rows-1);e.push(Math.sqrt(s))}return e}(this);else if(!s.isAnyArray(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)/e[s])}(this,r),this;case void 0:if(void 0===r)r=function(t){const e=t.size-1;let r=0;for(let s=0;s<t.columns;s++)for(let o=0;o<t.rows;o++)r+=t.get(o,s)**2/e;return Math.sqrt(r)}(this);else if("number"!=typeof r)throw new TypeError("scale must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)/e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}toString(t){return h(this,t)}[Symbol.iterator](){return this.entries()}*entries(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)yield[t,e,this.get(t,e)]}*values(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)yield this.get(t,e)}}function x(t,e){return t-e}function E(t){return t.every(t=>"number"==typeof t)}b.prototype.klass="Matrix","undefined"!=typeof Symbol&&(b.prototype[Symbol.for("nodejs.util.inspect.custom")]=function(){return h(this)}),b.random=b.rand,b.randomInt=b.randInt,b.diagonal=b.diag,b.prototype.diagonal=b.prototype.diag,b.identity=b.eye,b.prototype.negate=b.prototype.neg,b.prototype.tensorProduct=b.prototype.kroneckerProduct;class v extends b{data;#t(t,e){if(this.data=[],!(Number.isInteger(e)&&e>=0))throw new TypeError("nColumns must be a positive integer");for(let r=0;r<t;r++)this.data.push(new Float64Array(e));this.rows=t,this.columns=e}constructor(t,e){if(super(),v.isMatrix(t))this.#t(t.rows,t.columns),v.copy(t,this);else if(Number.isInteger(t)&&t>=0)this.#t(t,e);else{if(!s.isAnyArray(t))throw new TypeError("First argument must be a positive number or an array");{const r=t;if("number"!=typeof(e=(t=r.length)?r[0].length:0))throw new TypeError("Data must be a 2D array with at least one element");this.data=[];for(let s=0;s<t;s++){if(r[s].length!==e)throw new RangeError("Inconsistent array dimensions");if(!E(r[s]))throw new TypeError("Input data contains non-numeric values");this.data.push(Float64Array.from(r[s]))}this.rows=t,this.columns=e}}}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}removeRow(t){return a(this,t),this.data.splice(t,1),this.rows-=1,this}addRow(t,e){return void 0===e&&(e=t,t=this.rows),a(this,t,!0),e=Float64Array.from(f(this,e)),this.data.splice(t,0,e),this.rows+=1,this}removeColumn(t){c(this,t);for(let e=0;e<this.rows;e++){const r=new Float64Array(this.columns-1);for(let s=0;s<t;s++)r[s]=this.data[e][s];for(let s=t+1;s<this.columns;s++)r[s-1]=this.data[e][s];this.data[e]=r}return this.columns-=1,this}addColumn(t,e){void 0===e&&(e=t,t=this.columns),c(this,t,!0),e=m(this,e);for(let r=0;r<this.rows;r++){const s=new Float64Array(this.columns+1);let o=0;for(;o<t;o++)s[o]=this.data[r][o];for(s[o++]=e[r];o<this.columns+1;o++)s[o]=this.data[r][o-1];this.data[r]=s}return this.columns+=1,this}}!function(t,e){t.prototype.add=function(t){return"number"==typeof t?this.addS(t):this.addM(t)},t.prototype.addS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t);return this},t.prototype.addM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t.get(e,r));return this},t.add=function(t,r){return new e(t).add(r)},t.prototype.sub=function(t){return"number"==typeof t?this.subS(t):this.subM(t)},t.prototype.subS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t);return this},t.prototype.subM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t.get(e,r));return this},t.sub=function(t,r){return new e(t).sub(r)},t.prototype.subtract=t.prototype.sub,t.prototype.subtractS=t.prototype.subS,t.prototype.subtractM=t.prototype.subM,t.subtract=t.sub,t.prototype.mul=function(t){return"number"==typeof t?this.mulS(t):this.mulM(t)},t.prototype.mulS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t);return this},t.prototype.mulM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t.get(e,r));return this},t.mul=function(t,r){return new e(t).mul(r)},t.prototype.multiply=t.prototype.mul,t.prototype.multiplyS=t.prototype.mulS,t.prototype.multiplyM=t.prototype.mulM,t.multiply=t.mul,t.prototype.div=function(t){return"number"==typeof t?this.divS(t):this.divM(t)},t.prototype.divS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t);return this},t.prototype.divM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t.get(e,r));return this},t.div=function(t,r){return new e(t).div(r)},t.prototype.divide=t.prototype.div,t.prototype.divideS=t.prototype.divS,t.prototype.divideM=t.prototype.divM,t.divide=t.div,t.prototype.mod=function(t){return"number"==typeof t?this.modS(t):this.modM(t)},t.prototype.modS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t);return this},t.prototype.modM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t.get(e,r));return this},t.mod=function(t,r){return new e(t).mod(r)},t.prototype.modulus=t.prototype.mod,t.prototype.modulusS=t.prototype.modS,t.prototype.modulusM=t.prototype.modM,t.modulus=t.mod,t.prototype.and=function(t){return"number"==typeof t?this.andS(t):this.andM(t)},t.prototype.andS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t);return this},t.prototype.andM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t.get(e,r));return this},t.and=function(t,r){return new e(t).and(r)},t.prototype.or=function(t){return"number"==typeof t?this.orS(t):this.orM(t)},t.prototype.orS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t);return this},t.prototype.orM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t.get(e,r));return this},t.or=function(t,r){return new e(t).or(r)},t.prototype.xor=function(t){return"number"==typeof t?this.xorS(t):this.xorM(t)},t.prototype.xorS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t);return this},t.prototype.xorM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t.get(e,r));return this},t.xor=function(t,r){return new e(t).xor(r)},t.prototype.leftShift=function(t){return"number"==typeof t?this.leftShiftS(t):this.leftShiftM(t)},t.prototype.leftShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t);return this},t.prototype.leftShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t.get(e,r));return this},t.leftShift=function(t,r){return new e(t).leftShift(r)},t.prototype.signPropagatingRightShift=function(t){return"number"==typeof t?this.signPropagatingRightShiftS(t):this.signPropagatingRightShiftM(t)},t.prototype.signPropagatingRightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t);return this},t.prototype.signPropagatingRightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t.get(e,r));return this},t.signPropagatingRightShift=function(t,r){return new e(t).signPropagatingRightShift(r)},t.prototype.rightShift=function(t){return"number"==typeof t?this.rightShiftS(t):this.rightShiftM(t)},t.prototype.rightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t);return this},t.prototype.rightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t.get(e,r));return this},t.rightShift=function(t,r){return new e(t).rightShift(r)},t.prototype.zeroFillRightShift=t.prototype.rightShift,t.prototype.zeroFillRightShiftS=t.prototype.rightShiftS,t.prototype.zeroFillRightShiftM=t.prototype.rightShiftM,t.zeroFillRightShift=t.rightShift,t.prototype.not=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,~this.get(t,e));return this},t.not=function(t){return new e(t).not()},t.prototype.abs=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.abs(this.get(t,e)));return this},t.abs=function(t){return new e(t).abs()},t.prototype.acos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acos(this.get(t,e)));return this},t.acos=function(t){return new e(t).acos()},t.prototype.acosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acosh(this.get(t,e)));return this},t.acosh=function(t){return new e(t).acosh()},t.prototype.asin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asin(this.get(t,e)));return this},t.asin=function(t){return new e(t).asin()},t.prototype.asinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asinh(this.get(t,e)));return this},t.asinh=function(t){return new e(t).asinh()},t.prototype.atan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atan(this.get(t,e)));return this},t.atan=function(t){return new e(t).atan()},t.prototype.atanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atanh(this.get(t,e)));return this},t.atanh=function(t){return new e(t).atanh()},t.prototype.cbrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cbrt(this.get(t,e)));return this},t.cbrt=function(t){return new e(t).cbrt()},t.prototype.ceil=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.ceil(this.get(t,e)));return this},t.ceil=function(t){return new e(t).ceil()},t.prototype.clz32=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.clz32(this.get(t,e)));return this},t.clz32=function(t){return new e(t).clz32()},t.prototype.cos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cos(this.get(t,e)));return this},t.cos=function(t){return new e(t).cos()},t.prototype.cosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cosh(this.get(t,e)));return this},t.cosh=function(t){return new e(t).cosh()},t.prototype.exp=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.exp(this.get(t,e)));return this},t.exp=function(t){return new e(t).exp()},t.prototype.expm1=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.expm1(this.get(t,e)));return this},t.expm1=function(t){return new e(t).expm1()},t.prototype.floor=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.floor(this.get(t,e)));return this},t.floor=function(t){return new e(t).floor()},t.prototype.fround=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.fround(this.get(t,e)));return this},t.fround=function(t){return new e(t).fround()},t.prototype.log=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log(this.get(t,e)));return this},t.log=function(t){return new e(t).log()},t.prototype.log1p=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log1p(this.get(t,e)));return this},t.log1p=function(t){return new e(t).log1p()},t.prototype.log10=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log10(this.get(t,e)));return this},t.log10=function(t){return new e(t).log10()},t.prototype.log2=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log2(this.get(t,e)));return this},t.log2=function(t){return new e(t).log2()},t.prototype.round=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.round(this.get(t,e)));return this},t.round=function(t){return new e(t).round()},t.prototype.sign=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sign(this.get(t,e)));return this},t.sign=function(t){return new e(t).sign()},t.prototype.sin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sin(this.get(t,e)));return this},t.sin=function(t){return new e(t).sin()},t.prototype.sinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sinh(this.get(t,e)));return this},t.sinh=function(t){return new e(t).sinh()},t.prototype.sqrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sqrt(this.get(t,e)));return this},t.sqrt=function(t){return new e(t).sqrt()},t.prototype.tan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tan(this.get(t,e)));return this},t.tan=function(t){return new e(t).tan()},t.prototype.tanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tanh(this.get(t,e)));return this},t.tanh=function(t){return new e(t).tanh()},t.prototype.trunc=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.trunc(this.get(t,e)));return this},t.trunc=function(t){return new e(t).trunc()},t.pow=function(t,r){return new e(t).pow(r)},t.prototype.pow=function(t){return"number"==typeof t?this.powS(t):this.powM(t)},t.prototype.powS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)**t);return this},t.prototype.powM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)**t.get(e,r));return this}}(b,v);class S extends b{#e;get size(){return this.#e.size}get rows(){return this.#e.rows}get columns(){return this.#e.columns}get diagonalSize(){return this.rows}static isSymmetricMatrix(t){return v.isMatrix(t)&&"SymmetricMatrix"===t.klassType}static zeros(t){return new this(t)}static ones(t){return new this(t).fill(1)}constructor(t){if(super(),v.isMatrix(t)){if(!t.isSymmetric())throw new TypeError("not symmetric data");this.#e=v.copy(t,new v(t.rows,t.rows))}else if(Number.isInteger(t)&&t>=0)this.#e=new v(t,t);else if(this.#e=new v(t),!this.isSymmetric())throw new TypeError("not symmetric data")}clone(){const t=new S(this.diagonalSize);for(const[e,r,s]of this.upperRightEntries())t.set(e,r,s);return t}toMatrix(){return new v(this)}get(t,e){return this.#e.get(t,e)}set(t,e,r){return this.#e.set(t,e,r),this.#e.set(e,t,r),this}removeCross(t){return this.#e.removeRow(t),this.#e.removeColumn(t),this}addCross(t,e){void 0===e&&(e=t,t=this.diagonalSize);const r=e.slice();return r.splice(t,1),this.#e.addRow(t,r),this.#e.addColumn(t,e),this}applyMask(t){if(t.length!==this.diagonalSize)throw new RangeError("Mask size do not match with matrix size");const e=[];for(const[r,s]of t.entries())s||e.push(r);e.reverse();for(const t of e)this.removeCross(t);return this}toCompact(){const{diagonalSize:t}=this,e=new Array(t*(t+1)/2);for(let r=0,s=0,o=0;o<e.length;o++)e[o]=this.get(s,r),++r>=t&&(r=++s);return e}static fromCompact(t){const e=t.length,r=(Math.sqrt(8*e+1)-1)/2;if(!Number.isInteger(r))throw new TypeError(`This array is not a compact representation of a Symmetric Matrix, ${JSON.stringify(t)}`);const s=new S(r);for(let o=0,n=0,i=0;i<e;i++)s.set(o,n,t[i]),++o>=r&&(o=++n);return s}*upperRightEntries(){for(let t=0,e=0;t<this.diagonalSize;void 0){const r=this.get(t,e);yield[t,e,r],++e>=this.diagonalSize&&(e=++t)}}*upperRightValues(){for(let t=0,e=0;t<this.diagonalSize;void 0){const r=this.get(t,e);yield r,++e>=this.diagonalSize&&(e=++t)}}}S.prototype.klassType="SymmetricMatrix";class k extends S{static isDistanceMatrix(t){return S.isSymmetricMatrix(t)&&"DistanceMatrix"===t.klassSubType}constructor(t){if(super(t),!this.isDistance())throw new TypeError("Provided arguments do no produce a distance matrix")}set(t,e,r){return t===e&&(r=0),super.set(t,e,r)}addCross(t,e){return void 0===e&&(e=t,t=this.diagonalSize),(e=e.slice())[t]=0,super.addCross(t,e)}toSymmetricMatrix(){return new S(this)}clone(){const t=new k(this.diagonalSize);for(const[e,r,s]of this.upperRightEntries())e!==r&&t.set(e,r,s);return t}toCompact(){const{diagonalSize:t}=this,e=new Array((t-1)*t/2);for(let r=1,s=0,o=0;o<e.length;o++)e[o]=this.get(s,r),++r>=t&&(r=1+ ++s);return e}static fromCompact(t){const e=t.length;if(0===e)return new this(0);const r=(Math.sqrt(8*e+1)+1)/2;if(!Number.isInteger(r))throw new TypeError(`This array is not a compact representation of a DistanceMatrix, ${JSON.stringify(t)}`);const s=new this(r);for(let o=1,n=0,i=0;i<e;i++)s.set(o,n,t[i]),++o>=r&&(o=1+ ++n);return s}}k.prototype.klassSubType="DistanceMatrix";class R extends b{constructor(t,e,r){super(),this.matrix=t,this.rows=e,this.columns=r}}class I extends R{constructor(t,e,r){g(t,e),w(t,r),super(t,e.length,r.length),this.rowIndices=e,this.columnIndices=r}set(t,e,r){return this.matrix.set(this.rowIndices[t],this.columnIndices[e],r),this}get(t,e){return this.matrix.get(this.rowIndices[t],this.columnIndices[e])}}class q extends b{constructor(t,e={}){const{rows:r=1}=e;if(t.length%r!==0)throw new Error("the data length is not divisible by the number of rows");super(),this.rows=r,this.columns=t.length/r,this.data=t}set(t,e,r){let s=this._calculateIndex(t,e);return this.data[s]=r,this}get(t,e){let r=this._calculateIndex(t,e);return this.data[r]}_calculateIndex(t,e){return t*this.columns+e}}class T extends b{constructor(t){super(),this.data=t,this.rows=t.length,this.columns=t[0].length}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}}class A{constructor(t){let e,r,s,o,n,i,h,l,u,a=(t=T.checkMatrix(t)).clone(),c=a.rows,f=a.columns,m=new Float64Array(c),g=1;for(e=0;e<c;e++)m[e]=e;for(l=new Float64Array(c),r=0;r<f;r++){for(e=0;e<c;e++)l[e]=a.get(e,r);for(e=0;e<c;e++){for(u=Math.min(e,r),n=0,s=0;s<u;s++)n+=a.get(e,s)*l[s];l[e]-=n,a.set(e,r,l[e])}for(o=r,e=r+1;e<c;e++)Math.abs(l[e])>Math.abs(l[o])&&(o=e);if(o!==r){for(s=0;s<f;s++)i=a.get(o,s),a.set(o,s,a.get(r,s)),a.set(r,s,i);h=m[o],m[o]=m[r],m[r]=h,g=-g}if(r<c&&0!==a.get(r,r))for(e=r+1;e<c;e++)a.set(e,r,a.get(e,r)/a.get(r,r))}this.LU=a,this.pivotVector=m,this.pivotSign=g}isSingular(){let t=this.LU,e=t.columns;for(let r=0;r<e;r++)if(0===t.get(r,r))return!0;return!1}solve(t){t=v.checkMatrix(t);let e=this.LU;if(e.rows!==t.rows)throw new Error("Invalid matrix dimensions");if(this.isSingular())throw new Error("LU matrix is singular");let r,s,o,n=t.columns,i=t.subMatrixRow(this.pivotVector,0,n-1),h=e.columns;for(o=0;o<h;o++)for(r=o+1;r<h;r++)for(s=0;s<n;s++)i.set(r,s,i.get(r,s)-i.get(o,s)*e.get(r,o));for(o=h-1;o>=0;o--){for(s=0;s<n;s++)i.set(o,s,i.get(o,s)/e.get(o,o));for(r=0;r<o;r++)for(s=0;s<n;s++)i.set(r,s,i.get(r,s)-i.get(o,s)*e.get(r,o))}return i}get determinant(){let t=this.LU;if(!t.isSquare())throw new Error("Matrix must be square");let e=this.pivotSign,r=t.columns;for(let s=0;s<r;s++)e*=t.get(s,s);return e}get lowerTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,s=new v(e,r);for(let o=0;o<e;o++)for(let e=0;e<r;e++)o>e?s.set(o,e,t.get(o,e)):o===e?s.set(o,e,1):s.set(o,e,0);return s}get upperTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,s=new v(e,r);for(let o=0;o<e;o++)for(let e=0;e<r;e++)o<=e?s.set(o,e,t.get(o,e)):s.set(o,e,0);return s}get pivotPermutationVector(){return Array.from(this.pivotVector)}}function N(t,e){let r=0;return Math.abs(t)>Math.abs(e)?(r=e/t,Math.abs(t)*Math.sqrt(1+r*r)):0!==e?(r=t/e,Math.abs(e)*Math.sqrt(1+r*r)):0}class C{constructor(t){let e,r,s,o,n=(t=T.checkMatrix(t)).clone(),i=t.rows,h=t.columns,l=new Float64Array(h);for(s=0;s<h;s++){let t=0;for(e=s;e<i;e++)t=N(t,n.get(e,s));if(0!==t){for(n.get(s,s)<0&&(t=-t),e=s;e<i;e++)n.set(e,s,n.get(e,s)/t);for(n.set(s,s,n.get(s,s)+1),r=s+1;r<h;r++){for(o=0,e=s;e<i;e++)o+=n.get(e,s)*n.get(e,r);for(o=-o/n.get(s,s),e=s;e<i;e++)n.set(e,r,n.get(e,r)+o*n.get(e,s))}}l[s]=-t}this.QR=n,this.Rdiag=l}solve(t){t=v.checkMatrix(t);let e=this.QR,r=e.rows;if(t.rows!==r)throw new Error("Matrix row dimensions must agree");if(!this.isFullRank())throw new Error("Matrix is rank deficient");let s,o,n,i,h=t.columns,l=t.clone(),u=e.columns;for(n=0;n<u;n++)for(o=0;o<h;o++){for(i=0,s=n;s<r;s++)i+=e.get(s,n)*l.get(s,o);for(i=-i/e.get(n,n),s=n;s<r;s++)l.set(s,o,l.get(s,o)+i*e.get(s,n))}for(n=u-1;n>=0;n--){for(o=0;o<h;o++)l.set(n,o,l.get(n,o)/this.Rdiag[n]);for(s=0;s<n;s++)for(o=0;o<h;o++)l.set(s,o,l.get(s,o)-l.get(n,o)*e.get(s,n))}return l.subMatrix(0,u-1,0,h-1)}isFullRank(){let t=this.QR.columns;for(let e=0;e<t;e++)if(0===this.Rdiag[e])return!1;return!0}get upperTriangularMatrix(){let t,e,r=this.QR,s=r.columns,o=new v(s,s);for(t=0;t<s;t++)for(e=0;e<s;e++)t<e?o.set(t,e,r.get(t,e)):t===e?o.set(t,e,this.Rdiag[t]):o.set(t,e,0);return o}get orthogonalMatrix(){let t,e,r,s,o=this.QR,n=o.rows,i=o.columns,h=new v(n,i);for(r=i-1;r>=0;r--){for(t=0;t<n;t++)h.set(t,r,0);for(h.set(r,r,1),e=r;e<i;e++)if(0!==o.get(r,r)){for(s=0,t=r;t<n;t++)s+=o.get(t,r)*h.get(t,e);for(s=-s/o.get(r,r),t=r;t<n;t++)h.set(t,e,h.get(t,e)+s*o.get(t,r))}}return h}}class P{constructor(t,e={}){if((t=T.checkMatrix(t)).isEmpty())throw new Error("Matrix must be non-empty");let r=t.rows,s=t.columns;const{computeLeftSingularVectors:o=!0,computeRightSingularVectors:n=!0,autoTranspose:i=!1}=e;let h,l=Boolean(o),u=Boolean(n),a=!1;if(r<s)if(i){h=t.transpose(),r=h.rows,s=h.columns,a=!0;let e=l;l=u,u=e}else h=t.clone(),console.warn("Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose");else h=t.clone();let c=Math.min(r,s),f=Math.min(r+1,s),m=new Float64Array(f),g=new v(r,c),w=new v(s,s),p=new Float64Array(s),d=new Float64Array(r),y=new Float64Array(f);for(let t=0;t<f;t++)y[t]=t;let M=Math.min(r-1,s),b=Math.max(0,Math.min(s-2,r)),x=Math.max(M,b);for(let t=0;t<x;t++){if(t<M){m[t]=0;for(let e=t;e<r;e++)m[t]=N(m[t],h.get(e,t));if(0!==m[t]){h.get(t,t)<0&&(m[t]=-m[t]);for(let e=t;e<r;e++)h.set(e,t,h.get(e,t)/m[t]);h.set(t,t,h.get(t,t)+1)}m[t]=-m[t]}for(let e=t+1;e<s;e++){if(t<M&&0!==m[t]){let s=0;for(let o=t;o<r;o++)s+=h.get(o,t)*h.get(o,e);s=-s/h.get(t,t);for(let o=t;o<r;o++)h.set(o,e,h.get(o,e)+s*h.get(o,t))}p[e]=h.get(t,e)}if(l&&t<M)for(let e=t;e<r;e++)g.set(e,t,h.get(e,t));if(t<b){p[t]=0;for(let e=t+1;e<s;e++)p[t]=N(p[t],p[e]);if(0!==p[t]){p[t+1]<0&&(p[t]=0-p[t]);for(let e=t+1;e<s;e++)p[e]/=p[t];p[t+1]+=1}if(p[t]=-p[t],t+1<r&&0!==p[t]){for(let e=t+1;e<r;e++)d[e]=0;for(let e=t+1;e<r;e++)for(let r=t+1;r<s;r++)d[e]+=p[r]*h.get(e,r);for(let e=t+1;e<s;e++){let s=-p[e]/p[t+1];for(let o=t+1;o<r;o++)h.set(o,e,h.get(o,e)+s*d[o])}}if(u)for(let e=t+1;e<s;e++)w.set(e,t,p[e])}}let E=Math.min(s,r+1);if(M<s&&(m[M]=h.get(M,M)),r<E&&(m[E-1]=0),b+1<E&&(p[b]=h.get(b,E-1)),p[E-1]=0,l){for(let t=M;t<c;t++){for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}for(let t=M-1;t>=0;t--)if(0!==m[t]){for(let e=t+1;e<c;e++){let s=0;for(let o=t;o<r;o++)s+=g.get(o,t)*g.get(o,e);s=-s/g.get(t,t);for(let o=t;o<r;o++)g.set(o,e,g.get(o,e)+s*g.get(o,t))}for(let e=t;e<r;e++)g.set(e,t,-g.get(e,t));g.set(t,t,1+g.get(t,t));for(let e=0;e<t-1;e++)g.set(e,t,0)}else{for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}}if(u)for(let t=s-1;t>=0;t--){if(t<b&&0!==p[t])for(let e=t+1;e<s;e++){let r=0;for(let o=t+1;o<s;o++)r+=w.get(o,t)*w.get(o,e);r=-r/w.get(t+1,t);for(let o=t+1;o<s;o++)w.set(o,e,w.get(o,e)+r*w.get(o,t))}for(let e=0;e<s;e++)w.set(e,t,0);w.set(t,t,1)}let S=E-1,k=Number.EPSILON;for(;E>0;){let t,e;for(t=E-2;t>=-1&&-1!==t;t--){const e=Number.MIN_VALUE+k*Math.abs(m[t]+Math.abs(m[t+1]));if(Math.abs(p[t])<=e||Number.isNaN(p[t])){p[t]=0;break}}if(t===E-2)e=4;else{let r;for(r=E-1;r>=t&&r!==t;r--){let e=(r!==E?Math.abs(p[r]):0)+(r!==t+1?Math.abs(p[r-1]):0);if(Math.abs(m[r])<=k*e){m[r]=0;break}}r===t?e=3:r===E-1?e=1:(e=2,t=r)}switch(t++,e){case 1:{let e=p[E-2];p[E-2]=0;for(let r=E-2;r>=t;r--){let o=N(m[r],e),n=m[r]/o,i=e/o;if(m[r]=o,r!==t&&(e=-i*p[r-1],p[r-1]=n*p[r-1]),u)for(let t=0;t<s;t++)o=n*w.get(t,r)+i*w.get(t,E-1),w.set(t,E-1,-i*w.get(t,r)+n*w.get(t,E-1)),w.set(t,r,o)}break}case 2:{let e=p[t-1];p[t-1]=0;for(let s=t;s<E;s++){let o=N(m[s],e),n=m[s]/o,i=e/o;if(m[s]=o,e=-i*p[s],p[s]=n*p[s],l)for(let e=0;e<r;e++)o=n*g.get(e,s)+i*g.get(e,t-1),g.set(e,t-1,-i*g.get(e,s)+n*g.get(e,t-1)),g.set(e,s,o)}break}case 3:{const e=Math.max(Math.abs(m[E-1]),Math.abs(m[E-2]),Math.abs(p[E-2]),Math.abs(m[t]),Math.abs(p[t])),o=m[E-1]/e,n=m[E-2]/e,i=p[E-2]/e,h=m[t]/e,a=p[t]/e,c=((n+o)*(n-o)+i*i)/2,f=o*i*(o*i);let d=0;0===c&&0===f||(d=c<0?0-Math.sqrt(c*c+f):Math.sqrt(c*c+f),d=f/(c+d));let y=(h+o)*(h-o)+d,M=h*a;for(let e=t;e<E-1;e++){let o=N(y,M);0===o&&(o=Number.MIN_VALUE);let n=y/o,i=M/o;if(e!==t&&(p[e-1]=o),y=n*m[e]+i*p[e],p[e]=n*p[e]-i*m[e],M=i*m[e+1],m[e+1]=n*m[e+1],u)for(let t=0;t<s;t++)o=n*w.get(t,e)+i*w.get(t,e+1),w.set(t,e+1,-i*w.get(t,e)+n*w.get(t,e+1)),w.set(t,e,o);if(o=N(y,M),0===o&&(o=Number.MIN_VALUE),n=y/o,i=M/o,m[e]=o,y=n*p[e]+i*m[e+1],m[e+1]=-i*p[e]+n*m[e+1],M=i*p[e+1],p[e+1]=n*p[e+1],l&&e<r-1)for(let t=0;t<r;t++)o=n*g.get(t,e)+i*g.get(t,e+1),g.set(t,e+1,-i*g.get(t,e)+n*g.get(t,e+1)),g.set(t,e,o)}p[E-2]=y;break}case 4:if(m[t]<=0&&(m[t]=m[t]<0?-m[t]:0,u))for(let e=0;e<=S;e++)w.set(e,t,-w.get(e,t));for(;t<S&&!(m[t]>=m[t+1]);){let e=m[t];if(m[t]=m[t+1],m[t+1]=e,u&&t<s-1)for(let r=0;r<s;r++)e=w.get(r,t+1),w.set(r,t+1,w.get(r,t)),w.set(r,t,e);if(l&&t<r-1)for(let s=0;s<r;s++)e=g.get(s,t+1),g.set(s,t+1,g.get(s,t)),g.set(s,t,e);t++}E--}}if(a){let t=w;w=g,g=t}this.m=r,this.n=s,this.s=m,this.U=g,this.V=w}solve(t){let e=t,r=this.threshold,s=this.s.length,o=v.zeros(s,s);for(let t=0;t<s;t++)Math.abs(this.s[t])<=r?o.set(t,t,0):o.set(t,t,1/this.s[t]);let n=this.U,i=this.rightSingularVectors,h=i.mmul(o),l=i.rows,u=n.rows,a=v.zeros(l,u);for(let t=0;t<l;t++)for(let e=0;e<u;e++){let r=0;for(let o=0;o<s;o++)r+=h.get(t,o)*n.get(e,o);a.set(t,e,r)}return a.mmul(e)}solveForDiagonal(t){return this.solve(v.diag(t))}inverse(){let t=this.V,e=this.threshold,r=t.rows,s=t.columns,o=new v(r,this.s.length);for(let n=0;n<r;n++)for(let r=0;r<s;r++)Math.abs(this.s[r])>e&&o.set(n,r,t.get(n,r)/this.s[r]);let n=this.U,i=n.rows,h=n.columns,l=new v(r,i);for(let t=0;t<r;t++)for(let e=0;e<i;e++){let r=0;for(let s=0;s<h;s++)r+=o.get(t,s)*n.get(e,s);l.set(t,e,r)}return l}get condition(){return this.s[0]/this.s[Math.min(this.m,this.n)-1]}get norm2(){return this.s[0]}get rank(){let t=Math.max(this.m,this.n)*this.s[0]*Number.EPSILON,e=0,r=this.s;for(let s=0,o=r.length;s<o;s++)r[s]>t&&e++;return e}get diagonal(){return Array.from(this.s)}get threshold(){return Number.EPSILON/2*Math.max(this.m,this.n)*this.s[0]}get leftSingularVectors(){return this.U}get rightSingularVectors(){return this.V}get diagonalMatrix(){return v.diag(this.s)}}function V(t,e,r=!1){return t=T.checkMatrix(t),e=T.checkMatrix(e),r?new P(t).solve(e):t.isSquare()?new A(t).solve(e):new C(t).solve(e)}function z(t,e){let r=[];for(let s=0;s<t;s++)s!==e&&r.push(s);return r}function j(t,e,r,s=1e-9,o=1e-9){if(t>o)return new Array(e.rows+1).fill(0);{let t=e.addRow(r,[0]);for(let e=0;e<t.rows;e++)Math.abs(t.get(e,0))<s&&t.set(e,0,0);return t.to1DArray()}}class F{constructor(t,e={}){const{assumeSymmetric:r=!1}=e;if(!(t=T.checkMatrix(t)).isSquare())throw new Error("Matrix is not a square matrix");if(t.isEmpty())throw new Error("Matrix must be non-empty");let s,o,n=t.columns,i=new v(n,n),h=new Float64Array(n),l=new Float64Array(n),u=t,a=!1;if(a=!!r||t.isSymmetric(),a){for(s=0;s<n;s++)for(o=0;o<n;o++)i.set(s,o,u.get(s,o));!function(t,e,r,s){let o,n,i,h,l,u,a,c;for(l=0;l<t;l++)r[l]=s.get(t-1,l);for(h=t-1;h>0;h--){for(c=0,i=0,u=0;u<h;u++)c+=Math.abs(r[u]);if(0===c)for(e[h]=r[h-1],l=0;l<h;l++)r[l]=s.get(h-1,l),s.set(h,l,0),s.set(l,h,0);else{for(u=0;u<h;u++)r[u]/=c,i+=r[u]*r[u];for(o=r[h-1],n=Math.sqrt(i),o>0&&(n=-n),e[h]=c*n,i-=o*n,r[h-1]=o-n,l=0;l<h;l++)e[l]=0;for(l=0;l<h;l++){for(o=r[l],s.set(l,h,o),n=e[l]+s.get(l,l)*o,u=l+1;u<=h-1;u++)n+=s.get(u,l)*r[u],e[u]+=s.get(u,l)*o;e[l]=n}for(o=0,l=0;l<h;l++)e[l]/=i,o+=e[l]*r[l];for(a=o/(i+i),l=0;l<h;l++)e[l]-=a*r[l];for(l=0;l<h;l++){for(o=r[l],n=e[l],u=l;u<=h-1;u++)s.set(u,l,s.get(u,l)-(o*e[u]+n*r[u]));r[l]=s.get(h-1,l),s.set(h,l,0)}}r[h]=i}for(h=0;h<t-1;h++){if(s.set(t-1,h,s.get(h,h)),s.set(h,h,1),i=r[h+1],0!==i){for(u=0;u<=h;u++)r[u]=s.get(u,h+1)/i;for(l=0;l<=h;l++){for(n=0,u=0;u<=h;u++)n+=s.get(u,h+1)*s.get(u,l);for(u=0;u<=h;u++)s.set(u,l,s.get(u,l)-n*r[u])}}for(u=0;u<=h;u++)s.set(u,h+1,0)}for(l=0;l<t;l++)r[l]=s.get(t-1,l),s.set(t-1,l,0);s.set(t-1,t-1,1),e[0]=0}(n,l,h,i),function(t,e,r,s){let o,n,i,h,l,u,a,c,f,m,g,w,p,d,y,M;for(i=1;i<t;i++)e[i-1]=e[i];e[t-1]=0;let b=0,x=0,E=Number.EPSILON;for(u=0;u<t;u++){for(x=Math.max(x,Math.abs(r[u])+Math.abs(e[u])),a=u;a<t&&!(Math.abs(e[a])<=E*x);)a++;if(a>u)do{for(o=r[u],c=(r[u+1]-o)/(2*e[u]),f=N(c,1),c<0&&(f=-f),r[u]=e[u]/(c+f),r[u+1]=e[u]*(c+f),m=r[u+1],n=o-r[u],i=u+2;i<t;i++)r[i]-=n;for(b+=n,c=r[a],g=1,w=g,p=g,d=e[u+1],y=0,M=0,i=a-1;i>=u;i--)for(p=w,w=g,M=y,o=g*e[i],n=g*c,f=N(c,e[i]),e[i+1]=y*f,y=e[i]/f,g=c/f,c=g*r[i]-y*o,r[i+1]=n+y*(g*o+y*r[i]),l=0;l<t;l++)n=s.get(l,i+1),s.set(l,i+1,y*s.get(l,i)+g*n),s.set(l,i,g*s.get(l,i)-y*n);c=-y*M*p*d*e[u]/m,e[u]=y*c,r[u]=g*c}while(Math.abs(e[u])>E*x);r[u]=r[u]+b,e[u]=0}for(i=0;i<t-1;i++){for(l=i,c=r[i],h=i+1;h<t;h++)r[h]<c&&(l=h,c=r[h]);if(l!==i)for(r[l]=r[i],r[i]=c,h=0;h<t;h++)c=s.get(h,i),s.set(h,i,s.get(h,l)),s.set(h,l,c)}}(n,l,h,i)}else{let t=new v(n,n),e=new Float64Array(n);for(o=0;o<n;o++)for(s=0;s<n;s++)t.set(s,o,u.get(s,o));!function(t,e,r,s){let o,n,i,h,l,u,a,c=t-1;for(u=1;u<=c-1;u++){for(a=0,h=u;h<=c;h++)a+=Math.abs(e.get(h,u-1));if(0!==a){for(i=0,h=c;h>=u;h--)r[h]=e.get(h,u-1)/a,i+=r[h]*r[h];for(n=Math.sqrt(i),r[u]>0&&(n=-n),i-=r[u]*n,r[u]=r[u]-n,l=u;l<t;l++){for(o=0,h=c;h>=u;h--)o+=r[h]*e.get(h,l);for(o/=i,h=u;h<=c;h++)e.set(h,l,e.get(h,l)-o*r[h])}for(h=0;h<=c;h++){for(o=0,l=c;l>=u;l--)o+=r[l]*e.get(h,l);for(o/=i,l=u;l<=c;l++)e.set(h,l,e.get(h,l)-o*r[l])}r[u]=a*r[u],e.set(u,u-1,a*n)}}for(h=0;h<t;h++)for(l=0;l<t;l++)s.set(h,l,h===l?1:0);for(u=c-1;u>=1;u--)if(0!==e.get(u,u-1)){for(h=u+1;h<=c;h++)r[h]=e.get(h,u-1);for(l=u;l<=c;l++){for(n=0,h=u;h<=c;h++)n+=r[h]*s.get(h,l);for(n=n/r[u]/e.get(u,u-1),h=u;h<=c;h++)s.set(h,l,s.get(h,l)+n*r[h])}}}(n,t,e,i),function(t,e,r,s,o){let n,i,h,l,u,a,c,f,m,g,w,p,d,y,M,b=t-1,x=t-1,E=Number.EPSILON,v=0,S=0,k=0,R=0,I=0,q=0,T=0,A=0;for(n=0;n<t;n++)for((n<0||n>x)&&(r[n]=o.get(n,n),e[n]=0),i=Math.max(n-1,0);i<t;i++)S+=Math.abs(o.get(n,i));for(;b>=0;){for(l=b;l>0&&(q=Math.abs(o.get(l-1,l-1))+Math.abs(o.get(l,l)),0===q&&(q=S),!(Math.abs(o.get(l,l-1))<E*q));)l--;if(l===b)o.set(b,b,o.get(b,b)+v),r[b]=o.get(b,b),e[b]=0,b--,A=0;else if(l===b-1){if(c=o.get(b,b-1)*o.get(b-1,b),k=(o.get(b-1,b-1)-o.get(b,b))/2,R=k*k+c,T=Math.sqrt(Math.abs(R)),o.set(b,b,o.get(b,b)+v),o.set(b-1,b-1,o.get(b-1,b-1)+v),f=o.get(b,b),R>=0){for(T=k>=0?k+T:k-T,r[b-1]=f+T,r[b]=r[b-1],0!==T&&(r[b]=f-c/T),e[b-1]=0,e[b]=0,f=o.get(b,b-1),q=Math.abs(f)+Math.abs(T),k=f/q,R=T/q,I=Math.sqrt(k*k+R*R),k/=I,R/=I,i=b-1;i<t;i++)T=o.get(b-1,i),o.set(b-1,i,R*T+k*o.get(b,i)),o.set(b,i,R*o.get(b,i)-k*T);for(n=0;n<=b;n++)T=o.get(n,b-1),o.set(n,b-1,R*T+k*o.get(n,b)),o.set(n,b,R*o.get(n,b)-k*T);for(n=0;n<=x;n++)T=s.get(n,b-1),s.set(n,b-1,R*T+k*s.get(n,b)),s.set(n,b,R*s.get(n,b)-k*T)}else r[b-1]=f+k,r[b]=f+k,e[b-1]=T,e[b]=-T;b-=2,A=0}else{if(f=o.get(b,b),m=0,c=0,l<b&&(m=o.get(b-1,b-1),c=o.get(b,b-1)*o.get(b-1,b)),10===A){for(v+=f,n=0;n<=b;n++)o.set(n,n,o.get(n,n)-f);q=Math.abs(o.get(b,b-1))+Math.abs(o.get(b-1,b-2)),f=m=.75*q,c=-.4375*q*q}if(30===A&&(q=(m-f)/2,q=q*q+c,q>0)){for(q=Math.sqrt(q),m<f&&(q=-q),q=f-c/((m-f)/2+q),n=0;n<=b;n++)o.set(n,n,o.get(n,n)-q);v+=q,f=m=c=.964}for(A+=1,u=b-2;u>=l&&(T=o.get(u,u),I=f-T,q=m-T,k=(I*q-c)/o.get(u+1,u)+o.get(u,u+1),R=o.get(u+1,u+1)-T-I-q,I=o.get(u+2,u+1),q=Math.abs(k)+Math.abs(R)+Math.abs(I),k/=q,R/=q,I/=q,u!==l)&&!(Math.abs(o.get(u,u-1))*(Math.abs(R)+Math.abs(I))<E*(Math.abs(k)*(Math.abs(o.get(u-1,u-1))+Math.abs(T)+Math.abs(o.get(u+1,u+1)))));)u--;for(n=u+2;n<=b;n++)o.set(n,n-2,0),n>u+2&&o.set(n,n-3,0);for(h=u;h<=b-1&&(y=h!==b-1,h!==u&&(k=o.get(h,h-1),R=o.get(h+1,h-1),I=y?o.get(h+2,h-1):0,f=Math.abs(k)+Math.abs(R)+Math.abs(I),0!==f&&(k/=f,R/=f,I/=f)),0!==f);h++)if(q=Math.sqrt(k*k+R*R+I*I),k<0&&(q=-q),0!==q){for(h!==u?o.set(h,h-1,-q*f):l!==u&&o.set(h,h-1,-o.get(h,h-1)),k+=q,f=k/q,m=R/q,T=I/q,R/=k,I/=k,i=h;i<t;i++)k=o.get(h,i)+R*o.get(h+1,i),y&&(k+=I*o.get(h+2,i),o.set(h+2,i,o.get(h+2,i)-k*T)),o.set(h,i,o.get(h,i)-k*f),o.set(h+1,i,o.get(h+1,i)-k*m);for(n=0;n<=Math.min(b,h+3);n++)k=f*o.get(n,h)+m*o.get(n,h+1),y&&(k+=T*o.get(n,h+2),o.set(n,h+2,o.get(n,h+2)-k*I)),o.set(n,h,o.get(n,h)-k),o.set(n,h+1,o.get(n,h+1)-k*R);for(n=0;n<=x;n++)k=f*s.get(n,h)+m*s.get(n,h+1),y&&(k+=T*s.get(n,h+2),s.set(n,h+2,s.get(n,h+2)-k*I)),s.set(n,h,s.get(n,h)-k),s.set(n,h+1,s.get(n,h+1)-k*R)}}}if(0!==S){for(b=t-1;b>=0;b--)if(k=r[b],R=e[b],0===R)for(l=b,o.set(b,b,1),n=b-1;n>=0;n--){for(c=o.get(n,n)-k,I=0,i=l;i<=b;i++)I+=o.get(n,i)*o.get(i,b);if(e[n]<0)T=c,q=I;else if(l=n,0===e[n]?o.set(n,b,0!==c?-I/c:-I/(E*S)):(f=o.get(n,n+1),m=o.get(n+1,n),R=(r[n]-k)*(r[n]-k)+e[n]*e[n],a=(f*q-T*I)/R,o.set(n,b,a),o.set(n+1,b,Math.abs(f)>Math.abs(T)?(-I-c*a)/f:(-q-m*a)/T)),a=Math.abs(o.get(n,b)),E*a*a>1)for(i=n;i<=b;i++)o.set(i,b,o.get(i,b)/a)}else if(R<0)for(l=b-1,Math.abs(o.get(b,b-1))>Math.abs(o.get(b-1,b))?(o.set(b-1,b-1,R/o.get(b,b-1)),o.set(b-1,b,-(o.get(b,b)-k)/o.get(b,b-1))):(M=D(0,-o.get(b-1,b),o.get(b-1,b-1)-k,R),o.set(b-1,b-1,M[0]),o.set(b-1,b,M[1])),o.set(b,b-1,0),o.set(b,b,1),n=b-2;n>=0;n--){for(g=0,w=0,i=l;i<=b;i++)g+=o.get(n,i)*o.get(i,b-1),w+=o.get(n,i)*o.get(i,b);if(c=o.get(n,n)-k,e[n]<0)T=c,I=g,q=w;else if(l=n,0===e[n]?(M=D(-g,-w,c,R),o.set(n,b-1,M[0]),o.set(n,b,M[1])):(f=o.get(n,n+1),m=o.get(n+1,n),p=(r[n]-k)*(r[n]-k)+e[n]*e[n]-R*R,d=2*(r[n]-k)*R,0===p&&0===d&&(p=E*S*(Math.abs(c)+Math.abs(R)+Math.abs(f)+Math.abs(m)+Math.abs(T))),M=D(f*I-T*g+R*w,f*q-T*w-R*g,p,d),o.set(n,b-1,M[0]),o.set(n,b,M[1]),Math.abs(f)>Math.abs(T)+Math.abs(R)?(o.set(n+1,b-1,(-g-c*o.get(n,b-1)+R*o.get(n,b))/f),o.set(n+1,b,(-w-c*o.get(n,b)-R*o.get(n,b-1))/f)):(M=D(-I-m*o.get(n,b-1),-q-m*o.get(n,b),T,R),o.set(n+1,b-1,M[0]),o.set(n+1,b,M[1]))),a=Math.max(Math.abs(o.get(n,b-1)),Math.abs(o.get(n,b))),E*a*a>1)for(i=n;i<=b;i++)o.set(i,b-1,o.get(i,b-1)/a),o.set(i,b,o.get(i,b)/a)}for(n=0;n<t;n++)if(n<0||n>x)for(i=n;i<t;i++)s.set(n,i,o.get(n,i));for(i=t-1;i>=0;i--)for(n=0;n<=x;n++){for(T=0,h=0;h<=Math.min(i,x);h++)T+=s.get(n,h)*o.get(h,i);s.set(n,i,T)}}}(n,l,h,i,t)}this.n=n,this.e=l,this.d=h,this.V=i}get realEigenvalues(){return Array.from(this.d)}get imaginaryEigenvalues(){return Array.from(this.e)}get eigenvectorMatrix(){return this.V}get diagonalMatrix(){let t,e,r=this.n,s=this.e,o=this.d,n=new v(r,r);for(t=0;t<r;t++){for(e=0;e<r;e++)n.set(t,e,0);n.set(t,t,o[t]),s[t]>0?n.set(t,t+1,s[t]):s[t]<0&&n.set(t,t-1,s[t])}return n}}function D(t,e,r,s){let o,n;return Math.abs(r)>Math.abs(s)?(o=s/r,n=r+o*s,[(t+o*e)/n,(e-o*t)/n]):(o=r/s,n=s+o*r,[(o*t+e)/n,(o*e-t)/n])}class _{constructor(t){if(!(t=T.checkMatrix(t)).isSymmetric())throw new Error("Matrix is not symmetric");let e,r,s,o=t,n=o.rows,i=new v(n,n),h=!0;for(r=0;r<n;r++){let t=0;for(s=0;s<r;s++){let n=0;for(e=0;e<s;e++)n+=i.get(s,e)*i.get(r,e);n=(o.get(r,s)-n)/i.get(s,s),i.set(r,s,n),t+=n*n}for(t=o.get(r,r)-t,h&&=t>0,i.set(r,r,Math.sqrt(Math.max(t,0))),s=r+1;s<n;s++)i.set(r,s,0)}this.L=i,this.positiveDefinite=h}isPositiveDefinite(){return this.positiveDefinite}solve(t){t=T.checkMatrix(t);let e=this.L,r=e.rows;if(t.rows!==r)throw new Error("Matrix dimensions do not match");if(!1===this.isPositiveDefinite())throw new Error("Matrix is not positive definite");let s,o,n,i=t.columns,h=t.clone();for(n=0;n<r;n++)for(o=0;o<i;o++){for(s=0;s<n;s++)h.set(n,o,h.get(n,o)-h.get(s,o)*e.get(n,s));h.set(n,o,h.get(n,o)/e.get(n,n))}for(n=r-1;n>=0;n--)for(o=0;o<i;o++){for(s=n+1;s<r;s++)h.set(n,o,h.get(n,o)-h.get(s,o)*e.get(s,n));h.set(n,o,h.get(n,o)/e.get(n,n))}return h}get lowerTriangularMatrix(){return this.L}}class ${constructor(t,e={}){t=T.checkMatrix(t);let{Y:r}=e;const{scaleScores:o=!1,maxIterations:n=1e3,terminationCriteria:i=1e-10}=e;let h;if(r){if(r=s.isAnyArray(r)&&"number"==typeof r[0]?v.columnVector(r):T.checkMatrix(r),r.rows!==t.rows)throw new Error("Y should have the same number of rows as X");h=r.getColumnVector(0)}else h=t.getColumnVector(0);let l,u,a,c,f=1;for(let e=0;e<n&&f>i;e++)a=t.transpose().mmul(h).div(h.transpose().mmul(h).get(0,0)),a=a.div(a.norm()),l=t.mmul(a).div(a.transpose().mmul(a).get(0,0)),e>0&&(f=l.clone().sub(c).pow(2).sum()),c=l.clone(),r?(u=r.transpose().mmul(l).div(l.transpose().mmul(l).get(0,0)),u=u.div(u.norm()),h=r.mmul(u).div(u.transpose().mmul(u).get(0,0))):h=l;if(r){let e=t.transpose().mmul(l).div(l.transpose().mmul(l).get(0,0));e=e.div(e.norm());let s=t.clone().sub(l.clone().mmul(e.transpose())),o=h.transpose().mmul(l).div(l.transpose().mmul(l).get(0,0)),n=r.clone().sub(l.clone().mulS(o.get(0,0)).mmul(u.transpose()));this.t=l,this.p=e.transpose(),this.w=a.transpose(),this.q=u,this.u=h,this.s=l.transpose().mmul(l),this.xResidual=s,this.yResidual=n,this.betas=o}else this.w=a.transpose(),this.s=l.transpose().mmul(l).sqrt(),this.t=o?l.clone().div(this.s.get(0,0)):l,this.xResidual=t.sub(l.mmul(a.transpose()))}}e.y3=b,e.jy=_,e.oN=_,e.Hc=k,e.cg=F,e.hj=F,e.LU=A,e.Tb=A,e.uq=v,e.Zm=class extends R{constructor(t,e){w(t,e),super(t,t.rows,e.length),this.columnIndices=e}set(t,e,r){return this.matrix.set(t,this.columnIndices[e],r),this}get(t,e){return this.matrix.get(t,this.columnIndices[e])}},e.Dq=class extends R{constructor(t,e){c(t,e),super(t,t.rows,1),this.column=e}set(t,e,r){return this.matrix.set(t,this.column,r),this}get(t){return this.matrix.get(t,this.column)}},e.__=class extends R{constructor(t){super(t,t.rows,t.columns)}set(t,e,r){return this.matrix.set(t,this.columns-e-1,r),this}get(t,e){return this.matrix.get(t,this.columns-e-1)}},e.q0=class extends R{constructor(t){super(t,t.rows,t.columns)}set(t,e,r){return this.matrix.set(this.rows-t-1,e,r),this}get(t,e){return this.matrix.get(this.rows-t-1,e)}},e.lh=class extends R{constructor(t,e){g(t,e),super(t,e.length,t.columns),this.rowIndices=e}set(t,e,r){return this.matrix.set(this.rowIndices[t],e,r),this}get(t,e){return this.matrix.get(this.rowIndices[t],e)}},e.pI=class extends R{constructor(t,e){a(t,e),super(t,1,t.columns),this.row=e}set(t,e,r){return this.matrix.set(this.row,e,r),this}get(t,e){return this.matrix.get(this.row,e)}},e.zC=I,e.zg=class extends R{constructor(t,e,r,s,o){p(t,e,r,s,o),super(t,r-e+1,o-s+1),this.startRow=e,this.startColumn=s}set(t,e,r){return this.matrix.set(this.startRow+t,this.startColumn+e,r),this}get(t,e){return this.matrix.get(this.startRow+t,this.startColumn+e)}},e.g6=class extends R{constructor(t){super(t,t.columns,t.rows)}set(t,e,r){return this.matrix.set(e,t,r),this}get(t,e){return this.matrix.get(e,t)}},e.OL=$,e.ks=$,e.QR=C,e.jp=C,e.mk=P,e.W2=P,e.l=S,e.KY=q,e.dv=T,e.BR=function(t,e=t,r={}){t=new v(t);let o=!1;if("object"!=typeof e||v.isMatrix(e)||s.isAnyArray(e)?e=new v(e):(r=e,e=t,o=!0),t.rows!==e.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:n=!0,scale:i=!0}=r;n&&(t.center("column"),o||e.center("column")),i&&(t.scale("column"),o||e.scale("column"));const h=t.standardDeviation("column",{unbiased:!0}),l=o?h:e.standardDeviation("column",{unbiased:!0}),u=t.transpose().mmul(e);for(let e=0;e<u.rows;e++)for(let r=0;r<u.columns;r++)u.set(e,r,u.get(e,r)*(1/(h[e]*l[r]))*(1/(t.rows-1)));return u},e.Wu=function(t,e=t,r={}){t=new v(t);let o=!1;if("object"!=typeof e||v.isMatrix(e)||s.isAnyArray(e)?e=new v(e):(r=e,e=t,o=!0),t.rows!==e.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:n=!0}=r;n&&(t=t.center("column"),o||(e=e.center("column")));const i=t.transpose().mmul(e);for(let e=0;e<i.rows;e++)for(let r=0;r<i.columns;r++)i.set(e,r,i.get(e,r)*(1/(t.rows-1)));return i},e.a4=function t(e){if((e=v.checkMatrix(e)).isSquare()){if(0===e.columns)return 1;let r,s,o,n;if(2===e.columns)return r=e.get(0,0),s=e.get(0,1),o=e.get(1,0),n=e.get(1,1),r*n-s*o;if(3===e.columns){let n,i,h;return n=new I(e,[1,2],[1,2]),i=new I(e,[1,2],[0,2]),h=new I(e,[1,2],[0,1]),r=e.get(0,0),s=e.get(0,1),o=e.get(0,2),r*t(n)-s*t(i)+o*t(h)}return new A(e).determinant}throw Error("determinant can only be calculated for a square matrix")},e.DI=function(t,e=!1){return t=T.checkMatrix(t),e?new P(t).inverse():V(t,v.eye(t.rows))},e.Jo=function(t,e={}){const{thresholdValue:r=1e-9,thresholdError:s=1e-9}=e;let o=(t=v.checkMatrix(t)).rows,n=new v(o,o);for(let e=0;e<o;e++){let i=v.columnVector(t.getRow(e)),h=t.subMatrixRow(z(o,e)).transpose(),l=new P(h).solve(i),u=v.sub(i,h.mmul(l)).abs().max();n.setRow(e,j(u,l,e,r,s))}return n},e.Zi=function(t,e=Number.EPSILON){if((t=v.checkMatrix(t)).isEmpty())return t.transpose();let r=new P(t,{autoTranspose:!0}),s=r.leftSingularVectors,o=r.rightSingularVectors,n=r.diagonal;for(let t=0;t<n.length;t++)Math.abs(n[t])>e?n[t]=1/n[t]:n[t]=0;return o.mmul(v.diag(n).mmul(s.transpose()))},e.kH=V,e.LV=function(t,e){if(s.isAnyArray(t))return t[0]&&s.isAnyArray(t[0])?new T(t):new q(t,e);throw new Error("the argument is not an array")}},718:(t,e,r)=>{r.r(e),r.d(e,{default:()=>o});var s=r(788);function o(t){var e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(0,s.isAnyArray)(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");if(void 0!==r.output){if(!(0,s.isAnyArray)(r.output))throw new TypeError("output option must be an array if specified");e=r.output}else e=new Array(t.length);var o=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(0,s.isAnyArray)(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,o=void 0===r?0:r,n=e.toIndex,i=void 0===n?t.length:n;if(o<0||o>=t.length||!Number.isInteger(o))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=o||i>t.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var h=t[o],l=o+1;l<i;l++)t[l]<h&&(h=t[l]);return h}(t),n=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(0,s.isAnyArray)(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,o=void 0===r?0:r,n=e.toIndex,i=void 0===n?t.length:n;if(o<0||o>=t.length||!Number.isInteger(o))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=o||i>t.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var h=t[o],l=o+1;l<i;l++)t[l]>h&&(h=t[l]);return h}(t);if(o===n)throw new RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var i=r.min,h=void 0===i?r.autoMinMax?o:0:i,l=r.max,u=void 0===l?r.autoMinMax?n:1:l;if(h>=u)throw new RangeError("min option must be smaller than max option");for(var a=(u-h)/(n-o),c=0;c<t.length;c++)e[c]=(t[c]-o)*a+h;return e}},788:(t,e,r)=>{r.r(e),r.d(e,{isAnyArray:()=>o});const s=Object.prototype.toString;function o(t){const e=s.call(t);return e.endsWith("Array]")&&!e.includes("Big")}}},e={};function r(s){var o=e[s];if(void 0!==o)return o.exports;var n=e[s]={exports:{}};return t[s](n,n.exports,r),n.exports}r.d=(t,e)=>{for(var s in e)r.o(e,s)&&!r.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};class s{constructor(t=[],e=o){if(this.data=t,this.length=this.data.length,this.compare=e,this.length>0)for(let t=(this.length>>1)-1;t>=0;t--)this._down(t)}push(t){this.data.push(t),this.length++,this._up(this.length-1)}pop(){if(0===this.length)return;const t=this.data[0],e=this.data.pop();return this.length--,this.length>0&&(this.data[0]=e,this._down(0)),t}peek(){return this.data[0]}_up(t){const{data:e,compare:r}=this,s=e[t];for(;t>0;){const o=t-1>>1,n=e[o];if(r(s,n)>=0)break;e[t]=n,t=o}e[t]=s}_down(t){const{data:e,compare:r}=this,s=this.length>>1,o=e[t];for(;t<s;){let s=1+(t<<1),n=e[s];const i=s+1;if(i<this.length&&r(e[i],n)<0&&(s=i,n=e[i]),r(n,o)>=0)break;e[t]=n,t=s}e[t]=o}}function o(t,e){return t<e?-1:t>e?1:0}const n=t=>{let e=t-(t>>1&1431655765);return e=(e>>2&858993459)+(858993459&e),e=(e>>4)+e&252645135,e=(e>>8)+e&16711935,e=(e>>16)+e&65535,e},i=t=>{const{v1:e,v2:r}=t;let s=0;for(let t=0;t<e.length;t++){const o=(e[t]^r[t])>>>0;s+=n(o)}return s},h=({querypoint:t,keypoint:e,keycenterX:r,keycenterY:s,scaleOneOverLogK:o})=>{let n=t.angle-e.angle;n<=-Math.PI?n+=2*Math.PI:n>Math.PI&&(n-=2*Math.PI);const i=t.scale/e.scale,h=i*Math.cos(n),l=i*Math.sin(n),u=[h,-l,l,h],a=[u[0]*e.x+u[1]*e.y,u[2]*e.x+u[3]*e.y],c=t.x-a[0],f=t.y-a[1];return{x:u[0]*r+u[1]*s+c,y:u[2]*r+u[3]*s+f,angle:n,scale:Math.log(i)*o}},l=t=>{const{keywidth:e,keyheight:r,querywidth:s,queryheight:o,matches:n}=t,i=1.2*s,l=-i,u=1.2*o,a=-u,c=12,f=1/Math.log(10),m=Math.max(e,r),g=Math.floor(e/2),w=Math.floor(r/2),p=[];for(const t of n){const e=t.querypoint.scale,r=t.keypoint.scale;if(0==r){console.error("ERROR divide zero");continue}const s=e/r;p.push(s*m)}p.sort((t,e)=>t-e);const d=.25*p[Math.floor(p.length/2)-(p.length%2==0?1:0)-1],y=Math.max(5,Math.ceil((i-l)/d)),M=Math.max(5,Math.ceil((u-a)/d)),b=y*M,x=b*c,E=[],v=[],S={};for(const[t,e]of n.entries()){const{keypoint:r,querypoint:s}=e,{x:o,y:n,scale:m,angle:p}=h({querypoint:s,keypoint:r,keycenterX:g,keycenterY:w,scaleOneOverLogK:f});if(o<l||o>=i||n<a||n>=u||p<=-Math.PI||p>Math.PI||m<-1||m>=1){E[t]=!1;continue}const d=y*(o-l)/(i-l),k=M*(n-a)/(u-a),R=c*(p+Math.PI)/(2*Math.PI),I=10*(m- -1)/2;v[t]={binX:d,binY:k,binAngle:R,binScale:I};const q=Math.floor(d-.5),T=Math.floor(k-.5),A=Math.floor(I-.5),N=(Math.floor(R-.5)+c)%c;if(q<0||q+1>=y||T<0||T+1>=M||A<0||A+1>=10)E[t]=!1;else{for(let t=0;t<2;t++){const e=q+t;for(let t=0;t<2;t++){const r=T+t;for(let t=0;t<2;t++){const s=(N+t)%c;for(let t=0;t<2;t++){const o=e+r*y+s*b+(A+t)*x;void 0===S[o]&&(S[o]=0),S[o]+=1}}}}E[t]=!0}}let k=0,R=-1;if(Object.keys(S).forEach(t=>{const e=+t;S[e]>k&&(k=S[e],R=e)}),k<3)return[];const I=Math.floor(R%x%b%y),q=Math.floor((R-I)%x%b/y),T=Math.floor((R-I-q*y)%x/b),A=Math.floor((R-I-q*y-T*b)/x),N=[];for(let t=0;t<n.length;t++){if(!E[t])continue;const e=v[t];if(Math.abs(e.binX-(I+.5))>=1)continue;if(Math.abs(e.binY-(q+.5))>=1)continue;if(Math.abs(e.binScale-(A+.5))>=1)continue;const r=Math.abs(e.binAngle-(T+.5));Math.min(r,c-r)>=1||N.push(n[t])}return N},u=()=>({seed:1234,arrayShuffle(t){const{arr:e,sampleSize:r}=t;for(let t=0;t<r;t++){this.seed=(214013*this.seed+2531011)%(1<<31);let r=this.seed>>16&32767;r%=e.length;const s=e[t];e[t]=e[r],e[r]=s}},nextInt(t){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;return e%=t,e}}),a=(t,e)=>[t[0]-e[0],t[1]-e[1]],c=(t,e)=>{const r=t[0]*e[1]-t[1]*e[0];return.5*Math.abs(r)},f=(t,e,r)=>(e[0]-t[0])*(r[1]-t[1])-(e[1]-t[1])*(r[0]-t[0]),m=(t,e)=>{const r=(t=>{const e=t[4]*t[8]-t[5]*t[7],r=t[3]*t[8]-t[5]*t[6],s=t[3]*t[7]-t[4]*t[6];return t[0]*e-t[1]*r+t[2]*s})(t);if(Math.abs(r)<=e)return null;const s=1/r;return[(t[4]*t[8]-t[5]*t[7])*s,(t[2]*t[7]-t[1]*t[8])*s,(t[1]*t[5]-t[2]*t[4])*s,(t[5]*t[6]-t[3]*t[8])*s,(t[0]*t[8]-t[2]*t[6])*s,(t[2]*t[3]-t[0]*t[5])*s,(t[3]*t[7]-t[4]*t[6])*s,(t[1]*t[6]-t[0]*t[7])*s,(t[0]*t[4]-t[1]*t[3])*s]},g=(t,e)=>{const r=e[6]*t[0]+e[7]*t[1]+e[8];return[(e[0]*t[0]+e[1]*t[1]+e[2])/r,(e[3]*t[0]+e[4]*t[1]+e[5])/r]},w=(t,e,r,s,o,n,i,h)=>f(t,e,r)>0==f(o,n,i)>0&&f(e,r,s)>0==f(n,i,h)>0&&f(r,s,t)>0==f(i,h,o)>0&&f(s,t,e)>0==f(h,o,n)>0,p=(t,e,r,s,o,n)=>f(t,e,r)>0==f(s,o,n)>0;var d=r(673);d.y3,d.jy,d.oN,d.Hc,d.cg,d.hj,d.LU,d.Tb;const y=d.uq,M=(d.Zm,d.Dq,d.__,d.q0,d.lh,d.pI,d.zC,d.zg,d.g6,d.OL,d.ks,d.QR,d.jp,d.mk,d.W2,d.l,d.KY,d.dv,d.BR,d.Wu,d.uq,d.uq,d.a4,d.DI),b=(d.Jo,d.Zi,d.kH,d.LV,t=>{let e=0,r=0;for(const s of t)e+=s[0],r+=s[1];const s=e/t.length,o=r/t.length;let n=0;for(const e of t){const t=e[0]-s,r=e[1]-o;n+=Math.sqrt(t*t+r*r)}const i=Math.sqrt(2)*t.length/n,h=[];for(const e of t)h.push([(e[0]-s)*i,(e[1]-o)*i]);return{normPoints:h,param:{meanX:s,meanY:o,s:i}}}),x=(t,e)=>{const{normPoints:r,param:s}=b(t),{normPoints:o,param:n}=b(e),i=o.length,h=[],l=[];for(let t=0;t<i;t++){const e=[r[t][0],r[t][1],1,0,0,0,-r[t][0]*o[t][0],-r[t][1]*o[t][0]],s=[0,0,0,r[t][0],r[t][1],1,-r[t][0]*o[t][1],-r[t][1]*o[t][1]];h.push(e),h.push(s),l.push([o[t][0]]),l.push([o[t][1]])}try{const t=new y(h),e=new y(l),r=t.transpose(),o=r.mmul(t),i=r.mmul(e),u=((t,e,r)=>{const s=r.s*r.meanX,o=r.s*r.meanY,n=[t[0]+s*t[6],t[1]+s*t[7],(t[0]+s*t[6])*-e.meanX+(t[1]+s*t[7])*-e.meanY+(t[2]+s)/e.s,t[3]+o*t[6],t[4]+o*t[7],(t[3]+o*t[6])*-e.meanX+(t[4]+o*t[7])*-e.meanY+(t[5]+o)/e.s,r.s*t[6],r.s*t[7],r.s*t[6]*-e.meanX+r.s*t[7]*-e.meanY+r.s/e.s];for(let t=0;t<9;t++)n[t]=n[t]/n[8];return n})(M(o).mmul(i).to1DArray(),s,n);return u}catch(t){return null}},E=({H:t,testPoints:e,keyframe:r})=>{const s=m(t,1e-5);if(null===s)return!1;const o=[];for(const t of e)o.push(g(t,s));return!(((t,e,r,s)=>{const o=a(e,t),n=a(r,t),i=a(s,t),h=a(e,r),l=a(s,r),u=c(o,n),f=c(n,i),m=c(o,i),g=c(h,l);return Math.min(u,f,m,g)})(o[0],o[1],o[2],o[3])<r.width*r.height*1e-4||!((t,e,r,s)=>{const o=f(t,e,r)<=0;return f(e,r,s)<=0===o&&f(r,s,t)<=0===o&&f(s,t,e)<=0===o})(o[0],o[1],o[2],o[3]))},v=({inH:t})=>{const e=1/t[8],r=[];for(let s=0;s<8;s++)r[s]=t[s]*e;return r[8]=1,r},S=({H:t,srcPoint:e,dstPoint:r,oneOverScaleSqr:s})=>{const o=g(e,t),n=[o[0]-r[0],o[1]-r[1]];return Math.log(1+(n[0]*n[0]+n[1]*n[1])*s)},k=({H:t,testPoints:e})=>{const r=[];for(const[s,o]of e.entries())r[s]=g(o,t);for(let t=0;t<e.length;t++){const s=t,o=(t+1)%e.length,n=(t+2)%e.length;if(!p(e[s],e[o],e[n],r[s],r[o],r[n]))return!1}return!0},R=t=>{const{dstPoints:e,keyframe:r,srcPoints:s,quickMode:o}=t,n=[[0,0],[r.width,0],[r.width,r.height],[0,r.height]];if(s.length<4)return null;const i=Math.min(10,s.length),h=u(),l=s.map((t,e)=>e);h.arrayShuffle({arr:l,sampleSize:l.length});const a=o?10:20,c=2*a;let f=0;const m=[];for(;f<c&&m.length<a;){if(f+=1,h.arrayShuffle({arr:l,sampleSize:4}),!w(s[l[0]],s[l[1]],s[l[2]],s[l[3]],e[l[0]],e[l[1]],e[l[2]],e[l[3]]))continue;const t=x([s[l[0]],s[l[1]],s[l[2]],s[l[3]]],[e[l[0]],e[l[1]],e[l[2]],e[l[3]]]);null!==t&&k({H:t,testPoints:n})&&m.push(t)}if(0===m.length)return null;const g=[];for(const t of m)g.push({H:t,cost:0});let p=i;for(let t=0;t<s.length&&g.length>2;t+=p){p=Math.min(i,s.length-t);const r=t+p;for(let o=0;o<g.length;o++)for(let n=t;n<r;n++){const t=S({H:g[o].H,srcPoint:s[n],dstPoint:e[n],oneOverScaleSqr:1e4});g[o].cost+=t}g.sort((t,e)=>t.cost-e.cost),g.splice(-Math.floor((g.length+1)/2))}let d=null;for(let t=0;t<g.length;t++){const e=v({inH:g[t].H});if(E({H:e,testPoints:n,keyframe:r})){d=e;break}}return d},I=t=>null==t,q=({node:t,keypoints:e,querypoint:r,queue:s,keypointIndexes:o,numPop:n})=>{if(t.leaf){for(const e of t.pointIndexes)o.push(e);return}const h=[];for(const s of t.children){const t=s.centerPointIndex;if(I(t))continue;const o=i({v1:e[t].descriptors,v2:r.descriptors});h.push(o)}const l=Math.min(Number.MAX_SAFE_INTEGER,...h);for(const[e,r]of t.children.entries())h[e]!==l&&s.push({node:r,d:h[e]});for(const[i,u]of t.children.entries())h[i]===l&&q({node:u,keypoints:e,querypoint:r,queue:s,keypointIndexes:o,numPop:n});if(n<8&&s.length>0){const t=s.pop();if(t){const{node:i}=t;q({node:i,keypoints:e,querypoint:r,queue:s,keypointIndexes:o,numPop:n+=1})}}},T=t=>{const{H:e,matches:r,threshold:s}=t,o=s**2,n=[];for(const t of r){const{querypoint:r,keypoint:s}=t,i=g([s.x,s.y],e);(i[0]-r.x)*(i[0]-r.x)+(i[1]-r.y)*(i[1]-r.y)<=o&&n.push(t)}return n},A=t=>{const{keyframe:e,querypoints:r,querywidth:o,queryheight:n,debugMode:h}=t,u={},a=(t=>{const{keyframe:e,querypoints:r}=t,o=[];for(const t of r){const r=t.maxima?e.maximaPoints:e.minimaPoints;if(0===r.length)continue;const n=t.maxima?e.maximaPointsCluster.rootNode:e.minimaPointsCluster.rootNode,h=[],l=new s([],(t,e)=>t.d-e.d);q({node:n,keypoints:r,querypoint:t,queue:l,keypointIndexes:h,numPop:0});let u=-1,a=Number.MAX_SAFE_INTEGER,c=Number.MAX_SAFE_INTEGER;for(let e=0;e<h.length;e++){const s=r[h[e]],o=i({v1:s.descriptors,v2:t.descriptors});o<a?(c=a,a=o,u=h[e]):o<c&&(c=o)}-1!==u&&(c===Number.MAX_SAFE_INTEGER||1*a/c<.7)&&o.push({querypoint:t,keypoint:r[u]})}return o})({keyframe:e,querypoints:r});if(h&&(u.matches=a),a.length<6)return{debugExtra:u};const c=l({keywidth:e.width,keyheight:e.height,querywidth:o,queryheight:n,matches:a});h&&(u.houghMatches=c);const f=R({srcPoints:c.map(t=>[t.keypoint.x,t.keypoint.y]),dstPoints:c.map(t=>[t.querypoint.x,t.querypoint.y]),keyframe:e});if(null===f)return{debugExtra:u};const w=T({H:f,matches:c,threshold:3});if(h&&(u.inlierMatches=w),w.length<6)return{debugExtra:u};const p=m(f,1e-5);if(!p)return{debugExtra:u};const d=(t=>{const{keyframe:e,querypoints:r,HInv:s}=t,o=[];for(const t of r){const r=g([t.x,t.y],s);let n=-1,h=Number.MAX_SAFE_INTEGER,l=Number.MAX_SAFE_INTEGER;const u=t.maxima?e.maximaPoints:e.minimaPoints;for(const[e,s]of u.entries()){if((s.x-r[0])**2+(s.y-r[1])**2>100)continue;const o=i({v1:s.descriptors,v2:t.descriptors});o<h?(l=h,h=o,n=e):o<l&&(l=o)}-1!==n&&(l===Number.MAX_SAFE_INTEGER||1*h/l<.7)&&o.push({querypoint:t,keypoint:u[n]})}return o})({keyframe:e,querypoints:r,HInv:p});h&&(u.matches2=d);const y=l({keywidth:e.width,keyheight:e.height,querywidth:o,queryheight:n,matches:d});h&&(u.houghMatches2=y);const M=R({srcPoints:y.map(t=>[t.keypoint.x,t.keypoint.y]),dstPoints:y.map(t=>[t.querypoint.x,t.querypoint.y]),keyframe:e});if(null===M)return{debugExtra:u};const b=T({H:M,matches:y,threshold:3});return h&&(u.inlierMatches2=b),{H:M,matches:b,debugExtra:u}},N=class{queryWidth;queryHeight;debugMode;constructor(t,e,r=!1){this.queryWidth=t,this.queryHeight=e,this.debugMode=r}matchDetection(t,e){const r={frames:[]};let s=null;for(const[o,n]of t.entries()){const t=A({keyframe:n,querypoints:e,querywidth:this.queryWidth,queryheight:this.queryHeight,debugMode:this.debugMode});if(!t)continue;const{H:i,matches:h,debugExtra:l}=t;r.frames.push(l),i&&(null===s||(s?.matches?.length??0<h.length))&&(s={keyframeIndex:o,matches:h,H:i})}if(null===s||!s.matches)return{keyframeIndex:-1,debugExtra:r};const o=[],n=[],i=t[s.keyframeIndex];for(const t of s.matches){const e=t.querypoint,r=t.keypoint;o.push({x:e.x,y:e.y}),n.push({x:(r.x+.5)/i.scale,y:(r.y+.5)/i.scale,z:0})}return{keyframeIndex:s.keyframeIndex,screenCoords:o,worldCoords:n,debugExtra:r}}},C=(t,e)=>[[t[0][0]*e[0][0]+t[0][2]*e[2][0],t[0][0]*e[0][1]+t[0][2]*e[2][1],t[0][0]*e[0][2]+t[0][2]*e[2][2],t[0][0]*e[0][3]+t[0][2]*e[2][3]],[t[1][1]*e[1][0]+t[1][2]*e[2][0],t[1][1]*e[1][1]+t[1][2]*e[2][1],t[1][1]*e[1][2]+t[1][2]*e[2][2],t[1][1]*e[1][3]+t[1][2]*e[2][3]],[e[2][0],e[2][1],e[2][2],e[2][3]]],P=(t,e,r,s=0)=>({x:t[0][0]*e+t[0][1]*r+t[0][3],y:t[1][0]*e+t[1][1]*r+t[1][3],z:t[2][0]*e+t[2][1]*r+t[2][3]}),V=(t,e,r,s=0)=>{const o=P(t,e,r,s),{x:n,y:i,z:h}=o;return{x:n/h,y:i/h}},z=[[],[],[]],j=[[],[]],F=[[],[],[]],D=({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:s,inlierProb:o})=>{const n=o<1;let i=t,h=0,l=0;const u=new Array(r.length),a=new Array(r.length),c=new Array(r.length),f=new Array(r.length);for(let t=0;t<=10;t++){const m=C(e,i);for(let t=0;t<r.length;t++){const e=V(m,r[t].x,r[t].y,r[t].z),o=s[t].x-e.x,n=s[t].y-e.y;c[t]=o,f[t]=n,u[t]=o**2+n**2}let g=0;if(l=0,n){const t=Math.max(3,Math.floor(r.length*o)-1);for(let t=0;t<r.length;t++)a[t]=u[t];a.sort((t,e)=>t-e),g=Math.max(4*a[t],16);for(let t=0;t<r.length;t++)a[t]>g?l+=g/6:l+=g/6*(1-(1-a[t]/g)*(1-a[t]/g)*(1-a[t]/g))}else l=u.reduce((t,e)=>t+e,0);if(l/=r.length,l<.1)break;if(t>0&&l/h>.99)break;if(10===t)break;h=l;const w=[],p=[];for(let t=0;t<r.length;t++){if(n&&u[t]>g)continue;const s=L({modelViewProjectionTransform:m,modelViewTransform:i,projectionTransform:e,worldCoord:r[t]});if(n){const e=(1-u[t]/g)*(1-u[t]/g);for(let t=0;t<2;t++)for(let r=0;r<6;r++)s[t][r]*=e;w.push([c[t]*e]),w.push([f[t]*e])}else w.push([c[t]]),w.push([f[t]]);for(let t=0;t<s.length;t++)p.push(s[t])}const d=$({dU:w,J_U_S:p});if(null===d)break;i=_({modelViewTransform:i,dS:d})}return{modelViewTransform:i,err:l}},_=({modelViewTransform:t,dS:e})=>{let r,s,o,n=e[0]**2+e[1]**2+e[2]**2;n<1e-6?(r=1,s=0,o=0,n=0):(n=Math.sqrt(n),r=e[0]/n,s=e[1]/n,o=e[2]/n);const i=Math.cos(n),h=Math.sin(n),l=1-i;z[0][0]=r*r*l+i,z[0][1]=r*s*l-o*h,z[0][2]=r*o*l+s*h,z[0][3]=e[3],z[1][0]=s*r*l+o*h,z[1][1]=s*s*l+i,z[1][2]=s*o*l-r*h,z[1][3]=e[4],z[2][0]=o*r*l-s*h,z[2][1]=o*s*l+r*h,z[2][2]=o*o*l+i,z[2][3]=e[5];const u=[[],[],[]];for(let e=0;e<3;e++){for(let r=0;r<4;r++)u[e][r]=t[e][0]*z[0][r]+t[e][1]*z[1][r]+t[e][2]*z[2][r];u[e][3]+=t[e][3]}return u},$=({dU:t,J_U_S:e})=>{const r=new y(e),s=new y(t),o=r.transpose(),n=o.mmul(r),i=o.mmul(s);let h;try{h=M(n)}catch(t){return null}return h.mmul(i).to1DArray()},L=({modelViewProjectionTransform:t,modelViewTransform:e,projectionTransform:r,worldCoord:s})=>{const o=e,{x:n,y:i,z:h}=s,l=P(t,n,i,h),u=l.z*l.z;j[0][0]=r[0][0]*l.z/u,j[0][1]=r[0][1]*l.z/u,j[0][2]=(r[0][2]*l.z-r[2][2]*l.x)/u,j[1][0]=r[1][0]*l.z/u,j[1][1]=r[1][1]*l.z/u,j[1][2]=(r[1][2]*l.z-r[2][2]*l.y)/u,F[0][0]=o[0][2]*i,F[0][1]=-o[0][2]*n,F[0][2]=o[0][1]*n-o[0][0]*i,F[0][3]=o[0][0],F[0][4]=o[0][1],F[0][5]=o[0][2],F[1][0]=o[1][2]*i,F[1][1]=-o[1][2]*n,F[1][2]=o[1][1]*n-o[1][0]*i,F[1][3]=o[1][0],F[1][4]=o[1][1],F[1][5]=o[1][2],F[2][0]=o[2][2]*i,F[2][1]=-o[2][2]*n,F[2][2]=o[2][1]*n-o[2][0]*i,F[2][3]=o[2][0],F[2][4]=o[2][1],F[2][5]=o[2][2];const a=[[],[]];for(let t=0;t<2;t++)for(let e=0;e<6;e++){a[t][e]=0;for(let r=0;r<3;r++)a[t][e]+=j[t][r]*F[r][e]}return a},H=class{projectionTransform;constructor(t){this.projectionTransform=t}estimate({screenCoords:t,worldCoords:e}){return(t=>{const{projectionTransform:e,screenCoords:r,worldCoords:s}=t,o=x(s.map(t=>[t.x,t.y]),r.map(t=>[t.x,t.y]));if(!o)return null;const n=new y([[o[0],o[1],o[2]],[o[3],o[4],o[5]],[o[6],o[7],o[8]]]),i=new y(e),h=M(i).mmul(n).to1DArray(),l=Math.sqrt(h[0]*h[0]+h[3]*h[3]+h[6]*h[6]),u=Math.sqrt(h[1]*h[1]+h[4]*h[4]+h[7]*h[7]),a=(l+u)/2,c=[];c[0]=h[0]/l,c[3]=h[3]/l,c[6]=h[6]/l,c[1]=h[1]/u,c[4]=h[4]/u,c[7]=h[7]/u,c[2]=c[3]*c[7]-c[6]*c[4],c[5]=c[6]*c[1]-c[0]*c[7],c[8]=c[0]*c[4]-c[1]*c[3];const f=Math.sqrt(c[2]*c[2]+c[5]*c[5]+c[8]*c[8]);c[2]/=f,c[5]/=f,c[8]/=f;const m=[];return m[0]=h[2]/a,m[1]=h[5]/a,m[2]=h[8]/a,[[c[0],c[1],c[2],m[0]],[c[3],c[4],c[5],m[1]],[c[6],c[7],c[8],m[2]]]})({screenCoords:t,worldCoords:e,projectionTransform:this.projectionTransform})}refineEstimate({initialModelViewTransform:t,worldCoords:e,screenCoords:r}){return(({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:s})=>{const o=r.reduce((t,e)=>t+e.x,0)/r.length,n=r.reduce((t,e)=>t+e.y,0)/r.length,i=[];for(const t of r)i.push({x:t.x-o,y:t.y-n,z:t.z});const h=[[],[],[]];for(let e=0;e<3;e++)for(let r=0;r<3;r++)h[e][r]=t[e][r];h[0][3]=t[0][0]*o+t[0][1]*n+t[0][3],h[1][3]=t[1][0]*o+t[1][1]*n+t[1][3],h[2][3]=t[2][0]*o+t[2][1]*n+t[2][3];const l=[1,.8,.6,.4,0];let u=h,a=null;for(const t of l){const r=D({initialModelViewTransform:u,projectionTransform:e,worldCoords:i,screenCoords:s,inlierProb:t});if(u=r.modelViewTransform,r.err<5){a=u;break}}return null===a?null:(a[0][3]=a[0][3]-a[0][0]*o-a[0][1]*n,a[1][3]=a[1][3]-a[1][0]*o-a[1][1]*n,a[2][3]=a[2][3]-a[2][0]*o-a[2][1]*n,a)})({initialModelViewTransform:t,worldCoords:e,screenCoords:r,projectionTransform:this.projectionTransform})}};let O,U,X=[],Y=!1;onmessage=t=>{const{data:e}=t;switch(e.type){case"setup":(t=>{X=t.matchingDataList,Y=t.debugMode,O=new N(t.inputWidth,t.inputHeight,Y),U=new H(t.projectionTransform)})(e);break;case"match":(t=>{const e=t.targetIndexes;let r=-1,s=null,o=null;for(const n of e){const{keyframeIndex:e,screenCoords:i,worldCoords:h,debugExtra:l}=O.matchDetection(X[n],t.featurePoints);if(o=l,-1!==e){const t=U.estimate({screenCoords:i,worldCoords:h});t&&(r=n,s=t);break}}postMessage({type:"matchDone",targetIndex:r,modelViewTransform:s,debugExtra:o})})(e);break;case"trackUpdate":(t=>{const{modelViewTransform:e,worldCoords:r,screenCoords:s}=t,o=U.refineEstimate({initialModelViewTransform:e,screenCoords:s,worldCoords:r});postMessage({type:"trackUpdateDone",modelViewTransform:o})})(e)}}})();',"Worker",void 0,void 0)}const XJ="updateMatrix",KJ=class{inputWidth;inputHeight;maxTrack;filterMinCF;filterBeta;warmupTolerance;missTolerance;cropDetector;inputLoader;markerDimensions;onUpdate;debugMode;processingVideo;interestedTargetIndex;projectionTransform;projectionMatrix;worker;workerMatchDone;workerTrackDone;trackingStates;tracker;constructor({inputWidth:t,inputHeight:e,onUpdate:n=null,debugMode:r=!1,maxTrack:i=1,warmupTolerance:s=null,missTolerance:a=null,filterMinCF:o=null,filterBeta:l=null}){this.inputHeight=e,this.inputWidth=t,this.maxTrack=i,this.filterMinCF=rJ(o)?.001:o,this.filterBeta=rJ(l)?1e3:l,this.warmupTolerance=rJ(s)?5:s,this.missTolerance=rJ(a)?5:a,this.cropDetector=new oJ(this.inputWidth,this.inputHeight,r),this.inputLoader=new WJ(this.inputWidth,this.inputHeight),this.markerDimensions=[],this.onUpdate=n,this.debugMode=r,this.processingVideo=!1,this.interestedTargetIndex=-1,this.trackingStates=[];const u=45*Math.PI/180,c=this.inputHeight/2/Math.tan(u/2);this.projectionTransform=[[c,0,this.inputWidth/2],[0,c,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:10,far:1e5}),this.worker=new qJ,this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=t=>{switch(t.data.type){case"matchDone":this.workerMatchDone?.(t.data);break;case"trackUpdateDone":this.workerTrackDone?.(t.data)}}}showTFStats(){console.log(Jb().numTensors),console.table(Jb())}addImageTargets(t){return new Promise(async e=>{const n=await fetch(t),r=await n.arrayBuffer();e(this.addImageTargetsFromBuffer(r))})}addImageTargetsFromBuffer(t){const e=(new VJ).importData(t),n=[],r=[],i=[];for(const t of e)r.push(t.matchingData),n.push(t.trackingData),i.push([t.targetImage.width,t.targetImage.height]);return this.tracker=new nJ(i,n,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:r}),this.markerDimensions=i,{dimensions:i,matchingDataList:r,trackingDataList:n}}dummyRun(t){const e=this.inputLoader.loadInput(t);this.cropDetector.detect(e),this.tracker.dummyRun(e),e.dispose()}getProjectionMatrix(){return this.projectionMatrix}getWorldMatrix(t,e){return this._glModelViewMatrix(t,e)}async _detectAndMatch(t,e){const{featurePoints:n}=this.cropDetector.detectMoving(t),{targetIndex:r,modelViewTransform:i}=await this._workerMatch(n,e);return{targetIndex:r,modelViewTransform:i}}async _trackAndUpdate(t,e,n){const{worldCoords:r,screenCoords:i}=await this.tracker.track(t,e,n);return r.length<4?null:await this._workerTrackUpdate(e,{worldCoords:r,screenCoords:i})}_glProjectionMatrix(t){const{projectionTransform:e,width:n,height:r,near:i,far:s}=t,a=[[2*e[0][0]/n,0,-(2*e[0][2]/n-1),0],[0,2*e[1][1]/r,-(2*e[1][2]/r-1),0],[0,0,-(s+i)/(s-i),-2*s*i/(s-i)],[0,0,-1,0]],o=[];for(let t=0;t<4;t++)for(let e=0;e<4;e++)o.push(a[e][t]);return o}_glModelViewMatrix(t,e){const n=this.markerDimensions[e][1];return[t[0][0],-t[1][0],-t[2][0],0,-t[0][1],t[1][1],t[2][1],0,-t[0][2],t[1][2],t[2][2],0,t[0][1]*n+t[0][3],-(t[1][1]*n+t[1][3]),-(t[2][1]*n+t[2][3]),1]}async _matchImageTarget(t,e){if(t>=this.maxTrack)return;const n=[];for(const[t,e]of this.trackingStates.entries())e.isTracking||-1!==this.interestedTargetIndex&&this.interestedTargetIndex!==t||n.push(t);const{targetIndex:r,modelViewTransform:i}=await this._detectAndMatch(e,n);-1!==r&&(this.trackingStates[r].isTracking=!0,this.trackingStates[r].currentModelViewTransform=i)}async _updateTrackingState(t,e){const n=this.trackingStates[e];if(!n.isTracking||!n.currentModelViewTransform)return;const r=await this._trackAndUpdate(t,n.currentModelViewTransform,e);null!==r?n.currentModelViewTransform=r:n.isTracking=!1}_showAfterWarmup(t){const e=this.trackingStates[t];!e.showing&&e.isTracking&&(e.trackMiss=0,e.trackCount++,e.trackCount<=this.warmupTolerance||(e.showing=!0,e.trackingMatrix=null,e.filter.reset()))}_hideAfterMiss(t){const e=this.trackingStates[t];e.showing&&(e.isTracking?e.trackMiss=0:(e.trackCount=0,e.trackMiss++,e.trackMiss<this.missTolerance||(e.showing=!1,e.trackingMatrix=null,this.onUpdate?.({type:XJ,targetIndex:t,worldMatrix:null}))))}_onTrackShow(t){const e=this.trackingStates[t];if(!e.showing||!e.currentModelViewTransform)return;const n=this._glModelViewMatrix(e.currentModelViewTransform,t);e.trackingMatrix=e.filter.filter(Date.now(),n),this.onUpdate?.({type:XJ,worldMatrix:sJ(e.trackingMatrix),targetIndex:t})}async _doVideoProcessing(t){for(;this.processingVideo;){const e=this.inputLoader.loadInput(t),n=this.trackingStates.reduce((t,e)=>t+(e.isTracking?1:0),0);await this._matchImageTarget(n,e);for(const[t]of this.trackingStates.entries())await this._updateTrackingState(e,t),this._showAfterWarmup(t),this._hideAfterMiss(t),this._onTrackShow(t);e.dispose(),this.onUpdate?.({type:"processDone"}),await XM()}}processVideo(t){if(!this.processingVideo){this.processingVideo=!0,this.trackingStates=[];for(let t=0;t<this.maxTrack;t++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0,filter:new jJ({minCutOff:this.filterMinCF,beta:this.filterBeta})});this._doVideoProcessing(t)}}stopProcessVideo(){this.processingVideo=!1}async detect(t){const e=this.inputLoader.loadInput(t),{featurePoints:n,debugExtra:r}=await this.cropDetector.detect(e);return e.dispose(),{featurePoints:n,debugExtra:r}}async match(t,e){const{modelViewTransform:n,debugExtra:r}=await this._workerMatch(t,[e]);return{modelViewTransform:n,debugExtra:r}}async _workerMatch(t,e){return new Promise(async n=>{this.workerMatchDone=t=>{n({targetIndex:t.targetIndex,modelViewTransform:t.modelViewTransform,debugExtra:t.debugExtra})},this.worker.postMessage({type:"match",featurePoints:t,targetIndexes:e})})}async track(t,e,n){const r=this.inputLoader.loadInput(t),i=this.tracker.track(r,e,n);return r.dispose(),i}async trackUpdate(t,e){return e.worldCoords.length<4?null:await this._workerTrackUpdate(t,e)}async _workerTrackUpdate(t,e){return new Promise(async n=>{this.workerTrackDone=t=>{n(t.modelViewTransform)};const{worldCoords:r,screenCoords:i}=e;this.worker.postMessage({type:"trackUpdate",modelViewTransform:t,screenCoords:i,worldCoords:r})})}};var YJ=n(72),ZJ=n.n(YJ),JJ=n(825),QJ=n.n(JJ),tQ=n(659),eQ=n.n(tQ),nQ=n(56),rQ=n.n(nQ),iQ=n(540),sQ=n.n(iQ),aQ=n(113),oQ=n.n(aQ),lQ=n(19),uQ={};uQ.styleTagTransform=oQ(),uQ.setAttributes=rQ(),uQ.insert=eQ().bind(null,"head"),uQ.domAPI=QJ(),uQ.insertStyleElement=sQ(),ZJ()(lQ.A,uQ),lQ.A&&lQ.A.locals&&lQ.A.locals;const cQ="yes",hQ="hidden",dQ=class{loadingModal;compatibilityModal;scanningMask;constructor({uiLoading:t,uiScanning:e,uiError:n}){this.loadingModal=t===cQ?this._loadHTML('<div class="mindar-ui-overlay mindar-ui-loading"> <div class="loader"/> </div> '):document.querySelector(t),this.compatibilityModal=n===cQ?this._loadHTML('<div class="mindar-ui-overlay mindar-ui-compatibility"> <div class="content"> <h1>Failed to launch :(</h1> <p> Looks like your device/browser is not compatible. </p> <br/> <br/> <p> Please try the following recommended browsers: </p> <p> For Android device - Chrome </p> <p> For iOS device - Safari </p> </div> </div> '):document.querySelector(n),this.scanningMask=e===cQ?this._loadHTML('<div class="mindar-ui-overlay mindar-ui-scanning"> <div class="scanning"> <div class="inner"> <div class="scanline"/> </div> </div> </div> '):document.querySelector(e),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove(hQ)}hideLoading(){this.loadingModal&&this.loadingModal.classList.add(hQ)}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove(hQ)}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add(hQ)}showScanning(){this.scanningMask&&this.scanningMask.classList.remove(hQ)}hideScanning(){this.scanningMask&&this.scanningMask.classList.add(hQ)}_loadHTML(t){const e=document.createElement("template");e.innerHTML=t.trim();const n=e.content.firstChild,r=document.querySelector("a-scene");return r?r.appendChild(n):console.error("Scene element not found"),n}},pQ=new hi;pQ.compose(new sr,new ir,new sr(.001,.001,.001));window.MINDAR.IMAGE.MindARThree||(window.MINDAR.IMAGE.MindARThree=class{container;imageTargetSrc;maxTrack;filterMinCF;filterBeta;warmupTolerance;missTolerance;ui;scene;cssScene;renderer;cssRenderer;camera;anchors;controller;video;postMatrixs;constructor({container:t,imageTargetSrc:e,maxTrack:n,uiLoading:r="yes",uiScanning:i="yes",uiError:s="yes",filterMinCF:a=null,filterBeta:o=null,warmupTolerance:l=null,missTolerance:u=null}){this.container=t,this.imageTargetSrc=e,this.maxTrack=n,this.filterMinCF=a,this.filterBeta=o,this.warmupTolerance=l,this.missTolerance=u,this.ui=new dQ({uiLoading:r,uiScanning:i,uiError:s}),this.scene=new pa,this.cssScene=new pa,this.renderer=new xm({antialias:!0,alpha:!0}),this.cssRenderer=new Sm,this.renderer.outputColorSpace=tn,this.renderer.setPixelRatio(window.devicePixelRatio),this.camera=new ra,this.anchors=[],this.renderer.domElement.style.position="absolute",this.cssRenderer.domElement.style.position="absolute",this.container.appendChild(this.renderer.domElement),this.container.appendChild(this.cssRenderer.domElement),window.addEventListener("resize",this.resize.bind(this))}async start(){this.ui.showLoading(),await this._startVideo(),await this._startAR()}stop(){this.controller.stopProcessVideo();const{srcObject:t}=this.video;t&&(t.getTracks().forEach(t=>{t.stop()}),this.video.remove())}addAnchor(t){const e=new la;e.visible=!1,e.matrixAutoUpdate=!1;const n={group:e,targetIndex:t,onTargetFound:null,onTargetLost:null,css:!1,visible:!1};return this.anchors.push(n),this.scene.add(e),n}addCSSAnchor(t){const e=new la;e.visible=!1,e.matrixAutoUpdate=!1;const n={group:e,targetIndex:t,onTargetFound:null,onTargetLost:null,css:!0,visible:!1};return this.anchors.push(n),this.cssScene.add(e),n}_startVideo(){return new Promise(async(t,e)=>{if(this.video=document.createElement("video"),this.video.setAttribute("autoplay",""),this.video.setAttribute("muted",""),this.video.setAttribute("playsinline",""),this.video.style.position="absolute",this.video.style.top="0px",this.video.style.left="0px",this.video.style.zIndex="-2",this.container.appendChild(this.video),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return this.ui.showCompatibility(),void e();try{const e=await navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"environment"}});this.video.addEventListener("loadedmetadata",()=>{this.video.setAttribute("width",this.video.videoWidth.toString()),this.video.setAttribute("height",this.video.videoHeight.toString()),t()}),this.video.srcObject=e}catch(t){console.log("getUserMedia error",t),e()}})}_startAR(){return new Promise(async t=>{this.controller=new KJ({inputWidth:this.video.videoWidth,inputHeight:this.video.videoHeight,filterMinCF:this.filterMinCF,filterBeta:this.filterBeta,warmupTolerance:this.warmupTolerance,missTolerance:this.missTolerance,maxTrack:this.maxTrack,onUpdate:t=>{if(t.type===XJ){const{targetIndex:e,worldMatrix:n}=t;for(let t=0;t<this.anchors.length;t++)if(this.anchors[t].targetIndex===e){if(this.anchors[t].css?this.anchors[t].group.children.forEach(t=>{t.element.style.visibility=n?"visible":"hidden"}):this.anchors[t].group.visible=!!n,n){const r=new hi;r.elements=[...n],r.multiply(this.postMatrixs[e]),this.anchors[t].css&&r.multiply(pQ),this.anchors[t].group.matrix=r}this.anchors[t].visible&&!n&&(this.anchors[t].visible=!1,this.anchors[t].onTargetLost?.()),!this.anchors[t].visible&&n&&(this.anchors[t].visible=!0,this.anchors[t].onTargetFound?.()),n&&this.ui.hideScanning()}}}}),this.resize();const{dimensions:e}=await this.controller.addImageTargets(this.imageTargetSrc);this.postMatrixs=[];for(let t=0;t<e.length;t++){const n=new sr,r=new ir,i=new sr,[s,a]=e[t];n.x=s/2,n.y=s/2+(a-s)/2,i.x=s,i.y=s,i.z=s;const o=new hi;o.compose(n,r,i),this.postMatrixs.push(o)}await this.controller.dummyRun(this.video),this.ui.hideLoading(),this.ui.showScanning(),this.controller.processVideo(this.video),t()})}resize(){const{renderer:t,cssRenderer:e,camera:n,container:r,video:i,controller:s}=this;if(!i||!s)return;let a,o;const l=i.videoWidth/i.videoHeight;l>r.clientWidth/r.clientHeight?(o=r.clientHeight,a=o*l):(a=r.clientWidth,o=a/l);const u=s.getProjectionMatrix(),c=2*Math.atan(1/u[5]/o*r.clientHeight)*180/Math.PI,h=u[14]/(u[10]-1),d=u[14]/(u[10]+1);n.fov=c,n.near=h,n.far=d,n.aspect=r.clientWidth/r.clientHeight,n.updateProjectionMatrix(),i.style.top=-(o-r.clientHeight)/2+"px",i.style.left=-(a-r.clientWidth)/2+"px",i.style.width=a+"px",i.style.height=o+"px";const p=t.domElement,f=e.domElement;p.style.position="absolute",p.style.left="0",p.style.top="0",p.style.width=r.clientWidth+"px",p.style.height=r.clientHeight+"px",f.style.position="absolute",f.style.left="0",f.style.top="0",f.style.width=r.clientWidth+"px",f.style.height=r.clientHeight+"px",t.setSize(r.clientWidth,r.clientHeight),e.setSize(r.clientWidth,r.clientHeight)}}),window.MINDAR.IMAGE.THREE||(window.MINDAR.IMAGE.THREE=t)})()})();